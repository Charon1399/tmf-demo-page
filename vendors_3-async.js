((typeof globalThis !== 'undefined' ? globalThis : self)["makoChunk_ant-design-pro"] = (typeof globalThis !== 'undefined' ? globalThis : self)["makoChunk_ant-design-pro"] || []).push([
        ['vendors_3'],
{ "node_modules/@ant-design/pro-card/node_modules/@ant-design/colors/es/generate.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return generate;
    }
});
var _fastcolor = __mako_require__("node_modules/@ant-design/fast-color/es/index.js");
var hueStep = 2; // 色相阶梯
var saturationStep = 0.16; // 饱和度阶梯，浅色部分
var saturationStep2 = 0.05; // 饱和度阶梯，深色部分
var brightnessStep1 = 0.05; // 亮度阶梯，浅色部分
var brightnessStep2 = 0.15; // 亮度阶梯，深色部分
var lightColorCount = 5; // 浅色数量，主色上
var darkColorCount = 4; // 深色数量，主色下
// 暗色主题颜色映射关系表
var darkColorMap = [
    {
        index: 7,
        amount: 15
    },
    {
        index: 6,
        amount: 25
    },
    {
        index: 5,
        amount: 30
    },
    {
        index: 5,
        amount: 45
    },
    {
        index: 5,
        amount: 65
    },
    {
        index: 5,
        amount: 85
    },
    {
        index: 4,
        amount: 90
    },
    {
        index: 3,
        amount: 95
    },
    {
        index: 2,
        amount: 97
    },
    {
        index: 1,
        amount: 98
    }
];
function getHue(hsv, i, light) {
    var hue;
    // 根据色相不同，色相转向不同
    if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;
    else hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;
    if (hue < 0) hue += 360;
    else if (hue >= 360) hue -= 360;
    return hue;
}
function getSaturation(hsv, i, light) {
    // grey color don't change saturation
    if (hsv.h === 0 && hsv.s === 0) return hsv.s;
    var saturation;
    if (light) saturation = hsv.s - saturationStep * i;
    else if (i === darkColorCount) saturation = hsv.s + saturationStep;
    else saturation = hsv.s + saturationStep2 * i;
    // 边界值修正
    if (saturation > 1) saturation = 1;
    // 第一格的 s 限制在 0.06-0.1 之间
    if (light && i === lightColorCount && saturation > 0.1) saturation = 0.1;
    if (saturation < 0.06) saturation = 0.06;
    return Math.round(saturation * 100) / 100;
}
function getValue(hsv, i, light) {
    var value;
    if (light) value = hsv.v + brightnessStep1 * i;
    else value = hsv.v - brightnessStep2 * i;
    // Clamp value between 0 and 1
    value = Math.max(0, Math.min(1, value));
    return Math.round(value * 100) / 100;
}
function generate(color) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var patterns = [];
    var pColor = new _fastcolor.FastColor(color);
    var hsv = pColor.toHsv();
    for(var i = lightColorCount; i > 0; i -= 1){
        var c = new _fastcolor.FastColor({
            h: getHue(hsv, i, true),
            s: getSaturation(hsv, i, true),
            v: getValue(hsv, i, true)
        });
        patterns.push(c);
    }
    patterns.push(pColor);
    for(var _i = 1; _i <= darkColorCount; _i += 1){
        var _c = new _fastcolor.FastColor({
            h: getHue(hsv, _i),
            s: getSaturation(hsv, _i),
            v: getValue(hsv, _i)
        });
        patterns.push(_c);
    }
    // dark theme patterns
    if (opts.theme === 'dark') return darkColorMap.map(function(_ref) {
        var index = _ref.index, amount = _ref.amount;
        return new _fastcolor.FastColor(opts.backgroundColor || '#141414').mix(patterns[index], amount).toHexString();
    });
    return patterns.map(function(c) {
        return c.toHexString();
    });
}

},
"node_modules/@ant-design/pro-card/node_modules/@ant-design/colors/es/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "generate", {
    enumerable: true,
    get: function() {
        return _generate.default;
    }
});
var _export_star = __mako_require__("@swc/helpers/_/_export_star");
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _generate = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-card/node_modules/@ant-design/colors/es/generate.js"));
_export_star._(__mako_require__("node_modules/@ant-design/pro-card/node_modules/@ant-design/colors/es/presets.js"), exports);
_export_star._(__mako_require__("node_modules/@ant-design/pro-card/node_modules/@ant-design/colors/es/types.js"), exports);

},
"node_modules/@ant-design/pro-card/node_modules/@ant-design/colors/es/presets.js": function (module, exports, __mako_require__){
// Generated by script. Do NOT modify!
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    blue: function() {
        return blue;
    },
    blueDark: function() {
        return blueDark;
    },
    cyan: function() {
        return cyan;
    },
    cyanDark: function() {
        return cyanDark;
    },
    geekblue: function() {
        return geekblue;
    },
    geekblueDark: function() {
        return geekblueDark;
    },
    gold: function() {
        return gold;
    },
    goldDark: function() {
        return goldDark;
    },
    gray: function() {
        return gray;
    },
    green: function() {
        return green;
    },
    greenDark: function() {
        return greenDark;
    },
    grey: function() {
        return grey;
    },
    greyDark: function() {
        return greyDark;
    },
    lime: function() {
        return lime;
    },
    limeDark: function() {
        return limeDark;
    },
    magenta: function() {
        return magenta;
    },
    magentaDark: function() {
        return magentaDark;
    },
    orange: function() {
        return orange;
    },
    orangeDark: function() {
        return orangeDark;
    },
    presetDarkPalettes: function() {
        return presetDarkPalettes;
    },
    presetPalettes: function() {
        return presetPalettes;
    },
    presetPrimaryColors: function() {
        return presetPrimaryColors;
    },
    purple: function() {
        return purple;
    },
    purpleDark: function() {
        return purpleDark;
    },
    red: function() {
        return red;
    },
    redDark: function() {
        return redDark;
    },
    volcano: function() {
        return volcano;
    },
    volcanoDark: function() {
        return volcanoDark;
    },
    yellow: function() {
        return yellow;
    },
    yellowDark: function() {
        return yellowDark;
    }
});
var presetPrimaryColors = {
    "red": "#F5222D",
    "volcano": "#FA541C",
    "orange": "#FA8C16",
    "gold": "#FAAD14",
    "yellow": "#FADB14",
    "lime": "#A0D911",
    "green": "#52C41A",
    "cyan": "#13C2C2",
    "blue": "#1677FF",
    "geekblue": "#2F54EB",
    "purple": "#722ED1",
    "magenta": "#EB2F96",
    "grey": "#666666"
};
var red = [
    "#fff1f0",
    "#ffccc7",
    "#ffa39e",
    "#ff7875",
    "#ff4d4f",
    "#f5222d",
    "#cf1322",
    "#a8071a",
    "#820014",
    "#5c0011"
];
red.primary = red[5];
var volcano = [
    "#fff2e8",
    "#ffd8bf",
    "#ffbb96",
    "#ff9c6e",
    "#ff7a45",
    "#fa541c",
    "#d4380d",
    "#ad2102",
    "#871400",
    "#610b00"
];
volcano.primary = volcano[5];
var orange = [
    "#fff7e6",
    "#ffe7ba",
    "#ffd591",
    "#ffc069",
    "#ffa940",
    "#fa8c16",
    "#d46b08",
    "#ad4e00",
    "#873800",
    "#612500"
];
orange.primary = orange[5];
var gold = [
    "#fffbe6",
    "#fff1b8",
    "#ffe58f",
    "#ffd666",
    "#ffc53d",
    "#faad14",
    "#d48806",
    "#ad6800",
    "#874d00",
    "#613400"
];
gold.primary = gold[5];
var yellow = [
    "#feffe6",
    "#ffffb8",
    "#fffb8f",
    "#fff566",
    "#ffec3d",
    "#fadb14",
    "#d4b106",
    "#ad8b00",
    "#876800",
    "#614700"
];
yellow.primary = yellow[5];
var lime = [
    "#fcffe6",
    "#f4ffb8",
    "#eaff8f",
    "#d3f261",
    "#bae637",
    "#a0d911",
    "#7cb305",
    "#5b8c00",
    "#3f6600",
    "#254000"
];
lime.primary = lime[5];
var green = [
    "#f6ffed",
    "#d9f7be",
    "#b7eb8f",
    "#95de64",
    "#73d13d",
    "#52c41a",
    "#389e0d",
    "#237804",
    "#135200",
    "#092b00"
];
green.primary = green[5];
var cyan = [
    "#e6fffb",
    "#b5f5ec",
    "#87e8de",
    "#5cdbd3",
    "#36cfc9",
    "#13c2c2",
    "#08979c",
    "#006d75",
    "#00474f",
    "#002329"
];
cyan.primary = cyan[5];
var blue = [
    "#e6f4ff",
    "#bae0ff",
    "#91caff",
    "#69b1ff",
    "#4096ff",
    "#1677ff",
    "#0958d9",
    "#003eb3",
    "#002c8c",
    "#001d66"
];
blue.primary = blue[5];
var geekblue = [
    "#f0f5ff",
    "#d6e4ff",
    "#adc6ff",
    "#85a5ff",
    "#597ef7",
    "#2f54eb",
    "#1d39c4",
    "#10239e",
    "#061178",
    "#030852"
];
geekblue.primary = geekblue[5];
var purple = [
    "#f9f0ff",
    "#efdbff",
    "#d3adf7",
    "#b37feb",
    "#9254de",
    "#722ed1",
    "#531dab",
    "#391085",
    "#22075e",
    "#120338"
];
purple.primary = purple[5];
var magenta = [
    "#fff0f6",
    "#ffd6e7",
    "#ffadd2",
    "#ff85c0",
    "#f759ab",
    "#eb2f96",
    "#c41d7f",
    "#9e1068",
    "#780650",
    "#520339"
];
magenta.primary = magenta[5];
var grey = [
    "#a6a6a6",
    "#999999",
    "#8c8c8c",
    "#808080",
    "#737373",
    "#666666",
    "#404040",
    "#1a1a1a",
    "#000000",
    "#000000"
];
grey.primary = grey[5];
var gray = grey;
var presetPalettes = {
    red: red,
    volcano: volcano,
    orange: orange,
    gold: gold,
    yellow: yellow,
    lime: lime,
    green: green,
    cyan: cyan,
    blue: blue,
    geekblue: geekblue,
    purple: purple,
    magenta: magenta,
    grey: grey
};
var redDark = [
    "#2a1215",
    "#431418",
    "#58181c",
    "#791a1f",
    "#a61d24",
    "#d32029",
    "#e84749",
    "#f37370",
    "#f89f9a",
    "#fac8c3"
];
redDark.primary = redDark[5];
var volcanoDark = [
    "#2b1611",
    "#441d12",
    "#592716",
    "#7c3118",
    "#aa3e19",
    "#d84a1b",
    "#e87040",
    "#f3956a",
    "#f8b692",
    "#fad4bc"
];
volcanoDark.primary = volcanoDark[5];
var orangeDark = [
    "#2b1d11",
    "#442a11",
    "#593815",
    "#7c4a15",
    "#aa6215",
    "#d87a16",
    "#e89a3c",
    "#f3b765",
    "#f8cf8d",
    "#fae3b7"
];
orangeDark.primary = orangeDark[5];
var goldDark = [
    "#2b2111",
    "#443111",
    "#594214",
    "#7c5914",
    "#aa7714",
    "#d89614",
    "#e8b339",
    "#f3cc62",
    "#f8df8b",
    "#faedb5"
];
goldDark.primary = goldDark[5];
var yellowDark = [
    "#2b2611",
    "#443b11",
    "#595014",
    "#7c6e14",
    "#aa9514",
    "#d8bd14",
    "#e8d639",
    "#f3ea62",
    "#f8f48b",
    "#fafab5"
];
yellowDark.primary = yellowDark[5];
var limeDark = [
    "#1f2611",
    "#2e3c10",
    "#3e4f13",
    "#536d13",
    "#6f9412",
    "#8bbb11",
    "#a9d134",
    "#c9e75d",
    "#e4f88b",
    "#f0fab5"
];
limeDark.primary = limeDark[5];
var greenDark = [
    "#162312",
    "#1d3712",
    "#274916",
    "#306317",
    "#3c8618",
    "#49aa19",
    "#6abe39",
    "#8fd460",
    "#b2e58b",
    "#d5f2bb"
];
greenDark.primary = greenDark[5];
var cyanDark = [
    "#112123",
    "#113536",
    "#144848",
    "#146262",
    "#138585",
    "#13a8a8",
    "#33bcb7",
    "#58d1c9",
    "#84e2d8",
    "#b2f1e8"
];
cyanDark.primary = cyanDark[5];
var blueDark = [
    "#111a2c",
    "#112545",
    "#15325b",
    "#15417e",
    "#1554ad",
    "#1668dc",
    "#3c89e8",
    "#65a9f3",
    "#8dc5f8",
    "#b7dcfa"
];
blueDark.primary = blueDark[5];
var geekblueDark = [
    "#131629",
    "#161d40",
    "#1c2755",
    "#203175",
    "#263ea0",
    "#2b4acb",
    "#5273e0",
    "#7f9ef3",
    "#a8c1f8",
    "#d2e0fa"
];
geekblueDark.primary = geekblueDark[5];
var purpleDark = [
    "#1a1325",
    "#24163a",
    "#301c4d",
    "#3e2069",
    "#51258f",
    "#642ab5",
    "#854eca",
    "#ab7ae0",
    "#cda8f0",
    "#ebd7fa"
];
purpleDark.primary = purpleDark[5];
var magentaDark = [
    "#291321",
    "#40162f",
    "#551c3b",
    "#75204f",
    "#a02669",
    "#cb2b83",
    "#e0529c",
    "#f37fb7",
    "#f8a8cc",
    "#fad2e3"
];
magentaDark.primary = magentaDark[5];
var greyDark = [
    "#151515",
    "#1f1f1f",
    "#2d2d2d",
    "#393939",
    "#494949",
    "#5a5a5a",
    "#6a6a6a",
    "#7b7b7b",
    "#888888",
    "#969696"
];
greyDark.primary = greyDark[5];
var presetDarkPalettes = {
    red: redDark,
    volcano: volcanoDark,
    orange: orangeDark,
    gold: goldDark,
    yellow: yellowDark,
    lime: limeDark,
    green: greenDark,
    cyan: cyanDark,
    blue: blueDark,
    geekblue: geekblueDark,
    purple: purpleDark,
    magenta: magentaDark,
    grey: greyDark
};

},
"node_modules/@ant-design/pro-card/node_modules/@ant-design/colors/es/types.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});

},
"node_modules/@ant-design/pro-field/node_modules/@ant-design/colors/es/generate.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return generate;
    }
});
var _fastcolor = __mako_require__("node_modules/@ant-design/fast-color/es/index.js");
var hueStep = 2; // 色相阶梯
var saturationStep = 0.16; // 饱和度阶梯，浅色部分
var saturationStep2 = 0.05; // 饱和度阶梯，深色部分
var brightnessStep1 = 0.05; // 亮度阶梯，浅色部分
var brightnessStep2 = 0.15; // 亮度阶梯，深色部分
var lightColorCount = 5; // 浅色数量，主色上
var darkColorCount = 4; // 深色数量，主色下
// 暗色主题颜色映射关系表
var darkColorMap = [
    {
        index: 7,
        amount: 15
    },
    {
        index: 6,
        amount: 25
    },
    {
        index: 5,
        amount: 30
    },
    {
        index: 5,
        amount: 45
    },
    {
        index: 5,
        amount: 65
    },
    {
        index: 5,
        amount: 85
    },
    {
        index: 4,
        amount: 90
    },
    {
        index: 3,
        amount: 95
    },
    {
        index: 2,
        amount: 97
    },
    {
        index: 1,
        amount: 98
    }
];
function getHue(hsv, i, light) {
    var hue;
    // 根据色相不同，色相转向不同
    if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;
    else hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;
    if (hue < 0) hue += 360;
    else if (hue >= 360) hue -= 360;
    return hue;
}
function getSaturation(hsv, i, light) {
    // grey color don't change saturation
    if (hsv.h === 0 && hsv.s === 0) return hsv.s;
    var saturation;
    if (light) saturation = hsv.s - saturationStep * i;
    else if (i === darkColorCount) saturation = hsv.s + saturationStep;
    else saturation = hsv.s + saturationStep2 * i;
    // 边界值修正
    if (saturation > 1) saturation = 1;
    // 第一格的 s 限制在 0.06-0.1 之间
    if (light && i === lightColorCount && saturation > 0.1) saturation = 0.1;
    if (saturation < 0.06) saturation = 0.06;
    return Math.round(saturation * 100) / 100;
}
function getValue(hsv, i, light) {
    var value;
    if (light) value = hsv.v + brightnessStep1 * i;
    else value = hsv.v - brightnessStep2 * i;
    // Clamp value between 0 and 1
    value = Math.max(0, Math.min(1, value));
    return Math.round(value * 100) / 100;
}
function generate(color) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var patterns = [];
    var pColor = new _fastcolor.FastColor(color);
    var hsv = pColor.toHsv();
    for(var i = lightColorCount; i > 0; i -= 1){
        var c = new _fastcolor.FastColor({
            h: getHue(hsv, i, true),
            s: getSaturation(hsv, i, true),
            v: getValue(hsv, i, true)
        });
        patterns.push(c);
    }
    patterns.push(pColor);
    for(var _i = 1; _i <= darkColorCount; _i += 1){
        var _c = new _fastcolor.FastColor({
            h: getHue(hsv, _i),
            s: getSaturation(hsv, _i),
            v: getValue(hsv, _i)
        });
        patterns.push(_c);
    }
    // dark theme patterns
    if (opts.theme === 'dark') return darkColorMap.map(function(_ref) {
        var index = _ref.index, amount = _ref.amount;
        return new _fastcolor.FastColor(opts.backgroundColor || '#141414').mix(patterns[index], amount).toHexString();
    });
    return patterns.map(function(c) {
        return c.toHexString();
    });
}

},
"node_modules/@ant-design/pro-field/node_modules/@ant-design/colors/es/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "generate", {
    enumerable: true,
    get: function() {
        return _generate.default;
    }
});
var _export_star = __mako_require__("@swc/helpers/_/_export_star");
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _generate = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-field/node_modules/@ant-design/colors/es/generate.js"));
_export_star._(__mako_require__("node_modules/@ant-design/pro-field/node_modules/@ant-design/colors/es/presets.js"), exports);
_export_star._(__mako_require__("node_modules/@ant-design/pro-field/node_modules/@ant-design/colors/es/types.js"), exports);

},
"node_modules/@ant-design/pro-field/node_modules/@ant-design/colors/es/presets.js": function (module, exports, __mako_require__){
// Generated by script. Do NOT modify!
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    blue: function() {
        return blue;
    },
    blueDark: function() {
        return blueDark;
    },
    cyan: function() {
        return cyan;
    },
    cyanDark: function() {
        return cyanDark;
    },
    geekblue: function() {
        return geekblue;
    },
    geekblueDark: function() {
        return geekblueDark;
    },
    gold: function() {
        return gold;
    },
    goldDark: function() {
        return goldDark;
    },
    gray: function() {
        return gray;
    },
    green: function() {
        return green;
    },
    greenDark: function() {
        return greenDark;
    },
    grey: function() {
        return grey;
    },
    greyDark: function() {
        return greyDark;
    },
    lime: function() {
        return lime;
    },
    limeDark: function() {
        return limeDark;
    },
    magenta: function() {
        return magenta;
    },
    magentaDark: function() {
        return magentaDark;
    },
    orange: function() {
        return orange;
    },
    orangeDark: function() {
        return orangeDark;
    },
    presetDarkPalettes: function() {
        return presetDarkPalettes;
    },
    presetPalettes: function() {
        return presetPalettes;
    },
    presetPrimaryColors: function() {
        return presetPrimaryColors;
    },
    purple: function() {
        return purple;
    },
    purpleDark: function() {
        return purpleDark;
    },
    red: function() {
        return red;
    },
    redDark: function() {
        return redDark;
    },
    volcano: function() {
        return volcano;
    },
    volcanoDark: function() {
        return volcanoDark;
    },
    yellow: function() {
        return yellow;
    },
    yellowDark: function() {
        return yellowDark;
    }
});
var presetPrimaryColors = {
    "red": "#F5222D",
    "volcano": "#FA541C",
    "orange": "#FA8C16",
    "gold": "#FAAD14",
    "yellow": "#FADB14",
    "lime": "#A0D911",
    "green": "#52C41A",
    "cyan": "#13C2C2",
    "blue": "#1677FF",
    "geekblue": "#2F54EB",
    "purple": "#722ED1",
    "magenta": "#EB2F96",
    "grey": "#666666"
};
var red = [
    "#fff1f0",
    "#ffccc7",
    "#ffa39e",
    "#ff7875",
    "#ff4d4f",
    "#f5222d",
    "#cf1322",
    "#a8071a",
    "#820014",
    "#5c0011"
];
red.primary = red[5];
var volcano = [
    "#fff2e8",
    "#ffd8bf",
    "#ffbb96",
    "#ff9c6e",
    "#ff7a45",
    "#fa541c",
    "#d4380d",
    "#ad2102",
    "#871400",
    "#610b00"
];
volcano.primary = volcano[5];
var orange = [
    "#fff7e6",
    "#ffe7ba",
    "#ffd591",
    "#ffc069",
    "#ffa940",
    "#fa8c16",
    "#d46b08",
    "#ad4e00",
    "#873800",
    "#612500"
];
orange.primary = orange[5];
var gold = [
    "#fffbe6",
    "#fff1b8",
    "#ffe58f",
    "#ffd666",
    "#ffc53d",
    "#faad14",
    "#d48806",
    "#ad6800",
    "#874d00",
    "#613400"
];
gold.primary = gold[5];
var yellow = [
    "#feffe6",
    "#ffffb8",
    "#fffb8f",
    "#fff566",
    "#ffec3d",
    "#fadb14",
    "#d4b106",
    "#ad8b00",
    "#876800",
    "#614700"
];
yellow.primary = yellow[5];
var lime = [
    "#fcffe6",
    "#f4ffb8",
    "#eaff8f",
    "#d3f261",
    "#bae637",
    "#a0d911",
    "#7cb305",
    "#5b8c00",
    "#3f6600",
    "#254000"
];
lime.primary = lime[5];
var green = [
    "#f6ffed",
    "#d9f7be",
    "#b7eb8f",
    "#95de64",
    "#73d13d",
    "#52c41a",
    "#389e0d",
    "#237804",
    "#135200",
    "#092b00"
];
green.primary = green[5];
var cyan = [
    "#e6fffb",
    "#b5f5ec",
    "#87e8de",
    "#5cdbd3",
    "#36cfc9",
    "#13c2c2",
    "#08979c",
    "#006d75",
    "#00474f",
    "#002329"
];
cyan.primary = cyan[5];
var blue = [
    "#e6f4ff",
    "#bae0ff",
    "#91caff",
    "#69b1ff",
    "#4096ff",
    "#1677ff",
    "#0958d9",
    "#003eb3",
    "#002c8c",
    "#001d66"
];
blue.primary = blue[5];
var geekblue = [
    "#f0f5ff",
    "#d6e4ff",
    "#adc6ff",
    "#85a5ff",
    "#597ef7",
    "#2f54eb",
    "#1d39c4",
    "#10239e",
    "#061178",
    "#030852"
];
geekblue.primary = geekblue[5];
var purple = [
    "#f9f0ff",
    "#efdbff",
    "#d3adf7",
    "#b37feb",
    "#9254de",
    "#722ed1",
    "#531dab",
    "#391085",
    "#22075e",
    "#120338"
];
purple.primary = purple[5];
var magenta = [
    "#fff0f6",
    "#ffd6e7",
    "#ffadd2",
    "#ff85c0",
    "#f759ab",
    "#eb2f96",
    "#c41d7f",
    "#9e1068",
    "#780650",
    "#520339"
];
magenta.primary = magenta[5];
var grey = [
    "#a6a6a6",
    "#999999",
    "#8c8c8c",
    "#808080",
    "#737373",
    "#666666",
    "#404040",
    "#1a1a1a",
    "#000000",
    "#000000"
];
grey.primary = grey[5];
var gray = grey;
var presetPalettes = {
    red: red,
    volcano: volcano,
    orange: orange,
    gold: gold,
    yellow: yellow,
    lime: lime,
    green: green,
    cyan: cyan,
    blue: blue,
    geekblue: geekblue,
    purple: purple,
    magenta: magenta,
    grey: grey
};
var redDark = [
    "#2a1215",
    "#431418",
    "#58181c",
    "#791a1f",
    "#a61d24",
    "#d32029",
    "#e84749",
    "#f37370",
    "#f89f9a",
    "#fac8c3"
];
redDark.primary = redDark[5];
var volcanoDark = [
    "#2b1611",
    "#441d12",
    "#592716",
    "#7c3118",
    "#aa3e19",
    "#d84a1b",
    "#e87040",
    "#f3956a",
    "#f8b692",
    "#fad4bc"
];
volcanoDark.primary = volcanoDark[5];
var orangeDark = [
    "#2b1d11",
    "#442a11",
    "#593815",
    "#7c4a15",
    "#aa6215",
    "#d87a16",
    "#e89a3c",
    "#f3b765",
    "#f8cf8d",
    "#fae3b7"
];
orangeDark.primary = orangeDark[5];
var goldDark = [
    "#2b2111",
    "#443111",
    "#594214",
    "#7c5914",
    "#aa7714",
    "#d89614",
    "#e8b339",
    "#f3cc62",
    "#f8df8b",
    "#faedb5"
];
goldDark.primary = goldDark[5];
var yellowDark = [
    "#2b2611",
    "#443b11",
    "#595014",
    "#7c6e14",
    "#aa9514",
    "#d8bd14",
    "#e8d639",
    "#f3ea62",
    "#f8f48b",
    "#fafab5"
];
yellowDark.primary = yellowDark[5];
var limeDark = [
    "#1f2611",
    "#2e3c10",
    "#3e4f13",
    "#536d13",
    "#6f9412",
    "#8bbb11",
    "#a9d134",
    "#c9e75d",
    "#e4f88b",
    "#f0fab5"
];
limeDark.primary = limeDark[5];
var greenDark = [
    "#162312",
    "#1d3712",
    "#274916",
    "#306317",
    "#3c8618",
    "#49aa19",
    "#6abe39",
    "#8fd460",
    "#b2e58b",
    "#d5f2bb"
];
greenDark.primary = greenDark[5];
var cyanDark = [
    "#112123",
    "#113536",
    "#144848",
    "#146262",
    "#138585",
    "#13a8a8",
    "#33bcb7",
    "#58d1c9",
    "#84e2d8",
    "#b2f1e8"
];
cyanDark.primary = cyanDark[5];
var blueDark = [
    "#111a2c",
    "#112545",
    "#15325b",
    "#15417e",
    "#1554ad",
    "#1668dc",
    "#3c89e8",
    "#65a9f3",
    "#8dc5f8",
    "#b7dcfa"
];
blueDark.primary = blueDark[5];
var geekblueDark = [
    "#131629",
    "#161d40",
    "#1c2755",
    "#203175",
    "#263ea0",
    "#2b4acb",
    "#5273e0",
    "#7f9ef3",
    "#a8c1f8",
    "#d2e0fa"
];
geekblueDark.primary = geekblueDark[5];
var purpleDark = [
    "#1a1325",
    "#24163a",
    "#301c4d",
    "#3e2069",
    "#51258f",
    "#642ab5",
    "#854eca",
    "#ab7ae0",
    "#cda8f0",
    "#ebd7fa"
];
purpleDark.primary = purpleDark[5];
var magentaDark = [
    "#291321",
    "#40162f",
    "#551c3b",
    "#75204f",
    "#a02669",
    "#cb2b83",
    "#e0529c",
    "#f37fb7",
    "#f8a8cc",
    "#fad2e3"
];
magentaDark.primary = magentaDark[5];
var greyDark = [
    "#151515",
    "#1f1f1f",
    "#2d2d2d",
    "#393939",
    "#494949",
    "#5a5a5a",
    "#6a6a6a",
    "#7b7b7b",
    "#888888",
    "#969696"
];
greyDark.primary = greyDark[5];
var presetDarkPalettes = {
    red: redDark,
    volcano: volcanoDark,
    orange: orangeDark,
    gold: goldDark,
    yellow: yellowDark,
    lime: limeDark,
    green: greenDark,
    cyan: cyanDark,
    blue: blueDark,
    geekblue: geekblueDark,
    purple: purpleDark,
    magenta: magentaDark,
    grey: greyDark
};

},
"node_modules/@ant-design/pro-field/node_modules/@ant-design/colors/es/types.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});

},
"node_modules/@ant-design/pro-form/node_modules/@ant-design/colors/es/generate.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return generate;
    }
});
var _fastcolor = __mako_require__("node_modules/@ant-design/fast-color/es/index.js");
var hueStep = 2; // 色相阶梯
var saturationStep = 0.16; // 饱和度阶梯，浅色部分
var saturationStep2 = 0.05; // 饱和度阶梯，深色部分
var brightnessStep1 = 0.05; // 亮度阶梯，浅色部分
var brightnessStep2 = 0.15; // 亮度阶梯，深色部分
var lightColorCount = 5; // 浅色数量，主色上
var darkColorCount = 4; // 深色数量，主色下
// 暗色主题颜色映射关系表
var darkColorMap = [
    {
        index: 7,
        amount: 15
    },
    {
        index: 6,
        amount: 25
    },
    {
        index: 5,
        amount: 30
    },
    {
        index: 5,
        amount: 45
    },
    {
        index: 5,
        amount: 65
    },
    {
        index: 5,
        amount: 85
    },
    {
        index: 4,
        amount: 90
    },
    {
        index: 3,
        amount: 95
    },
    {
        index: 2,
        amount: 97
    },
    {
        index: 1,
        amount: 98
    }
];
function getHue(hsv, i, light) {
    var hue;
    // 根据色相不同，色相转向不同
    if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;
    else hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;
    if (hue < 0) hue += 360;
    else if (hue >= 360) hue -= 360;
    return hue;
}
function getSaturation(hsv, i, light) {
    // grey color don't change saturation
    if (hsv.h === 0 && hsv.s === 0) return hsv.s;
    var saturation;
    if (light) saturation = hsv.s - saturationStep * i;
    else if (i === darkColorCount) saturation = hsv.s + saturationStep;
    else saturation = hsv.s + saturationStep2 * i;
    // 边界值修正
    if (saturation > 1) saturation = 1;
    // 第一格的 s 限制在 0.06-0.1 之间
    if (light && i === lightColorCount && saturation > 0.1) saturation = 0.1;
    if (saturation < 0.06) saturation = 0.06;
    return Math.round(saturation * 100) / 100;
}
function getValue(hsv, i, light) {
    var value;
    if (light) value = hsv.v + brightnessStep1 * i;
    else value = hsv.v - brightnessStep2 * i;
    // Clamp value between 0 and 1
    value = Math.max(0, Math.min(1, value));
    return Math.round(value * 100) / 100;
}
function generate(color) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var patterns = [];
    var pColor = new _fastcolor.FastColor(color);
    var hsv = pColor.toHsv();
    for(var i = lightColorCount; i > 0; i -= 1){
        var c = new _fastcolor.FastColor({
            h: getHue(hsv, i, true),
            s: getSaturation(hsv, i, true),
            v: getValue(hsv, i, true)
        });
        patterns.push(c);
    }
    patterns.push(pColor);
    for(var _i = 1; _i <= darkColorCount; _i += 1){
        var _c = new _fastcolor.FastColor({
            h: getHue(hsv, _i),
            s: getSaturation(hsv, _i),
            v: getValue(hsv, _i)
        });
        patterns.push(_c);
    }
    // dark theme patterns
    if (opts.theme === 'dark') return darkColorMap.map(function(_ref) {
        var index = _ref.index, amount = _ref.amount;
        return new _fastcolor.FastColor(opts.backgroundColor || '#141414').mix(patterns[index], amount).toHexString();
    });
    return patterns.map(function(c) {
        return c.toHexString();
    });
}

},
"node_modules/@ant-design/pro-form/node_modules/@ant-design/colors/es/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "generate", {
    enumerable: true,
    get: function() {
        return _generate.default;
    }
});
var _export_star = __mako_require__("@swc/helpers/_/_export_star");
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _generate = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-form/node_modules/@ant-design/colors/es/generate.js"));
_export_star._(__mako_require__("node_modules/@ant-design/pro-form/node_modules/@ant-design/colors/es/presets.js"), exports);
_export_star._(__mako_require__("node_modules/@ant-design/pro-form/node_modules/@ant-design/colors/es/types.js"), exports);

},
"node_modules/@ant-design/pro-form/node_modules/@ant-design/colors/es/presets.js": function (module, exports, __mako_require__){
// Generated by script. Do NOT modify!
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    blue: function() {
        return blue;
    },
    blueDark: function() {
        return blueDark;
    },
    cyan: function() {
        return cyan;
    },
    cyanDark: function() {
        return cyanDark;
    },
    geekblue: function() {
        return geekblue;
    },
    geekblueDark: function() {
        return geekblueDark;
    },
    gold: function() {
        return gold;
    },
    goldDark: function() {
        return goldDark;
    },
    gray: function() {
        return gray;
    },
    green: function() {
        return green;
    },
    greenDark: function() {
        return greenDark;
    },
    grey: function() {
        return grey;
    },
    greyDark: function() {
        return greyDark;
    },
    lime: function() {
        return lime;
    },
    limeDark: function() {
        return limeDark;
    },
    magenta: function() {
        return magenta;
    },
    magentaDark: function() {
        return magentaDark;
    },
    orange: function() {
        return orange;
    },
    orangeDark: function() {
        return orangeDark;
    },
    presetDarkPalettes: function() {
        return presetDarkPalettes;
    },
    presetPalettes: function() {
        return presetPalettes;
    },
    presetPrimaryColors: function() {
        return presetPrimaryColors;
    },
    purple: function() {
        return purple;
    },
    purpleDark: function() {
        return purpleDark;
    },
    red: function() {
        return red;
    },
    redDark: function() {
        return redDark;
    },
    volcano: function() {
        return volcano;
    },
    volcanoDark: function() {
        return volcanoDark;
    },
    yellow: function() {
        return yellow;
    },
    yellowDark: function() {
        return yellowDark;
    }
});
var presetPrimaryColors = {
    "red": "#F5222D",
    "volcano": "#FA541C",
    "orange": "#FA8C16",
    "gold": "#FAAD14",
    "yellow": "#FADB14",
    "lime": "#A0D911",
    "green": "#52C41A",
    "cyan": "#13C2C2",
    "blue": "#1677FF",
    "geekblue": "#2F54EB",
    "purple": "#722ED1",
    "magenta": "#EB2F96",
    "grey": "#666666"
};
var red = [
    "#fff1f0",
    "#ffccc7",
    "#ffa39e",
    "#ff7875",
    "#ff4d4f",
    "#f5222d",
    "#cf1322",
    "#a8071a",
    "#820014",
    "#5c0011"
];
red.primary = red[5];
var volcano = [
    "#fff2e8",
    "#ffd8bf",
    "#ffbb96",
    "#ff9c6e",
    "#ff7a45",
    "#fa541c",
    "#d4380d",
    "#ad2102",
    "#871400",
    "#610b00"
];
volcano.primary = volcano[5];
var orange = [
    "#fff7e6",
    "#ffe7ba",
    "#ffd591",
    "#ffc069",
    "#ffa940",
    "#fa8c16",
    "#d46b08",
    "#ad4e00",
    "#873800",
    "#612500"
];
orange.primary = orange[5];
var gold = [
    "#fffbe6",
    "#fff1b8",
    "#ffe58f",
    "#ffd666",
    "#ffc53d",
    "#faad14",
    "#d48806",
    "#ad6800",
    "#874d00",
    "#613400"
];
gold.primary = gold[5];
var yellow = [
    "#feffe6",
    "#ffffb8",
    "#fffb8f",
    "#fff566",
    "#ffec3d",
    "#fadb14",
    "#d4b106",
    "#ad8b00",
    "#876800",
    "#614700"
];
yellow.primary = yellow[5];
var lime = [
    "#fcffe6",
    "#f4ffb8",
    "#eaff8f",
    "#d3f261",
    "#bae637",
    "#a0d911",
    "#7cb305",
    "#5b8c00",
    "#3f6600",
    "#254000"
];
lime.primary = lime[5];
var green = [
    "#f6ffed",
    "#d9f7be",
    "#b7eb8f",
    "#95de64",
    "#73d13d",
    "#52c41a",
    "#389e0d",
    "#237804",
    "#135200",
    "#092b00"
];
green.primary = green[5];
var cyan = [
    "#e6fffb",
    "#b5f5ec",
    "#87e8de",
    "#5cdbd3",
    "#36cfc9",
    "#13c2c2",
    "#08979c",
    "#006d75",
    "#00474f",
    "#002329"
];
cyan.primary = cyan[5];
var blue = [
    "#e6f4ff",
    "#bae0ff",
    "#91caff",
    "#69b1ff",
    "#4096ff",
    "#1677ff",
    "#0958d9",
    "#003eb3",
    "#002c8c",
    "#001d66"
];
blue.primary = blue[5];
var geekblue = [
    "#f0f5ff",
    "#d6e4ff",
    "#adc6ff",
    "#85a5ff",
    "#597ef7",
    "#2f54eb",
    "#1d39c4",
    "#10239e",
    "#061178",
    "#030852"
];
geekblue.primary = geekblue[5];
var purple = [
    "#f9f0ff",
    "#efdbff",
    "#d3adf7",
    "#b37feb",
    "#9254de",
    "#722ed1",
    "#531dab",
    "#391085",
    "#22075e",
    "#120338"
];
purple.primary = purple[5];
var magenta = [
    "#fff0f6",
    "#ffd6e7",
    "#ffadd2",
    "#ff85c0",
    "#f759ab",
    "#eb2f96",
    "#c41d7f",
    "#9e1068",
    "#780650",
    "#520339"
];
magenta.primary = magenta[5];
var grey = [
    "#a6a6a6",
    "#999999",
    "#8c8c8c",
    "#808080",
    "#737373",
    "#666666",
    "#404040",
    "#1a1a1a",
    "#000000",
    "#000000"
];
grey.primary = grey[5];
var gray = grey;
var presetPalettes = {
    red: red,
    volcano: volcano,
    orange: orange,
    gold: gold,
    yellow: yellow,
    lime: lime,
    green: green,
    cyan: cyan,
    blue: blue,
    geekblue: geekblue,
    purple: purple,
    magenta: magenta,
    grey: grey
};
var redDark = [
    "#2a1215",
    "#431418",
    "#58181c",
    "#791a1f",
    "#a61d24",
    "#d32029",
    "#e84749",
    "#f37370",
    "#f89f9a",
    "#fac8c3"
];
redDark.primary = redDark[5];
var volcanoDark = [
    "#2b1611",
    "#441d12",
    "#592716",
    "#7c3118",
    "#aa3e19",
    "#d84a1b",
    "#e87040",
    "#f3956a",
    "#f8b692",
    "#fad4bc"
];
volcanoDark.primary = volcanoDark[5];
var orangeDark = [
    "#2b1d11",
    "#442a11",
    "#593815",
    "#7c4a15",
    "#aa6215",
    "#d87a16",
    "#e89a3c",
    "#f3b765",
    "#f8cf8d",
    "#fae3b7"
];
orangeDark.primary = orangeDark[5];
var goldDark = [
    "#2b2111",
    "#443111",
    "#594214",
    "#7c5914",
    "#aa7714",
    "#d89614",
    "#e8b339",
    "#f3cc62",
    "#f8df8b",
    "#faedb5"
];
goldDark.primary = goldDark[5];
var yellowDark = [
    "#2b2611",
    "#443b11",
    "#595014",
    "#7c6e14",
    "#aa9514",
    "#d8bd14",
    "#e8d639",
    "#f3ea62",
    "#f8f48b",
    "#fafab5"
];
yellowDark.primary = yellowDark[5];
var limeDark = [
    "#1f2611",
    "#2e3c10",
    "#3e4f13",
    "#536d13",
    "#6f9412",
    "#8bbb11",
    "#a9d134",
    "#c9e75d",
    "#e4f88b",
    "#f0fab5"
];
limeDark.primary = limeDark[5];
var greenDark = [
    "#162312",
    "#1d3712",
    "#274916",
    "#306317",
    "#3c8618",
    "#49aa19",
    "#6abe39",
    "#8fd460",
    "#b2e58b",
    "#d5f2bb"
];
greenDark.primary = greenDark[5];
var cyanDark = [
    "#112123",
    "#113536",
    "#144848",
    "#146262",
    "#138585",
    "#13a8a8",
    "#33bcb7",
    "#58d1c9",
    "#84e2d8",
    "#b2f1e8"
];
cyanDark.primary = cyanDark[5];
var blueDark = [
    "#111a2c",
    "#112545",
    "#15325b",
    "#15417e",
    "#1554ad",
    "#1668dc",
    "#3c89e8",
    "#65a9f3",
    "#8dc5f8",
    "#b7dcfa"
];
blueDark.primary = blueDark[5];
var geekblueDark = [
    "#131629",
    "#161d40",
    "#1c2755",
    "#203175",
    "#263ea0",
    "#2b4acb",
    "#5273e0",
    "#7f9ef3",
    "#a8c1f8",
    "#d2e0fa"
];
geekblueDark.primary = geekblueDark[5];
var purpleDark = [
    "#1a1325",
    "#24163a",
    "#301c4d",
    "#3e2069",
    "#51258f",
    "#642ab5",
    "#854eca",
    "#ab7ae0",
    "#cda8f0",
    "#ebd7fa"
];
purpleDark.primary = purpleDark[5];
var magentaDark = [
    "#291321",
    "#40162f",
    "#551c3b",
    "#75204f",
    "#a02669",
    "#cb2b83",
    "#e0529c",
    "#f37fb7",
    "#f8a8cc",
    "#fad2e3"
];
magentaDark.primary = magentaDark[5];
var greyDark = [
    "#151515",
    "#1f1f1f",
    "#2d2d2d",
    "#393939",
    "#494949",
    "#5a5a5a",
    "#6a6a6a",
    "#7b7b7b",
    "#888888",
    "#969696"
];
greyDark.primary = greyDark[5];
var presetDarkPalettes = {
    red: redDark,
    volcano: volcanoDark,
    orange: orangeDark,
    gold: goldDark,
    yellow: yellowDark,
    lime: limeDark,
    green: greenDark,
    cyan: cyanDark,
    blue: blueDark,
    geekblue: geekblueDark,
    purple: purpleDark,
    magenta: magentaDark,
    grey: greyDark
};

},
"node_modules/@ant-design/pro-form/node_modules/@ant-design/colors/es/types.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});

},
"node_modules/@ant-design/pro-layout/node_modules/@ant-design/colors/es/generate.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return generate;
    }
});
var _fastcolor = __mako_require__("node_modules/@ant-design/fast-color/es/index.js");
var hueStep = 2; // 色相阶梯
var saturationStep = 0.16; // 饱和度阶梯，浅色部分
var saturationStep2 = 0.05; // 饱和度阶梯，深色部分
var brightnessStep1 = 0.05; // 亮度阶梯，浅色部分
var brightnessStep2 = 0.15; // 亮度阶梯，深色部分
var lightColorCount = 5; // 浅色数量，主色上
var darkColorCount = 4; // 深色数量，主色下
// 暗色主题颜色映射关系表
var darkColorMap = [
    {
        index: 7,
        amount: 15
    },
    {
        index: 6,
        amount: 25
    },
    {
        index: 5,
        amount: 30
    },
    {
        index: 5,
        amount: 45
    },
    {
        index: 5,
        amount: 65
    },
    {
        index: 5,
        amount: 85
    },
    {
        index: 4,
        amount: 90
    },
    {
        index: 3,
        amount: 95
    },
    {
        index: 2,
        amount: 97
    },
    {
        index: 1,
        amount: 98
    }
];
function getHue(hsv, i, light) {
    var hue;
    // 根据色相不同，色相转向不同
    if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;
    else hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;
    if (hue < 0) hue += 360;
    else if (hue >= 360) hue -= 360;
    return hue;
}
function getSaturation(hsv, i, light) {
    // grey color don't change saturation
    if (hsv.h === 0 && hsv.s === 0) return hsv.s;
    var saturation;
    if (light) saturation = hsv.s - saturationStep * i;
    else if (i === darkColorCount) saturation = hsv.s + saturationStep;
    else saturation = hsv.s + saturationStep2 * i;
    // 边界值修正
    if (saturation > 1) saturation = 1;
    // 第一格的 s 限制在 0.06-0.1 之间
    if (light && i === lightColorCount && saturation > 0.1) saturation = 0.1;
    if (saturation < 0.06) saturation = 0.06;
    return Math.round(saturation * 100) / 100;
}
function getValue(hsv, i, light) {
    var value;
    if (light) value = hsv.v + brightnessStep1 * i;
    else value = hsv.v - brightnessStep2 * i;
    // Clamp value between 0 and 1
    value = Math.max(0, Math.min(1, value));
    return Math.round(value * 100) / 100;
}
function generate(color) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var patterns = [];
    var pColor = new _fastcolor.FastColor(color);
    var hsv = pColor.toHsv();
    for(var i = lightColorCount; i > 0; i -= 1){
        var c = new _fastcolor.FastColor({
            h: getHue(hsv, i, true),
            s: getSaturation(hsv, i, true),
            v: getValue(hsv, i, true)
        });
        patterns.push(c);
    }
    patterns.push(pColor);
    for(var _i = 1; _i <= darkColorCount; _i += 1){
        var _c = new _fastcolor.FastColor({
            h: getHue(hsv, _i),
            s: getSaturation(hsv, _i),
            v: getValue(hsv, _i)
        });
        patterns.push(_c);
    }
    // dark theme patterns
    if (opts.theme === 'dark') return darkColorMap.map(function(_ref) {
        var index = _ref.index, amount = _ref.amount;
        return new _fastcolor.FastColor(opts.backgroundColor || '#141414').mix(patterns[index], amount).toHexString();
    });
    return patterns.map(function(c) {
        return c.toHexString();
    });
}

},
"node_modules/@ant-design/pro-layout/node_modules/@ant-design/colors/es/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "generate", {
    enumerable: true,
    get: function() {
        return _generate.default;
    }
});
var _export_star = __mako_require__("@swc/helpers/_/_export_star");
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _generate = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-layout/node_modules/@ant-design/colors/es/generate.js"));
_export_star._(__mako_require__("node_modules/@ant-design/pro-layout/node_modules/@ant-design/colors/es/presets.js"), exports);
_export_star._(__mako_require__("node_modules/@ant-design/pro-layout/node_modules/@ant-design/colors/es/types.js"), exports);

},
"node_modules/@ant-design/pro-layout/node_modules/@ant-design/colors/es/presets.js": function (module, exports, __mako_require__){
// Generated by script. Do NOT modify!
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    blue: function() {
        return blue;
    },
    blueDark: function() {
        return blueDark;
    },
    cyan: function() {
        return cyan;
    },
    cyanDark: function() {
        return cyanDark;
    },
    geekblue: function() {
        return geekblue;
    },
    geekblueDark: function() {
        return geekblueDark;
    },
    gold: function() {
        return gold;
    },
    goldDark: function() {
        return goldDark;
    },
    gray: function() {
        return gray;
    },
    green: function() {
        return green;
    },
    greenDark: function() {
        return greenDark;
    },
    grey: function() {
        return grey;
    },
    greyDark: function() {
        return greyDark;
    },
    lime: function() {
        return lime;
    },
    limeDark: function() {
        return limeDark;
    },
    magenta: function() {
        return magenta;
    },
    magentaDark: function() {
        return magentaDark;
    },
    orange: function() {
        return orange;
    },
    orangeDark: function() {
        return orangeDark;
    },
    presetDarkPalettes: function() {
        return presetDarkPalettes;
    },
    presetPalettes: function() {
        return presetPalettes;
    },
    presetPrimaryColors: function() {
        return presetPrimaryColors;
    },
    purple: function() {
        return purple;
    },
    purpleDark: function() {
        return purpleDark;
    },
    red: function() {
        return red;
    },
    redDark: function() {
        return redDark;
    },
    volcano: function() {
        return volcano;
    },
    volcanoDark: function() {
        return volcanoDark;
    },
    yellow: function() {
        return yellow;
    },
    yellowDark: function() {
        return yellowDark;
    }
});
var presetPrimaryColors = {
    "red": "#F5222D",
    "volcano": "#FA541C",
    "orange": "#FA8C16",
    "gold": "#FAAD14",
    "yellow": "#FADB14",
    "lime": "#A0D911",
    "green": "#52C41A",
    "cyan": "#13C2C2",
    "blue": "#1677FF",
    "geekblue": "#2F54EB",
    "purple": "#722ED1",
    "magenta": "#EB2F96",
    "grey": "#666666"
};
var red = [
    "#fff1f0",
    "#ffccc7",
    "#ffa39e",
    "#ff7875",
    "#ff4d4f",
    "#f5222d",
    "#cf1322",
    "#a8071a",
    "#820014",
    "#5c0011"
];
red.primary = red[5];
var volcano = [
    "#fff2e8",
    "#ffd8bf",
    "#ffbb96",
    "#ff9c6e",
    "#ff7a45",
    "#fa541c",
    "#d4380d",
    "#ad2102",
    "#871400",
    "#610b00"
];
volcano.primary = volcano[5];
var orange = [
    "#fff7e6",
    "#ffe7ba",
    "#ffd591",
    "#ffc069",
    "#ffa940",
    "#fa8c16",
    "#d46b08",
    "#ad4e00",
    "#873800",
    "#612500"
];
orange.primary = orange[5];
var gold = [
    "#fffbe6",
    "#fff1b8",
    "#ffe58f",
    "#ffd666",
    "#ffc53d",
    "#faad14",
    "#d48806",
    "#ad6800",
    "#874d00",
    "#613400"
];
gold.primary = gold[5];
var yellow = [
    "#feffe6",
    "#ffffb8",
    "#fffb8f",
    "#fff566",
    "#ffec3d",
    "#fadb14",
    "#d4b106",
    "#ad8b00",
    "#876800",
    "#614700"
];
yellow.primary = yellow[5];
var lime = [
    "#fcffe6",
    "#f4ffb8",
    "#eaff8f",
    "#d3f261",
    "#bae637",
    "#a0d911",
    "#7cb305",
    "#5b8c00",
    "#3f6600",
    "#254000"
];
lime.primary = lime[5];
var green = [
    "#f6ffed",
    "#d9f7be",
    "#b7eb8f",
    "#95de64",
    "#73d13d",
    "#52c41a",
    "#389e0d",
    "#237804",
    "#135200",
    "#092b00"
];
green.primary = green[5];
var cyan = [
    "#e6fffb",
    "#b5f5ec",
    "#87e8de",
    "#5cdbd3",
    "#36cfc9",
    "#13c2c2",
    "#08979c",
    "#006d75",
    "#00474f",
    "#002329"
];
cyan.primary = cyan[5];
var blue = [
    "#e6f4ff",
    "#bae0ff",
    "#91caff",
    "#69b1ff",
    "#4096ff",
    "#1677ff",
    "#0958d9",
    "#003eb3",
    "#002c8c",
    "#001d66"
];
blue.primary = blue[5];
var geekblue = [
    "#f0f5ff",
    "#d6e4ff",
    "#adc6ff",
    "#85a5ff",
    "#597ef7",
    "#2f54eb",
    "#1d39c4",
    "#10239e",
    "#061178",
    "#030852"
];
geekblue.primary = geekblue[5];
var purple = [
    "#f9f0ff",
    "#efdbff",
    "#d3adf7",
    "#b37feb",
    "#9254de",
    "#722ed1",
    "#531dab",
    "#391085",
    "#22075e",
    "#120338"
];
purple.primary = purple[5];
var magenta = [
    "#fff0f6",
    "#ffd6e7",
    "#ffadd2",
    "#ff85c0",
    "#f759ab",
    "#eb2f96",
    "#c41d7f",
    "#9e1068",
    "#780650",
    "#520339"
];
magenta.primary = magenta[5];
var grey = [
    "#a6a6a6",
    "#999999",
    "#8c8c8c",
    "#808080",
    "#737373",
    "#666666",
    "#404040",
    "#1a1a1a",
    "#000000",
    "#000000"
];
grey.primary = grey[5];
var gray = grey;
var presetPalettes = {
    red: red,
    volcano: volcano,
    orange: orange,
    gold: gold,
    yellow: yellow,
    lime: lime,
    green: green,
    cyan: cyan,
    blue: blue,
    geekblue: geekblue,
    purple: purple,
    magenta: magenta,
    grey: grey
};
var redDark = [
    "#2a1215",
    "#431418",
    "#58181c",
    "#791a1f",
    "#a61d24",
    "#d32029",
    "#e84749",
    "#f37370",
    "#f89f9a",
    "#fac8c3"
];
redDark.primary = redDark[5];
var volcanoDark = [
    "#2b1611",
    "#441d12",
    "#592716",
    "#7c3118",
    "#aa3e19",
    "#d84a1b",
    "#e87040",
    "#f3956a",
    "#f8b692",
    "#fad4bc"
];
volcanoDark.primary = volcanoDark[5];
var orangeDark = [
    "#2b1d11",
    "#442a11",
    "#593815",
    "#7c4a15",
    "#aa6215",
    "#d87a16",
    "#e89a3c",
    "#f3b765",
    "#f8cf8d",
    "#fae3b7"
];
orangeDark.primary = orangeDark[5];
var goldDark = [
    "#2b2111",
    "#443111",
    "#594214",
    "#7c5914",
    "#aa7714",
    "#d89614",
    "#e8b339",
    "#f3cc62",
    "#f8df8b",
    "#faedb5"
];
goldDark.primary = goldDark[5];
var yellowDark = [
    "#2b2611",
    "#443b11",
    "#595014",
    "#7c6e14",
    "#aa9514",
    "#d8bd14",
    "#e8d639",
    "#f3ea62",
    "#f8f48b",
    "#fafab5"
];
yellowDark.primary = yellowDark[5];
var limeDark = [
    "#1f2611",
    "#2e3c10",
    "#3e4f13",
    "#536d13",
    "#6f9412",
    "#8bbb11",
    "#a9d134",
    "#c9e75d",
    "#e4f88b",
    "#f0fab5"
];
limeDark.primary = limeDark[5];
var greenDark = [
    "#162312",
    "#1d3712",
    "#274916",
    "#306317",
    "#3c8618",
    "#49aa19",
    "#6abe39",
    "#8fd460",
    "#b2e58b",
    "#d5f2bb"
];
greenDark.primary = greenDark[5];
var cyanDark = [
    "#112123",
    "#113536",
    "#144848",
    "#146262",
    "#138585",
    "#13a8a8",
    "#33bcb7",
    "#58d1c9",
    "#84e2d8",
    "#b2f1e8"
];
cyanDark.primary = cyanDark[5];
var blueDark = [
    "#111a2c",
    "#112545",
    "#15325b",
    "#15417e",
    "#1554ad",
    "#1668dc",
    "#3c89e8",
    "#65a9f3",
    "#8dc5f8",
    "#b7dcfa"
];
blueDark.primary = blueDark[5];
var geekblueDark = [
    "#131629",
    "#161d40",
    "#1c2755",
    "#203175",
    "#263ea0",
    "#2b4acb",
    "#5273e0",
    "#7f9ef3",
    "#a8c1f8",
    "#d2e0fa"
];
geekblueDark.primary = geekblueDark[5];
var purpleDark = [
    "#1a1325",
    "#24163a",
    "#301c4d",
    "#3e2069",
    "#51258f",
    "#642ab5",
    "#854eca",
    "#ab7ae0",
    "#cda8f0",
    "#ebd7fa"
];
purpleDark.primary = purpleDark[5];
var magentaDark = [
    "#291321",
    "#40162f",
    "#551c3b",
    "#75204f",
    "#a02669",
    "#cb2b83",
    "#e0529c",
    "#f37fb7",
    "#f8a8cc",
    "#fad2e3"
];
magentaDark.primary = magentaDark[5];
var greyDark = [
    "#151515",
    "#1f1f1f",
    "#2d2d2d",
    "#393939",
    "#494949",
    "#5a5a5a",
    "#6a6a6a",
    "#7b7b7b",
    "#888888",
    "#969696"
];
greyDark.primary = greyDark[5];
var presetDarkPalettes = {
    red: redDark,
    volcano: volcanoDark,
    orange: orangeDark,
    gold: goldDark,
    yellow: yellowDark,
    lime: limeDark,
    green: greenDark,
    cyan: cyanDark,
    blue: blueDark,
    geekblue: geekblueDark,
    purple: purpleDark,
    magenta: magentaDark,
    grey: greyDark
};

},
"node_modules/@ant-design/pro-layout/node_modules/@ant-design/colors/es/types.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});

},
"node_modules/@ant-design/pro-list/es/Item.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    default: function() {
        return _default;
    },
    renderExpandIcon: function() {
        return renderExpandIcon;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _slicedToArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/slicedToArray.js"));
var _objectWithoutProperties = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"));
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _icons = __mako_require__("node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/es/index.js");
var _procard = __mako_require__("node_modules/@ant-design/pro-card/es/index.js");
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _classnames = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/classnames/index.js"));
var _useMergedState = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-list/node_modules/rc-util/es/hooks/useMergedState.js"));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var _excluded = [
    "title",
    "subTitle",
    "content",
    "itemTitleRender",
    "prefixCls",
    "actions",
    "item",
    "recordKey",
    "avatar",
    "cardProps",
    "description",
    "isEditable",
    "checkbox",
    "index",
    "selected",
    "loading",
    "expand",
    "onExpand",
    "expandable",
    "rowSupportExpand",
    "showActions",
    "showExtra",
    "type",
    "style",
    "className",
    "record",
    "onRow",
    "onItem",
    "itemHeaderRender",
    "cardActionProps",
    "extra"
];
function renderExpandIcon(_ref) {
    var prefixCls = _ref.prefixCls, _ref$expandIcon = _ref.expandIcon, expandIcon = _ref$expandIcon === void 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.RightOutlined, {}) : _ref$expandIcon, onExpand = _ref.onExpand, expanded = _ref.expanded, record = _ref.record, hashId = _ref.hashId;
    var icon = expandIcon;
    var expandClassName = "".concat(prefixCls, "-row-expand-icon");
    var onClick = function onClick(event) {
        onExpand(!expanded);
        event.stopPropagation();
    };
    if (typeof expandIcon === 'function') icon = expandIcon({
        expanded: expanded,
        onExpand: onExpand,
        record: record
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
        className: (0, _classnames.default)(expandClassName, hashId, (0, _defineProperty.default)((0, _defineProperty.default)({}, "".concat(prefixCls, "-row-expanded"), expanded), "".concat(prefixCls, "-row-collapsed"), !expanded)),
        onClick: onClick,
        children: icon
    });
}
function ProListItem(props) {
    var _ref3, _ref4;
    var customizePrefixCls = props.prefixCls;
    var _useContext = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
    var _useContext2 = (0, _react.useContext)(_proprovider.ProProvider), hashId = _useContext2.hashId;
    var prefixCls = getPrefixCls('pro-list', customizePrefixCls);
    var defaultClassName = "".concat(prefixCls, "-row");
    var title = props.title, subTitle = props.subTitle, content = props.content, itemTitleRender = props.itemTitleRender, restPrefixCls = props.prefixCls, actions = props.actions, item = props.item, recordKey = props.recordKey, avatar = props.avatar, cardProps = props.cardProps, description = props.description, isEditable = props.isEditable, checkbox = props.checkbox, index = props.index, selected = props.selected, loading = props.loading, propsExpand = props.expand, propsOnExpand = props.onExpand, expandableConfig = props.expandable, rowSupportExpand = props.rowSupportExpand, showActions = props.showActions, showExtra = props.showExtra, type = props.type, style = props.style, _props$className = props.className, propsClassName = _props$className === void 0 ? defaultClassName : _props$className, record = props.record, onRow = props.onRow, onItem = props.onItem, itemHeaderRender = props.itemHeaderRender, cardActionProps = props.cardActionProps, extra = props.extra, rest = (0, _objectWithoutProperties.default)(props, _excluded);
    var _ref2 = expandableConfig || {}, expandedRowRender = _ref2.expandedRowRender, expandIcon = _ref2.expandIcon, expandRowByClick = _ref2.expandRowByClick, _ref2$indentSize = _ref2.indentSize, indentSize = _ref2$indentSize === void 0 ? 8 : _ref2$indentSize, expandedRowClassName = _ref2.expandedRowClassName;
    var _useMergedState1 = (0, _useMergedState.default)(!!propsExpand, {
        value: propsExpand,
        onChange: propsOnExpand
    }), _useMergedState2 = (0, _slicedToArray.default)(_useMergedState1, 2), expanded = _useMergedState2[0], onExpand = _useMergedState2[1];
    var className = (0, _classnames.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({}, "".concat(defaultClassName, "-selected"), !cardProps && selected), "".concat(defaultClassName, "-show-action-hover"), showActions === 'hover'), "".concat(defaultClassName, "-type-").concat(type), !!type), "".concat(defaultClassName, "-editable"), isEditable), "".concat(defaultClassName, "-show-extra-hover"), showExtra === 'hover'), hashId, defaultClassName);
    var extraClassName = (0, _classnames.default)(hashId, (0, _defineProperty.default)({}, "".concat(propsClassName, "-extra"), showExtra === 'hover'));
    var needExpanded = expanded || Object.values(expandableConfig || {}).length === 0;
    var expandedRowDom = expandedRowRender && expandedRowRender(record, index, indentSize, expanded);
    var extraDom = (0, _react.useMemo)(function() {
        if (!actions || cardActionProps === 'actions') return undefined;
        return [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                onClick: function onClick(e) {
                    return e.stopPropagation();
                },
                children: actions
            }, "action")
        ];
    }, [
        actions,
        cardActionProps
    ]);
    var actionsDom = (0, _react.useMemo)(function() {
        if (!actions || !cardActionProps || cardActionProps === 'extra') return undefined;
        return [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "".concat(defaultClassName, "-actions ").concat(hashId).trim(),
                onClick: function onClick(e) {
                    return e.stopPropagation();
                },
                children: actions
            }, "action")
        ];
    }, [
        actions,
        cardActionProps,
        defaultClassName,
        hashId
    ]);
    var titleDom = title || subTitle ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "".concat(defaultClassName, "-header-container ").concat(hashId).trim(),
        children: [
            title && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: (0, _classnames.default)("".concat(defaultClassName, "-title"), hashId, (0, _defineProperty.default)({}, "".concat(defaultClassName, "-title-editable"), isEditable)),
                children: title
            }),
            subTitle && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: (0, _classnames.default)("".concat(defaultClassName, "-subTitle"), hashId, (0, _defineProperty.default)({}, "".concat(defaultClassName, "-subTitle-editable"), isEditable)),
                children: subTitle
            })
        ]
    }) : null;
    var metaTitle = (_ref3 = itemTitleRender && (itemTitleRender === null || itemTitleRender === void 0 ? void 0 : itemTitleRender(record, index, titleDom))) !== null && _ref3 !== void 0 ? _ref3 : titleDom;
    var metaDom = metaTitle || avatar || subTitle || description ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.List.Item.Meta, {
        avatar: avatar,
        title: metaTitle,
        description: description && needExpanded && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "".concat(className, "-description ").concat(hashId).trim(),
            children: description
        })
    }) : null;
    var rowClassName = (0, _classnames.default)(hashId, (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({}, "".concat(defaultClassName, "-item-has-checkbox"), checkbox), "".concat(defaultClassName, "-item-has-avatar"), avatar), className, className));
    var cardTitleDom = (0, _react.useMemo)(function() {
        if (avatar || title) return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [
                avatar,
                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                    className: "".concat(getPrefixCls('list-item-meta-title'), " ").concat(hashId).trim(),
                    children: title
                })
            ]
        });
        return null;
    }, [
        avatar,
        getPrefixCls,
        hashId,
        title
    ]);
    var itemProps = onItem === null || onItem === void 0 ? void 0 : onItem(record, index);
    var defaultDom = !cardProps ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.List.Item, (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({
        className: (0, _classnames.default)(rowClassName, hashId, (0, _defineProperty.default)({}, propsClassName, propsClassName !== defaultClassName))
    }, rest), {}, {
        actions: extraDom,
        extra: !!extra && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: extraClassName,
            children: extra
        })
    }, onRow === null || onRow === void 0 ? void 0 : onRow(record, index)), itemProps), {}, {
        onClick: function onClick(e) {
            var _onRow, _onRow$onClick, _onItem, _onItem$onClick;
            onRow === null || onRow === void 0 || (_onRow = onRow(record, index)) === null || _onRow === void 0 || (_onRow$onClick = _onRow.onClick) === null || _onRow$onClick === void 0 || _onRow$onClick.call(_onRow, e);
            onItem === null || onItem === void 0 || (_onItem = onItem(record, index)) === null || _onItem === void 0 || (_onItem$onClick = _onItem.onClick) === null || _onItem$onClick === void 0 || _onItem$onClick.call(_onItem, e);
            if (expandRowByClick) onExpand(!expanded);
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_antd.Skeleton, {
            avatar: true,
            title: false,
            loading: loading,
            active: true,
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "".concat(className, "-header ").concat(hashId).trim(),
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "".concat(className, "-header-option ").concat(hashId).trim(),
                            children: [
                                !!checkbox && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "".concat(className, "-checkbox ").concat(hashId).trim(),
                                    children: checkbox
                                }),
                                Object.values(expandableConfig || {}).length > 0 && rowSupportExpand && renderExpandIcon({
                                    prefixCls: prefixCls,
                                    hashId: hashId,
                                    expandIcon: expandIcon,
                                    onExpand: onExpand,
                                    expanded: expanded,
                                    record: record
                                })
                            ]
                        }),
                        (_ref4 = itemHeaderRender && (itemHeaderRender === null || itemHeaderRender === void 0 ? void 0 : itemHeaderRender(record, index, metaDom))) !== null && _ref4 !== void 0 ? _ref4 : metaDom
                    ]
                }),
                needExpanded && (content || expandedRowDom) && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "".concat(className, "-content ").concat(hashId).trim(),
                    children: [
                        content,
                        expandedRowRender && rowSupportExpand && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: expandedRowClassName && typeof expandedRowClassName !== 'string' ? expandedRowClassName(record, index, indentSize) : expandedRowClassName,
                            children: expandedRowDom
                        })
                    ]
                })
            ]
        })
    })) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_procard.CheckCard, (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({
        bordered: true,
        style: {
            width: '100%'
        }
    }, cardProps), {}, {
        title: cardTitleDom,
        subTitle: subTitle,
        extra: extraDom,
        actions: actionsDom,
        bodyStyle: (0, _objectSpread2.default)({
            padding: 24
        }, cardProps.bodyStyle)
    }, itemProps), {}, {
        onClick: function onClick(e) {
            var _cardProps$onClick, _itemProps$onClick;
            cardProps === null || cardProps === void 0 || (_cardProps$onClick = cardProps.onClick) === null || _cardProps$onClick === void 0 || _cardProps$onClick.call(cardProps, e);
            itemProps === null || itemProps === void 0 || (_itemProps$onClick = itemProps.onClick) === null || _itemProps$onClick === void 0 || _itemProps$onClick.call(itemProps, e);
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
            avatar: true,
            title: false,
            loading: loading,
            active: true,
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "".concat(className, "-header ").concat(hashId).trim(),
                children: [
                    itemTitleRender && (itemTitleRender === null || itemTitleRender === void 0 ? void 0 : itemTitleRender(record, index, titleDom)),
                    content
                ]
            })
        })
    }));
    if (!cardProps) return defaultDom;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: (0, _classnames.default)(hashId, (0, _defineProperty.default)((0, _defineProperty.default)({}, "".concat(className, "-card"), cardProps), propsClassName, propsClassName !== defaultClassName)),
        style: style,
        children: defaultDom
    });
}
var _default = ProListItem;

},
"node_modules/@ant-design/pro-list/es/ListView.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _toConsumableArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"));
var _slicedToArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/slicedToArray.js"));
var _objectWithoutProperties = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"));
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _useLazyKVMap = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/antd/es/table/hooks/useLazyKVMap.js"));
var _usePagination = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/antd/es/table/hooks/usePagination.js"));
var _useSelection = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/antd/es/table/hooks/useSelection.js"));
var _classnames = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/classnames/index.js"));
var _get = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-list/node_modules/rc-util/es/utils/get.js"));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _Item = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-list/es/Item.js"));
var _constants = __mako_require__("node_modules/@ant-design/pro-list/es/constants.js");
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var _excluded = [
    "dataSource",
    "columns",
    "rowKey",
    "showActions",
    "showExtra",
    "prefixCls",
    "actionRef",
    "itemTitleRender",
    "renderItem",
    "itemCardProps",
    "itemHeaderRender",
    "expandable",
    "rowSelection",
    "pagination",
    "onRow",
    "onItem",
    "rowClassName"
];
function ListView(props) {
    var dataSource = props.dataSource, columns = props.columns, rowKey = props.rowKey, showActions = props.showActions, showExtra = props.showExtra, customizePrefixCls = props.prefixCls, actionRef = props.actionRef, itemTitleRender = props.itemTitleRender, _renderItem = props.renderItem, itemCardProps = props.itemCardProps, itemHeaderRender = props.itemHeaderRender, expandableConfig = props.expandable, rowSelection = props.rowSelection, pagination = props.pagination, onRow = props.onRow, onItem = props.onItem, rowClassName = props.rowClassName, rest = (0, _objectWithoutProperties.default)(props, _excluded);
    var _useContext = (0, _react.useContext)(_proprovider.ProProvider), hashId = _useContext.hashId;
    var _useContext2 = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext), getPrefixCls = _useContext2.getPrefixCls;
    var getRowKey = _react.default.useMemo(function() {
        if (typeof rowKey === 'function') return rowKey;
        return function(record, index) {
            return record[rowKey] || index;
        };
    }, [
        rowKey
    ]);
    var _useLazyKVMap1 = (0, _useLazyKVMap.default)(dataSource, 'children', getRowKey), _useLazyKVMap2 = (0, _slicedToArray.default)(_useLazyKVMap1, 1), getRecordByKey = _useLazyKVMap2[0];
    var usePaginationArgs = [
        function() {},
        pagination
    ];
    // 兼容 5.2.0 以下的版本
    if ((0, _proutils.compareVersions)(_antd.version, '5.3.0') < 0) usePaginationArgs.reverse();
    // 合并分页的的配置，这里是为了兼容 antd 的分页
    var _usePagination1 = (0, _usePagination.default)(dataSource.length, usePaginationArgs[0], usePaginationArgs[1]), _usePagination2 = (0, _slicedToArray.default)(_usePagination1, 1), mergedPagination = _usePagination2[0];
    /** 根据分页来返回不同的数据，模拟 table */ var pageData = _react.default.useMemo(function() {
        if (pagination === false || !mergedPagination.pageSize || dataSource.length < mergedPagination.total) return dataSource;
        var _mergedPagination$cur = mergedPagination.current, current = _mergedPagination$cur === void 0 ? 1 : _mergedPagination$cur, _mergedPagination$pag = mergedPagination.pageSize, pageSize = _mergedPagination$pag === void 0 ? 10 : _mergedPagination$pag;
        var currentPageData = dataSource.slice((current - 1) * pageSize, current * pageSize);
        return currentPageData;
    }, [
        dataSource,
        mergedPagination,
        pagination
    ]);
    var prefixCls = getPrefixCls('pro-list', customizePrefixCls);
    /** 提供和 table 一样的 rowSelection 配置 */ var useSelectionArgs = [
        {
            getRowKey: getRowKey,
            getRecordByKey: getRecordByKey,
            prefixCls: prefixCls,
            data: dataSource,
            pageData: pageData,
            expandType: 'row',
            childrenColumnName: 'children',
            locale: {}
        },
        rowSelection
    ];
    // 兼容 5.2.0 以下的版本
    if ((0, _proutils.compareVersions)(_antd.version, '5.3.0') < 0) useSelectionArgs.reverse();
    var _useSelection1 = _useSelection.default.apply(void 0, useSelectionArgs), _useSelection2 = (0, _slicedToArray.default)(_useSelection1, 2), selectItemRender = _useSelection2[0], selectedKeySet = _useSelection2[1];
    // 提供和 Table 一样的 expand 支持
    var _ref = expandableConfig || {}, expandedRowKeys = _ref.expandedRowKeys, defaultExpandedRowKeys = _ref.defaultExpandedRowKeys, _ref$defaultExpandAll = _ref.defaultExpandAllRows, defaultExpandAllRows = _ref$defaultExpandAll === void 0 ? true : _ref$defaultExpandAll, onExpand = _ref.onExpand, onExpandedRowsChange = _ref.onExpandedRowsChange, rowExpandable = _ref.rowExpandable;
    /** 展开收起功能区域 star */ var _React$useState = _react.default.useState(function() {
        if (defaultExpandedRowKeys) return defaultExpandedRowKeys;
        if (defaultExpandAllRows !== false) return dataSource.map(getRowKey);
        return [];
    }), _React$useState2 = (0, _slicedToArray.default)(_React$useState, 2), innerExpandedKeys = _React$useState2[0], setInnerExpandedKeys = _React$useState2[1];
    var mergedExpandedKeys = _react.default.useMemo(function() {
        return new Set(expandedRowKeys || innerExpandedKeys || []);
    }, [
        expandedRowKeys,
        innerExpandedKeys
    ]);
    var onTriggerExpand = _react.default.useCallback(function(record) {
        var key = getRowKey(record, dataSource.indexOf(record));
        var newExpandedKeys;
        var hasKey = mergedExpandedKeys.has(key);
        if (hasKey) {
            mergedExpandedKeys.delete(key);
            newExpandedKeys = (0, _toConsumableArray.default)(mergedExpandedKeys);
        } else newExpandedKeys = [].concat((0, _toConsumableArray.default)(mergedExpandedKeys), [
            key
        ]);
        setInnerExpandedKeys(newExpandedKeys);
        if (onExpand) onExpand(!hasKey, record);
        if (onExpandedRowsChange) onExpandedRowsChange(newExpandedKeys);
    }, [
        getRowKey,
        mergedExpandedKeys,
        dataSource,
        onExpand,
        onExpandedRowsChange
    ]);
    /** 展开收起功能区域 end */ /** 这个是 选择框的 render 方法 为了兼容 antd 的 table,用了同样的渲染逻辑 所以看起来有点奇怪 */ var selectItemDom = selectItemRender([])[0];
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.List, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, rest), {}, {
        className: (0, _classnames.default)(getPrefixCls('pro-list-container', customizePrefixCls), hashId, rest.className),
        dataSource: pageData,
        pagination: pagination && mergedPagination,
        renderItem: function renderItem(item, index) {
            var _actionRef$current;
            var listItemProps = {
                className: typeof rowClassName === 'function' ? rowClassName(item, index) : rowClassName
            };
            columns === null || columns === void 0 || columns.forEach(function(column) {
                var listKey = column.listKey, cardActionProps = column.cardActionProps;
                if (!_constants.PRO_LIST_KEYS_MAP.has(listKey)) return;
                var dataIndex = column.dataIndex || listKey || column.key;
                var rawData = Array.isArray(dataIndex) ? (0, _get.default)(item, dataIndex) : item[dataIndex];
                /** 如果cardActionProps 需要直接使用源数组，因为 action 必须要源数组 */ if (cardActionProps === 'actions' && listKey === 'actions') listItemProps.cardActionProps = cardActionProps;
                // 调用protable的列配置渲染数据
                var data = column.render ? column.render(rawData, item, index) : rawData;
                if (data !== '-') listItemProps[column.listKey] = data;
            });
            var checkboxDom;
            if (selectItemDom && selectItemDom.render) checkboxDom = selectItemDom.render(item, item, index);
            var _ref2 = ((_actionRef$current = actionRef.current) === null || _actionRef$current === void 0 ? void 0 : _actionRef$current.isEditable((0, _objectSpread2.default)((0, _objectSpread2.default)({}, item), {}, {
                index: index
            }))) || {}, isEditable = _ref2.isEditable, recordKey = _ref2.recordKey;
            var isChecked = selectedKeySet.has(recordKey || index);
            var defaultDom = /*#__PURE__*/ (0, _jsxruntime.jsx)(_Item.default, (0, _objectSpread2.default)((0, _objectSpread2.default)({
                cardProps: rest.grid ? (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, itemCardProps), rest.grid), {}, {
                    checked: isChecked,
                    onChange: /*#__PURE__*/ _react.default.isValidElement(checkboxDom) ? function(changeChecked) {
                        var _checkboxDom;
                        return (_checkboxDom = checkboxDom) === null || _checkboxDom === void 0 || (_checkboxDom = _checkboxDom.props) === null || _checkboxDom === void 0 ? void 0 : _checkboxDom.onChange({
                            nativeEvent: {},
                            changeChecked: changeChecked
                        });
                    } : undefined
                }) : undefined
            }, listItemProps), {}, {
                recordKey: recordKey,
                isEditable: isEditable || false,
                expandable: expandableConfig,
                expand: mergedExpandedKeys.has(getRowKey(item, index)),
                onExpand: function onExpand() {
                    onTriggerExpand(item);
                },
                index: index,
                record: item,
                item: item,
                showActions: showActions,
                showExtra: showExtra,
                itemTitleRender: itemTitleRender,
                itemHeaderRender: itemHeaderRender,
                rowSupportExpand: !rowExpandable || rowExpandable && rowExpandable(item),
                selected: selectedKeySet.has(getRowKey(item, index)),
                checkbox: checkboxDom,
                onRow: onRow,
                onItem: onItem
            }), recordKey);
            if (_renderItem) return _renderItem(item, index, defaultDom);
            return defaultDom;
        }
    }));
}
var _default = ListView;

},
"node_modules/@ant-design/pro-list/es/constants.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    PRO_LIST_KEYS: function() {
        return PRO_LIST_KEYS;
    },
    PRO_LIST_KEYS_MAP: function() {
        return PRO_LIST_KEYS_MAP;
    }
});
var PRO_LIST_KEYS = [
    'title',
    'subTitle',
    'avatar',
    'description',
    'extra',
    'content',
    'actions',
    'type'
];
var PRO_LIST_KEYS_MAP = PRO_LIST_KEYS.reduce(function(pre, next) {
    pre.set(next, true);
    return pre;
}, new Map());

},
"node_modules/@ant-design/pro-list/es/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    BaseProList: function() {
        return BaseProList;
    },
    ProList: function() {
        return ProList;
    },
    default: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _objectWithoutProperties = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"));
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var _protable = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/index.js"));
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _classnames = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/classnames/index.js"));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _ListView = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-list/es/ListView.js"));
var _index = __mako_require__("node_modules/@ant-design/pro-list/es/style/index.js");
__mako_require__("node_modules/antd/es/list/style/index.js");
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var _excluded = [
    "metas",
    "split",
    "footer",
    "rowKey",
    "tooltip",
    "className",
    "options",
    "search",
    "expandable",
    "showActions",
    "showExtra",
    "rowSelection",
    "pagination",
    "itemLayout",
    "renderItem",
    "grid",
    "itemCardProps",
    "onRow",
    "onItem",
    "rowClassName",
    "locale",
    "itemHeaderRender",
    "itemTitleRender"
];
function NoProVideProList(props) {
    var metals = props.metas, split = props.split, footer = props.footer, rowKey = props.rowKey, tooltip = props.tooltip, className = props.className, _props$options = props.options, options = _props$options === void 0 ? false : _props$options, _props$search = props.search, search = _props$search === void 0 ? false : _props$search, expandable = props.expandable, showActions = props.showActions, showExtra = props.showExtra, _props$rowSelection = props.rowSelection, propRowSelection = _props$rowSelection === void 0 ? false : _props$rowSelection, _props$pagination = props.pagination, propsPagination = _props$pagination === void 0 ? false : _props$pagination, itemLayout = props.itemLayout, renderItem = props.renderItem, grid = props.grid, itemCardProps = props.itemCardProps, onRow = props.onRow, onItem = props.onItem, rowClassName = props.rowClassName, locale = props.locale, itemHeaderRender = props.itemHeaderRender, itemTitleRender = props.itemTitleRender, rest = (0, _objectWithoutProperties.default)(props, _excluded);
    var actionRef = (0, _react.useRef)();
    (0, _react.useImperativeHandle)(rest.actionRef, function() {
        return actionRef.current;
    }, [
        actionRef.current
    ]);
    var _useContext = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
    var proTableColumns = (0, _react.useMemo)(function() {
        var columns = [];
        Object.keys(metals || {}).forEach(function(key) {
            var meta = metals[key] || {};
            var valueType = meta.valueType;
            if (!valueType) {
                // 根据 key 给不同的 valueType
                if (key === 'avatar') valueType = 'avatar';
                if (key === 'actions') valueType = 'option';
                if (key === 'description') valueType = 'textarea';
            }
            columns.push((0, _objectSpread2.default)((0, _objectSpread2.default)({
                listKey: key,
                dataIndex: (meta === null || meta === void 0 ? void 0 : meta.dataIndex) || key
            }, meta), {}, {
                valueType: valueType
            }));
        });
        return columns;
    }, [
        metals
    ]);
    var prefixCls = getPrefixCls('pro-list', props.prefixCls);
    var _useStyle = (0, _index.useStyle)(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
    var listClassName = (0, _classnames.default)(prefixCls, hashId, (0, _defineProperty.default)({}, "".concat(prefixCls, "-no-split"), !split));
    return wrapSSR(/*#__PURE__*/ (0, _jsxruntime.jsx)(_protable.default, (0, _objectSpread2.default)((0, _objectSpread2.default)({
        tooltip: tooltip
    }, rest), {}, {
        actionRef: actionRef,
        pagination: propsPagination,
        type: "list",
        rowSelection: propRowSelection,
        search: search,
        options: options,
        className: (0, _classnames.default)(prefixCls, className, listClassName),
        columns: proTableColumns,
        rowKey: rowKey,
        tableViewRender: function tableViewRender(_ref) {
            var columns = _ref.columns, size = _ref.size, pagination = _ref.pagination, rowSelection = _ref.rowSelection, dataSource = _ref.dataSource, loading = _ref.loading;
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_ListView.default, {
                grid: grid,
                itemCardProps: itemCardProps,
                itemTitleRender: itemTitleRender,
                prefixCls: props.prefixCls,
                columns: columns,
                renderItem: renderItem,
                actionRef: actionRef,
                dataSource: dataSource || [],
                size: size,
                footer: footer,
                split: split,
                rowKey: rowKey,
                expandable: expandable,
                rowSelection: propRowSelection === false ? undefined : rowSelection,
                showActions: showActions,
                showExtra: showExtra,
                pagination: pagination,
                itemLayout: itemLayout,
                loading: loading,
                itemHeaderRender: itemHeaderRender,
                onRow: onRow,
                onItem: onItem,
                rowClassName: rowClassName,
                locale: locale
            });
        }
    })));
}
function BaseProList(props) {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_proprovider.ProConfigProvider, {
        needDeps: true,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(NoProVideProList, (0, _objectSpread2.default)({
            cardProps: false,
            search: false,
            toolBarRender: false
        }, props))
    });
}
function ProList(props) {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_proprovider.ProConfigProvider, {
        needDeps: true,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(NoProVideProList, (0, _objectSpread2.default)({}, props))
    });
}
var _default = ProList;

},
"node_modules/@ant-design/pro-list/es/style/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    techUiListActive: function() {
        return techUiListActive;
    },
    useStyle: function() {
        return useStyle;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _cssinjs = __mako_require__("node_modules/@ant-design/cssinjs/es/index.js");
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var techUiListActive = new _cssinjs.Keyframes('techUiListActive', {
    '0%': {
        backgroundColor: 'unset'
    },
    '30%': {
        background: '#fefbe6'
    },
    '100%': {
        backgroundColor: 'unset'
    }
});
var genProListStyle = function genProListStyle(token) {
    var _row;
    return (0, _defineProperty.default)({}, token.componentCls, (0, _defineProperty.default)((0, _defineProperty.default)({
        backgroundColor: 'transparent'
    }, "".concat(token.proComponentsCls, "-table-alert"), {
        marginBlockEnd: '16px'
    }), '&-row', (_row = {
        borderBlockEnd: "1px solid ".concat(token.colorSplit)
    }, (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)(_row, "".concat(token.antCls, "-list-item-meta-title"), {
        borderBlockEnd: 'none',
        margin: 0
    }), '&:last-child', (0, _defineProperty.default)({
        borderBlockEnd: 'none'
    }, "".concat(token.antCls, "-list-item"), {
        borderBlockEnd: 'none'
    })), '&:hover', (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({
        backgroundColor: 'rgba(0, 0, 0, 0.02)',
        transition: 'background-color 0.3s'
    }, "".concat(token.antCls, "-list-item-action"), {
        display: 'block'
    }), "".concat(token.antCls, "-list-item-extra"), {
        display: 'flex'
    }), "".concat(token.componentCls, "-row-extra"), {
        display: 'block'
    }), "".concat(token.componentCls, "-row-subheader-actions"), {
        display: 'block'
    })), '&-card', (0, _defineProperty.default)({
        marginBlock: 8,
        marginInline: 0,
        paddingBlock: 0,
        paddingInline: 8,
        '&:hover': {
            backgroundColor: 'transparent'
        }
    }, "".concat(token.antCls, "-list-item-meta-title"), {
        flexShrink: 9,
        marginBlock: 0,
        marginInline: 0,
        lineHeight: '22px'
    })), "&".concat(token.componentCls, "-row-editable"), (0, _defineProperty.default)({}, "".concat(token.componentCls, "-list-item"), {
        '&-meta': {
            '&-avatar,&-description,&-title': {
                paddingBlock: 6,
                paddingInline: 0,
                '&-editable': {
                    paddingBlock: 0
                }
            }
        },
        '&-action': {
            display: 'block'
        }
    })), "&".concat(token.componentCls, "-row-selected"), {
        backgroundColor: token.colorPrimaryBgHover,
        '&:hover': {
            backgroundColor: token.colorPrimaryBgHover
        }
    }), "&".concat(token.componentCls, "-row-type-new"), {
        animationName: techUiListActive,
        animationDuration: '3s'
    }), "&".concat(token.componentCls, "-row-type-inline"), (0, _defineProperty.default)({}, "".concat(token.componentCls, "-row-title"), {
        fontWeight: 'normal'
    })), "&".concat(token.componentCls, "-row-type-top"), {
        backgroundImage: "url('https://gw.alipayobjects.com/zos/antfincdn/DehQfMbOJb/icon.svg')",
        backgroundRepeat: 'no-repeat',
        backgroundPosition: 'left top',
        backgroundSize: '12px 12px'
    }), '&-show-action-hover', (0, _defineProperty.default)({}, "".concat(token.antCls, "-list-item-action,\n            ").concat(token.proComponentsCls, "-card-extra,\n            ").concat(token.proComponentsCls, "-card-actions"), {
        display: 'flex'
    })), (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)(_row, '&-show-extra-hover', (0, _defineProperty.default)({}, "".concat(token.antCls, "-list-item-extra"), {
        display: 'none'
    })), '&-extra', {
        display: 'none'
    }), '&-subheader', {
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'space-between',
        height: '44px',
        paddingInline: 24,
        paddingBlock: 0,
        color: token.colorTextSecondary,
        lineHeight: '44px',
        background: 'rgba(0, 0, 0, 0.02)',
        '&-actions': {
            display: 'none'
        },
        '&-actions *': {
            marginInlineEnd: 8,
            '&:last-child': {
                marginInlineEnd: 0
            }
        }
    }), '&-expand-icon', {
        marginInlineEnd: 8,
        display: 'flex',
        fontSize: 12,
        cursor: 'pointer',
        height: '24px',
        marginRight: 4,
        color: token.colorTextSecondary,
        '> .anticon > svg': {
            transition: '0.3s'
        }
    }), '&-expanded', {
        ' > .anticon > svg': {
            transform: 'rotate(90deg)'
        }
    }), '&-title', {
        marginInlineEnd: '16px',
        wordBreak: 'break-all',
        cursor: 'pointer',
        '&-editable': {
            paddingBlock: 8
        },
        '&:hover': {
            color: token.colorPrimary
        }
    }), '&-content', {
        position: 'relative',
        display: 'flex',
        flex: '1',
        flexDirection: 'column',
        marginBlock: 0,
        marginInline: 32
    }), '&-subTitle', {
        color: 'rgba(0, 0, 0, 0.45)',
        '&-editable': {
            paddingBlock: 8
        }
    }), '&-description', {
        marginBlockStart: '4px',
        wordBreak: 'break-all'
    }), '&-avatar', {
        display: 'flex'
    }), (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)(_row, '&-header', {
        display: 'flex',
        flex: '1',
        justifyContent: 'flex-start',
        h4: {
            margin: 0,
            padding: 0
        }
    }), '&-header-container', {
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'flex-start'
    }), '&-header-option', {
        display: 'flex'
    }), '&-checkbox', {
        width: '16px',
        marginInlineEnd: '12px'
    }), '&-no-split', (0, _defineProperty.default)((0, _defineProperty.default)({}, "".concat(token.componentCls, "-row"), {
        borderBlockEnd: 'none'
    }), "".concat(token.antCls, "-list ").concat(token.antCls, "-list-item"), {
        borderBlockEnd: 'none'
    })), '&-bordered', (0, _defineProperty.default)({}, "".concat(token.componentCls, "-toolbar"), {
        borderBlockEnd: "1px solid ".concat(token.colorSplit)
    })), "".concat(token.antCls, "-list-vertical"), (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({}, "".concat(token.componentCls, "-row"), {
        borderBlockEnd: '12px 18px 12px 24px'
    }), '&-header-title', {
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'flex-start',
        justifyContent: 'center'
    }), '&-content', {
        marginBlock: 0,
        marginInline: 0
    }), '&-subTitle', {
        marginBlockStart: 8
    }), "".concat(token.antCls, "-list-item-extra"), (0, _defineProperty.default)({
        display: 'flex',
        alignItems: 'center',
        marginInlineStart: '32px'
    }, "".concat(token.componentCls, "-row-description"), {
        marginBlockStart: 16
    })), "".concat(token.antCls, "-list-bordered ").concat(token.antCls, "-list-item"), {
        paddingInline: 0
    }), "".concat(token.componentCls, "-row-show-extra-hover"), (0, _defineProperty.default)({}, "".concat(token.antCls, "-list-item-extra "), {
        display: 'none'
    }))), "".concat(token.antCls, "-list-pagination"), {
        marginBlockStart: token.margin,
        marginBlockEnd: token.margin
    }), "".concat(token.antCls, "-list-list"), {
        '&-item': {
            cursor: 'pointer',
            paddingBlock: 12,
            paddingInline: 12
        }
    }), "".concat(token.antCls, "-list-vertical ").concat(token.proComponentsCls, "-list-row"), (0, _defineProperty.default)({
        '&-header': {
            paddingBlock: 0,
            paddingInline: 0,
            borderBlockEnd: 'none'
        }
    }, "".concat(token.antCls, "-list-item"), (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({
        width: '100%',
        paddingBlock: 12,
        paddingInlineStart: 24,
        paddingInlineEnd: 18
    }, "".concat(token.antCls, "-list-item-meta-avatar"), {
        display: 'flex',
        alignItems: 'center',
        marginInlineEnd: 8
    }), "".concat(token.antCls, "-list-item-action-split"), {
        display: 'none'
    }), "".concat(token.antCls, "-list-item-meta-title"), {
        marginBlock: 0,
        marginInline: 0
    }))))));
};
function useStyle(prefixCls) {
    return (0, _proprovider.useStyle)('ProList', function(token) {
        var proListToken = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, token), {}, {
            componentCls: ".".concat(prefixCls)
        });
        return [
            genProListStyle(proListToken)
        ];
    });
}

},
"node_modules/@ant-design/pro-list/node_modules/@ant-design/colors/es/generate.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return generate;
    }
});
var _fastcolor = __mako_require__("node_modules/@ant-design/fast-color/es/index.js");
var hueStep = 2; // 色相阶梯
var saturationStep = 0.16; // 饱和度阶梯，浅色部分
var saturationStep2 = 0.05; // 饱和度阶梯，深色部分
var brightnessStep1 = 0.05; // 亮度阶梯，浅色部分
var brightnessStep2 = 0.15; // 亮度阶梯，深色部分
var lightColorCount = 5; // 浅色数量，主色上
var darkColorCount = 4; // 深色数量，主色下
// 暗色主题颜色映射关系表
var darkColorMap = [
    {
        index: 7,
        amount: 15
    },
    {
        index: 6,
        amount: 25
    },
    {
        index: 5,
        amount: 30
    },
    {
        index: 5,
        amount: 45
    },
    {
        index: 5,
        amount: 65
    },
    {
        index: 5,
        amount: 85
    },
    {
        index: 4,
        amount: 90
    },
    {
        index: 3,
        amount: 95
    },
    {
        index: 2,
        amount: 97
    },
    {
        index: 1,
        amount: 98
    }
];
function getHue(hsv, i, light) {
    var hue;
    // 根据色相不同，色相转向不同
    if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;
    else hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;
    if (hue < 0) hue += 360;
    else if (hue >= 360) hue -= 360;
    return hue;
}
function getSaturation(hsv, i, light) {
    // grey color don't change saturation
    if (hsv.h === 0 && hsv.s === 0) return hsv.s;
    var saturation;
    if (light) saturation = hsv.s - saturationStep * i;
    else if (i === darkColorCount) saturation = hsv.s + saturationStep;
    else saturation = hsv.s + saturationStep2 * i;
    // 边界值修正
    if (saturation > 1) saturation = 1;
    // 第一格的 s 限制在 0.06-0.1 之间
    if (light && i === lightColorCount && saturation > 0.1) saturation = 0.1;
    if (saturation < 0.06) saturation = 0.06;
    return Math.round(saturation * 100) / 100;
}
function getValue(hsv, i, light) {
    var value;
    if (light) value = hsv.v + brightnessStep1 * i;
    else value = hsv.v - brightnessStep2 * i;
    // Clamp value between 0 and 1
    value = Math.max(0, Math.min(1, value));
    return Math.round(value * 100) / 100;
}
function generate(color) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var patterns = [];
    var pColor = new _fastcolor.FastColor(color);
    var hsv = pColor.toHsv();
    for(var i = lightColorCount; i > 0; i -= 1){
        var c = new _fastcolor.FastColor({
            h: getHue(hsv, i, true),
            s: getSaturation(hsv, i, true),
            v: getValue(hsv, i, true)
        });
        patterns.push(c);
    }
    patterns.push(pColor);
    for(var _i = 1; _i <= darkColorCount; _i += 1){
        var _c = new _fastcolor.FastColor({
            h: getHue(hsv, _i),
            s: getSaturation(hsv, _i),
            v: getValue(hsv, _i)
        });
        patterns.push(_c);
    }
    // dark theme patterns
    if (opts.theme === 'dark') return darkColorMap.map(function(_ref) {
        var index = _ref.index, amount = _ref.amount;
        return new _fastcolor.FastColor(opts.backgroundColor || '#141414').mix(patterns[index], amount).toHexString();
    });
    return patterns.map(function(c) {
        return c.toHexString();
    });
}

},
"node_modules/@ant-design/pro-list/node_modules/@ant-design/colors/es/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "generate", {
    enumerable: true,
    get: function() {
        return _generate.default;
    }
});
var _export_star = __mako_require__("@swc/helpers/_/_export_star");
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _generate = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-list/node_modules/@ant-design/colors/es/generate.js"));
_export_star._(__mako_require__("node_modules/@ant-design/pro-list/node_modules/@ant-design/colors/es/presets.js"), exports);
_export_star._(__mako_require__("node_modules/@ant-design/pro-list/node_modules/@ant-design/colors/es/types.js"), exports);

},
"node_modules/@ant-design/pro-list/node_modules/@ant-design/colors/es/presets.js": function (module, exports, __mako_require__){
// Generated by script. Do NOT modify!
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    blue: function() {
        return blue;
    },
    blueDark: function() {
        return blueDark;
    },
    cyan: function() {
        return cyan;
    },
    cyanDark: function() {
        return cyanDark;
    },
    geekblue: function() {
        return geekblue;
    },
    geekblueDark: function() {
        return geekblueDark;
    },
    gold: function() {
        return gold;
    },
    goldDark: function() {
        return goldDark;
    },
    gray: function() {
        return gray;
    },
    green: function() {
        return green;
    },
    greenDark: function() {
        return greenDark;
    },
    grey: function() {
        return grey;
    },
    greyDark: function() {
        return greyDark;
    },
    lime: function() {
        return lime;
    },
    limeDark: function() {
        return limeDark;
    },
    magenta: function() {
        return magenta;
    },
    magentaDark: function() {
        return magentaDark;
    },
    orange: function() {
        return orange;
    },
    orangeDark: function() {
        return orangeDark;
    },
    presetDarkPalettes: function() {
        return presetDarkPalettes;
    },
    presetPalettes: function() {
        return presetPalettes;
    },
    presetPrimaryColors: function() {
        return presetPrimaryColors;
    },
    purple: function() {
        return purple;
    },
    purpleDark: function() {
        return purpleDark;
    },
    red: function() {
        return red;
    },
    redDark: function() {
        return redDark;
    },
    volcano: function() {
        return volcano;
    },
    volcanoDark: function() {
        return volcanoDark;
    },
    yellow: function() {
        return yellow;
    },
    yellowDark: function() {
        return yellowDark;
    }
});
var presetPrimaryColors = {
    "red": "#F5222D",
    "volcano": "#FA541C",
    "orange": "#FA8C16",
    "gold": "#FAAD14",
    "yellow": "#FADB14",
    "lime": "#A0D911",
    "green": "#52C41A",
    "cyan": "#13C2C2",
    "blue": "#1677FF",
    "geekblue": "#2F54EB",
    "purple": "#722ED1",
    "magenta": "#EB2F96",
    "grey": "#666666"
};
var red = [
    "#fff1f0",
    "#ffccc7",
    "#ffa39e",
    "#ff7875",
    "#ff4d4f",
    "#f5222d",
    "#cf1322",
    "#a8071a",
    "#820014",
    "#5c0011"
];
red.primary = red[5];
var volcano = [
    "#fff2e8",
    "#ffd8bf",
    "#ffbb96",
    "#ff9c6e",
    "#ff7a45",
    "#fa541c",
    "#d4380d",
    "#ad2102",
    "#871400",
    "#610b00"
];
volcano.primary = volcano[5];
var orange = [
    "#fff7e6",
    "#ffe7ba",
    "#ffd591",
    "#ffc069",
    "#ffa940",
    "#fa8c16",
    "#d46b08",
    "#ad4e00",
    "#873800",
    "#612500"
];
orange.primary = orange[5];
var gold = [
    "#fffbe6",
    "#fff1b8",
    "#ffe58f",
    "#ffd666",
    "#ffc53d",
    "#faad14",
    "#d48806",
    "#ad6800",
    "#874d00",
    "#613400"
];
gold.primary = gold[5];
var yellow = [
    "#feffe6",
    "#ffffb8",
    "#fffb8f",
    "#fff566",
    "#ffec3d",
    "#fadb14",
    "#d4b106",
    "#ad8b00",
    "#876800",
    "#614700"
];
yellow.primary = yellow[5];
var lime = [
    "#fcffe6",
    "#f4ffb8",
    "#eaff8f",
    "#d3f261",
    "#bae637",
    "#a0d911",
    "#7cb305",
    "#5b8c00",
    "#3f6600",
    "#254000"
];
lime.primary = lime[5];
var green = [
    "#f6ffed",
    "#d9f7be",
    "#b7eb8f",
    "#95de64",
    "#73d13d",
    "#52c41a",
    "#389e0d",
    "#237804",
    "#135200",
    "#092b00"
];
green.primary = green[5];
var cyan = [
    "#e6fffb",
    "#b5f5ec",
    "#87e8de",
    "#5cdbd3",
    "#36cfc9",
    "#13c2c2",
    "#08979c",
    "#006d75",
    "#00474f",
    "#002329"
];
cyan.primary = cyan[5];
var blue = [
    "#e6f4ff",
    "#bae0ff",
    "#91caff",
    "#69b1ff",
    "#4096ff",
    "#1677ff",
    "#0958d9",
    "#003eb3",
    "#002c8c",
    "#001d66"
];
blue.primary = blue[5];
var geekblue = [
    "#f0f5ff",
    "#d6e4ff",
    "#adc6ff",
    "#85a5ff",
    "#597ef7",
    "#2f54eb",
    "#1d39c4",
    "#10239e",
    "#061178",
    "#030852"
];
geekblue.primary = geekblue[5];
var purple = [
    "#f9f0ff",
    "#efdbff",
    "#d3adf7",
    "#b37feb",
    "#9254de",
    "#722ed1",
    "#531dab",
    "#391085",
    "#22075e",
    "#120338"
];
purple.primary = purple[5];
var magenta = [
    "#fff0f6",
    "#ffd6e7",
    "#ffadd2",
    "#ff85c0",
    "#f759ab",
    "#eb2f96",
    "#c41d7f",
    "#9e1068",
    "#780650",
    "#520339"
];
magenta.primary = magenta[5];
var grey = [
    "#a6a6a6",
    "#999999",
    "#8c8c8c",
    "#808080",
    "#737373",
    "#666666",
    "#404040",
    "#1a1a1a",
    "#000000",
    "#000000"
];
grey.primary = grey[5];
var gray = grey;
var presetPalettes = {
    red: red,
    volcano: volcano,
    orange: orange,
    gold: gold,
    yellow: yellow,
    lime: lime,
    green: green,
    cyan: cyan,
    blue: blue,
    geekblue: geekblue,
    purple: purple,
    magenta: magenta,
    grey: grey
};
var redDark = [
    "#2a1215",
    "#431418",
    "#58181c",
    "#791a1f",
    "#a61d24",
    "#d32029",
    "#e84749",
    "#f37370",
    "#f89f9a",
    "#fac8c3"
];
redDark.primary = redDark[5];
var volcanoDark = [
    "#2b1611",
    "#441d12",
    "#592716",
    "#7c3118",
    "#aa3e19",
    "#d84a1b",
    "#e87040",
    "#f3956a",
    "#f8b692",
    "#fad4bc"
];
volcanoDark.primary = volcanoDark[5];
var orangeDark = [
    "#2b1d11",
    "#442a11",
    "#593815",
    "#7c4a15",
    "#aa6215",
    "#d87a16",
    "#e89a3c",
    "#f3b765",
    "#f8cf8d",
    "#fae3b7"
];
orangeDark.primary = orangeDark[5];
var goldDark = [
    "#2b2111",
    "#443111",
    "#594214",
    "#7c5914",
    "#aa7714",
    "#d89614",
    "#e8b339",
    "#f3cc62",
    "#f8df8b",
    "#faedb5"
];
goldDark.primary = goldDark[5];
var yellowDark = [
    "#2b2611",
    "#443b11",
    "#595014",
    "#7c6e14",
    "#aa9514",
    "#d8bd14",
    "#e8d639",
    "#f3ea62",
    "#f8f48b",
    "#fafab5"
];
yellowDark.primary = yellowDark[5];
var limeDark = [
    "#1f2611",
    "#2e3c10",
    "#3e4f13",
    "#536d13",
    "#6f9412",
    "#8bbb11",
    "#a9d134",
    "#c9e75d",
    "#e4f88b",
    "#f0fab5"
];
limeDark.primary = limeDark[5];
var greenDark = [
    "#162312",
    "#1d3712",
    "#274916",
    "#306317",
    "#3c8618",
    "#49aa19",
    "#6abe39",
    "#8fd460",
    "#b2e58b",
    "#d5f2bb"
];
greenDark.primary = greenDark[5];
var cyanDark = [
    "#112123",
    "#113536",
    "#144848",
    "#146262",
    "#138585",
    "#13a8a8",
    "#33bcb7",
    "#58d1c9",
    "#84e2d8",
    "#b2f1e8"
];
cyanDark.primary = cyanDark[5];
var blueDark = [
    "#111a2c",
    "#112545",
    "#15325b",
    "#15417e",
    "#1554ad",
    "#1668dc",
    "#3c89e8",
    "#65a9f3",
    "#8dc5f8",
    "#b7dcfa"
];
blueDark.primary = blueDark[5];
var geekblueDark = [
    "#131629",
    "#161d40",
    "#1c2755",
    "#203175",
    "#263ea0",
    "#2b4acb",
    "#5273e0",
    "#7f9ef3",
    "#a8c1f8",
    "#d2e0fa"
];
geekblueDark.primary = geekblueDark[5];
var purpleDark = [
    "#1a1325",
    "#24163a",
    "#301c4d",
    "#3e2069",
    "#51258f",
    "#642ab5",
    "#854eca",
    "#ab7ae0",
    "#cda8f0",
    "#ebd7fa"
];
purpleDark.primary = purpleDark[5];
var magentaDark = [
    "#291321",
    "#40162f",
    "#551c3b",
    "#75204f",
    "#a02669",
    "#cb2b83",
    "#e0529c",
    "#f37fb7",
    "#f8a8cc",
    "#fad2e3"
];
magentaDark.primary = magentaDark[5];
var greyDark = [
    "#151515",
    "#1f1f1f",
    "#2d2d2d",
    "#393939",
    "#494949",
    "#5a5a5a",
    "#6a6a6a",
    "#7b7b7b",
    "#888888",
    "#969696"
];
greyDark.primary = greyDark[5];
var presetDarkPalettes = {
    red: redDark,
    volcano: volcanoDark,
    orange: orangeDark,
    gold: goldDark,
    yellow: yellowDark,
    lime: limeDark,
    green: greenDark,
    cyan: cyanDark,
    blue: blueDark,
    geekblue: geekblueDark,
    purple: purpleDark,
    magenta: magentaDark,
    grey: greyDark
};

},
"node_modules/@ant-design/pro-list/node_modules/@ant-design/colors/es/types.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});

},
"node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/rc-util/es/Dom/canUseDom.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return canUseDom;
    }
});
function canUseDom() {
    return !!(typeof window !== 'undefined' && window.document && window.document.createElement);
}

},
"node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/rc-util/es/Dom/contains.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return contains;
    }
});
function contains(root, n) {
    if (!root) return false;
    // Use native if support
    if (root.contains) return root.contains(n);
    // `document.contains` not support with IE11
    var node = n;
    while(node){
        if (node === root) return true;
        node = node.parentNode;
    }
    return false;
}

},
"node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/rc-util/es/Dom/dynamicCSS.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    clearContainerCache: function() {
        return clearContainerCache;
    },
    injectCSS: function() {
        return injectCSS;
    },
    removeCSS: function() {
        return removeCSS;
    },
    updateCSS: function() {
        return updateCSS;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _canUseDom = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/rc-util/es/Dom/canUseDom.js"));
var _contains = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/rc-util/es/Dom/contains.js"));
var APPEND_ORDER = 'data-rc-order';
var APPEND_PRIORITY = 'data-rc-priority';
var MARK_KEY = "rc-util-key";
var containerCache = new Map();
function getMark() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, mark = _ref.mark;
    if (mark) return mark.startsWith('data-') ? mark : "data-".concat(mark);
    return MARK_KEY;
}
function getContainer(option) {
    if (option.attachTo) return option.attachTo;
    var head = document.querySelector('head');
    return head || document.body;
}
function getOrder(prepend) {
    if (prepend === 'queue') return 'prependQueue';
    return prepend ? 'prepend' : 'append';
}
/**
 * Find style which inject by rc-util
 */ function findStyles(container) {
    return Array.from((containerCache.get(container) || container).children).filter(function(node) {
        return node.tagName === 'STYLE';
    });
}
function injectCSS(css) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    if (!(0, _canUseDom.default)()) return null;
    var csp = option.csp, prepend = option.prepend, _option$priority = option.priority, priority = _option$priority === void 0 ? 0 : _option$priority;
    var mergedOrder = getOrder(prepend);
    var isPrependQueue = mergedOrder === 'prependQueue';
    var styleNode = document.createElement('style');
    styleNode.setAttribute(APPEND_ORDER, mergedOrder);
    if (isPrependQueue && priority) styleNode.setAttribute(APPEND_PRIORITY, "".concat(priority));
    if (csp !== null && csp !== void 0 && csp.nonce) styleNode.nonce = csp === null || csp === void 0 ? void 0 : csp.nonce;
    styleNode.innerHTML = css;
    var container = getContainer(option);
    var firstChild = container.firstChild;
    if (prepend) {
        // If is queue `prepend`, it will prepend first style and then append rest style
        if (isPrependQueue) {
            var existStyle = (option.styles || findStyles(container)).filter(function(node) {
                // Ignore style which not injected by rc-util with prepend
                if (![
                    'prepend',
                    'prependQueue'
                ].includes(node.getAttribute(APPEND_ORDER))) return false;
                // Ignore style which priority less then new style
                var nodePriority = Number(node.getAttribute(APPEND_PRIORITY) || 0);
                return priority >= nodePriority;
            });
            if (existStyle.length) {
                container.insertBefore(styleNode, existStyle[existStyle.length - 1].nextSibling);
                return styleNode;
            }
        }
        // Use `insertBefore` as `prepend`
        container.insertBefore(styleNode, firstChild);
    } else container.appendChild(styleNode);
    return styleNode;
}
function findExistNode(key) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var container = getContainer(option);
    return (option.styles || findStyles(container)).find(function(node) {
        return node.getAttribute(getMark(option)) === key;
    });
}
function removeCSS(key) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var existNode = findExistNode(key, option);
    if (existNode) {
        var container = getContainer(option);
        container.removeChild(existNode);
    }
}
/**
 * qiankun will inject `appendChild` to insert into other
 */ function syncRealContainer(container, option) {
    var cachedRealContainer = containerCache.get(container);
    // Find real container when not cached or cached container removed
    if (!cachedRealContainer || !(0, _contains.default)(document, cachedRealContainer)) {
        var placeholderStyle = injectCSS('', option);
        var parentNode = placeholderStyle.parentNode;
        containerCache.set(container, parentNode);
        container.removeChild(placeholderStyle);
    }
}
function clearContainerCache() {
    containerCache.clear();
}
function updateCSS(css, key) {
    var originOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var container = getContainer(originOption);
    var styles = findStyles(container);
    var option = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, originOption), {}, {
        styles: styles
    });
    // Sync real parent
    syncRealContainer(container, option);
    var existNode = findExistNode(key, option);
    if (existNode) {
        var _option$csp, _option$csp2;
        if ((_option$csp = option.csp) !== null && _option$csp !== void 0 && _option$csp.nonce && existNode.nonce !== ((_option$csp2 = option.csp) === null || _option$csp2 === void 0 ? void 0 : _option$csp2.nonce)) {
            var _option$csp3;
            existNode.nonce = (_option$csp3 = option.csp) === null || _option$csp3 === void 0 ? void 0 : _option$csp3.nonce;
        }
        if (existNode.innerHTML !== css) existNode.innerHTML = css;
        return existNode;
    }
    var newNode = injectCSS(css, option);
    newNode.setAttribute(getMark(option), key);
    return newNode;
}

},
"node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/rc-util/es/Dom/shadow.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    getShadowRoot: function() {
        return getShadowRoot;
    },
    inShadow: function() {
        return inShadow;
    }
});
function getRoot(ele) {
    var _ele$getRootNode;
    return ele === null || ele === void 0 || (_ele$getRootNode = ele.getRootNode) === null || _ele$getRootNode === void 0 ? void 0 : _ele$getRootNode.call(ele);
}
function inShadow(ele) {
    return getRoot(ele) instanceof ShadowRoot;
}
function getShadowRoot(ele) {
    return inShadow(ele) ? getRoot(ele) : null;
}

},
"node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/rc-util/es/React/isFragment.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, /**
 * Compatible with React 18 or 19 to check if node is a Fragment.
 */ "default", {
    enumerable: true,
    get: function() {
        return isFragment;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _typeof = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/typeof.js"));
var REACT_ELEMENT_TYPE_18 = Symbol.for('react.element');
var REACT_ELEMENT_TYPE_19 = Symbol.for('react.transitional.element');
var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
function isFragment(object) {
    return(// Base object type
    object && (0, _typeof.default)(object) === 'object' && // React Element type
    (object.$$typeof === REACT_ELEMENT_TYPE_18 || object.$$typeof === REACT_ELEMENT_TYPE_19) && // React Fragment type
    object.type === REACT_FRAGMENT_TYPE);
}

},
"node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/rc-util/es/hooks/useMemo.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return useMemo;
    }
});
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
function useMemo(getValue, condition, shouldUpdate) {
    var cacheRef = _react.useRef({});
    if (!('value' in cacheRef.current) || shouldUpdate(cacheRef.current.condition, condition)) {
        cacheRef.current.value = getValue();
        cacheRef.current.condition = condition;
    }
    return cacheRef.current.value;
}

},
"node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/rc-util/es/ref.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    composeRef: function() {
        return composeRef;
    },
    fillRef: function() {
        return fillRef;
    },
    getNodeRef: function() {
        return getNodeRef;
    },
    supportNodeRef: function() {
        return supportNodeRef;
    },
    supportRef: function() {
        return supportRef;
    },
    useComposeRef: function() {
        return useComposeRef;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _typeof = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/typeof.js"));
var _react = __mako_require__("node_modules/react/index.js");
var _reactis = __mako_require__("node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/react-is/index.js");
var _useMemo = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/rc-util/es/hooks/useMemo.js"));
var _isFragment = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/rc-util/es/React/isFragment.js"));
var ReactMajorVersion = Number(_react.version.split('.')[0]);
var fillRef = function fillRef(ref, node) {
    if (typeof ref === 'function') ref(node);
    else if ((0, _typeof.default)(ref) === 'object' && ref && 'current' in ref) ref.current = node;
};
var composeRef = function composeRef() {
    for(var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++)refs[_key] = arguments[_key];
    var refList = refs.filter(Boolean);
    if (refList.length <= 1) return refList[0];
    return function(node) {
        refs.forEach(function(ref) {
            fillRef(ref, node);
        });
    };
};
var useComposeRef = function useComposeRef() {
    for(var _len2 = arguments.length, refs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)refs[_key2] = arguments[_key2];
    return (0, _useMemo.default)(function() {
        return composeRef.apply(void 0, refs);
    }, refs, function(prev, next) {
        return prev.length !== next.length || prev.every(function(ref, i) {
            return ref !== next[i];
        });
    });
};
var supportRef = function supportRef(nodeOrComponent) {
    var _type$prototype, _nodeOrComponent$prot;
    if (!nodeOrComponent) return false;
    // React 19 no need `forwardRef` anymore. So just pass if is a React element.
    if (isReactElement(nodeOrComponent) && ReactMajorVersion >= 19) return true;
    var type = (0, _reactis.isMemo)(nodeOrComponent) ? nodeOrComponent.type.type : nodeOrComponent.type;
    // Function component node
    if (typeof type === 'function' && !((_type$prototype = type.prototype) !== null && _type$prototype !== void 0 && _type$prototype.render) && type.$$typeof !== _reactis.ForwardRef) return false;
    // Class component
    if (typeof nodeOrComponent === 'function' && !((_nodeOrComponent$prot = nodeOrComponent.prototype) !== null && _nodeOrComponent$prot !== void 0 && _nodeOrComponent$prot.render) && nodeOrComponent.$$typeof !== _reactis.ForwardRef) return false;
    return true;
};
function isReactElement(node) {
    return /*#__PURE__*/ (0, _react.isValidElement)(node) && !(0, _isFragment.default)(node);
}
var supportNodeRef = function supportNodeRef(node) {
    return isReactElement(node) && supportRef(node);
};
var getNodeRef = function getNodeRef(node) {
    if (node && isReactElement(node)) {
        var ele = node;
        // Source from:
        // https://github.com/mui/material-ui/blob/master/packages/mui-utils/src/getReactNodeRef/getReactNodeRef.ts
        return ele.props.propertyIsEnumerable('ref') ? ele.props.ref : ele.ref;
    }
    return null;
};

},
"node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/rc-util/es/warning.js": function (module, exports, __mako_require__){
/* eslint-disable no-console */ "use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    call: function() {
        return call;
    },
    default: function() {
        return _default;
    },
    note: function() {
        return note;
    },
    noteOnce: function() {
        return noteOnce;
    },
    preMessage: function() {
        return preMessage;
    },
    resetWarned: function() {
        return resetWarned;
    },
    warning: function() {
        return warning;
    },
    warningOnce: function() {
        return warningOnce;
    }
});
var warned = {};
var preWarningFns = [];
var preMessage = function preMessage(fn) {
    preWarningFns.push(fn);
};
function warning(valid, message) {
    if (!valid && console !== undefined) {
        var finalMessage = preWarningFns.reduce(function(msg, preMessageFn) {
            return preMessageFn(msg !== null && msg !== void 0 ? msg : '', 'warning');
        }, message);
        if (finalMessage) console.error("Warning: ".concat(finalMessage));
    }
}
function note(valid, message) {
    if (!valid && console !== undefined) {
        var finalMessage = preWarningFns.reduce(function(msg, preMessageFn) {
            return preMessageFn(msg !== null && msg !== void 0 ? msg : '', 'note');
        }, message);
        if (finalMessage) console.warn("Note: ".concat(finalMessage));
    }
}
function resetWarned() {
    warned = {};
}
function call(method, valid, message) {
    if (!valid && !warned[message]) {
        method(false, message);
        warned[message] = true;
    }
}
function warningOnce(valid, message) {
    call(warning, valid, message);
}
function noteOnce(valid, message) {
    call(note, valid, message);
}
warningOnce.preMessage = preMessage;
warningOnce.resetWarned = resetWarned;
warningOnce.noteOnce = noteOnce;
var _default = warningOnce;

},
"node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/react-is/cjs/react-is.development.js": function (module, exports, __mako_require__){
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
    var REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');
    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
    var REACT_MEMO_TYPE = Symbol.for('react.memo');
    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
    // -----------------------------------------------------------------------------
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    var enableCacheElement = false;
    var enableTransitionTracing = false; // No known bugs, but needs performance testing
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    // stuff. Intended to enable React core members to more easily debug scheduling
    // issues in DEV builds.
    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
    var REACT_MODULE_REFERENCE;
    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
    function isValidElementType(type) {
        if (typeof type === 'string' || typeof type === 'function') return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) return true;
        if (typeof type === 'object' && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) return true;
        }
        return false;
    }
    function typeOf(object) {
        if (typeof object === 'object' && object !== null) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    var type = object.type;
                    switch(type){
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                        case REACT_SUSPENSE_LIST_TYPE:
                            return type;
                        default:
                            var $$typeofType = type && type.$$typeof;
                            switch($$typeofType){
                                case REACT_SERVER_CONTEXT_TYPE:
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
        return undefined;
    }
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var SuspenseList = REACT_SUSPENSE_LIST_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false;
    var hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated
    function isAsyncMode(object) {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
            console['warn']("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
        }
        return false;
    }
    function isConcurrentMode(object) {
        if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
            hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint
            console['warn']("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
        }
        return false;
    }
    function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    }
    function isSuspenseList(object) {
        return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
    }
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.SuspenseList = SuspenseList;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
    exports.isSuspenseList = isSuspenseList;
    exports.isValidElementType = isValidElementType;
    exports.typeOf = typeOf;
})();

},
"node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/react-is/index.js": function (module, exports, __mako_require__){
'use strict';
module.exports = __mako_require__("node_modules/@ant-design/pro-list/node_modules/@ant-design/icons/node_modules/react-is/cjs/react-is.development.js");

},
"node_modules/@ant-design/pro-list/node_modules/rc-util/es/hooks/useMergedState.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return useControlledState;
    }
});
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _iterableToArrayLimit(arr, i) {
    if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;
    try {
        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function useControlledState(defaultStateValue, option) {
    var _ref = option || {}, defaultValue = _ref.defaultValue, value = _ref.value, onChange = _ref.onChange, postState = _ref.postState;
    var _React$useState = _react.useState(function() {
        if (value !== undefined) return value;
        if (defaultValue !== undefined) return typeof defaultValue === 'function' ? defaultValue() : defaultValue;
        return typeof defaultStateValue === 'function' ? defaultStateValue() : defaultStateValue;
    }), _React$useState2 = _slicedToArray(_React$useState, 2), innerValue = _React$useState2[0], setInnerValue = _React$useState2[1];
    var mergedValue = value !== undefined ? value : innerValue;
    if (postState) mergedValue = postState(mergedValue);
    function triggerChange(newValue) {
        setInnerValue(newValue);
        if (mergedValue !== newValue && onChange) onChange(newValue, mergedValue);
    } // Effect of reset value to `undefined`
    var firstRenderRef = _react.useRef(true);
    _react.useEffect(function() {
        if (firstRenderRef.current) {
            firstRenderRef.current = false;
            return;
        }
        if (value === undefined) setInnerValue(value);
    }, [
        value
    ]);
    return [
        mergedValue,
        triggerChange
    ];
}

},
"node_modules/@ant-design/pro-list/node_modules/rc-util/es/utils/get.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return get;
    }
});
function get(entity, path) {
    var current = entity;
    for(var i = 0; i < path.length; i += 1){
        if (current === null || current === undefined) return undefined;
        current = current[path[i]];
    }
    return current;
}

},
"node_modules/@ant-design/pro-skeleton/es/components/Descriptions/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    DescriptionsSkeleton: function() {
        return DescriptionsSkeleton;
    },
    TableItemSkeleton: function() {
        return TableItemSkeleton;
    },
    TableSkeleton: function() {
        return TableSkeleton;
    },
    default: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _useBreakpoint = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/antd/es/grid/hooks/useBreakpoint.js"));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _List = __mako_require__("node_modules/@ant-design/pro-skeleton/es/components/List/index.js");
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var MediaQueryKeyEnum = {
    xs: 1,
    sm: 2,
    md: 3,
    lg: 3,
    xl: 3,
    xxl: 4
};
var DescriptionsLargeItemSkeleton = function DescriptionsLargeItemSkeleton(_ref) {
    var active = _ref.active;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        style: {
            marginBlockStart: 32
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Button, {
                active: active,
                size: "small",
                style: {
                    width: 100,
                    marginBlockEnd: 16
                }
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                style: {
                    width: '100%',
                    justifyContent: 'space-between',
                    display: 'flex'
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        style: {
                            flex: 1,
                            marginInlineEnd: 24,
                            maxWidth: 300
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
                                active: active,
                                paragraph: false,
                                title: {
                                    style: {
                                        marginBlockStart: 0
                                    }
                                }
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
                                active: active,
                                paragraph: false,
                                title: {
                                    style: {
                                        marginBlockStart: 8
                                    }
                                }
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
                                active: active,
                                paragraph: false,
                                title: {
                                    style: {
                                        marginBlockStart: 8
                                    }
                                }
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        style: {
                            flex: 1,
                            alignItems: 'center',
                            justifyContent: 'center'
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            style: {
                                maxWidth: 300,
                                margin: 'auto'
                            },
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
                                    active: active,
                                    paragraph: false,
                                    title: {
                                        style: {
                                            marginBlockStart: 0
                                        }
                                    }
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
                                    active: active,
                                    paragraph: false,
                                    title: {
                                        style: {
                                            marginBlockStart: 8
                                        }
                                    }
                                })
                            ]
                        })
                    })
                ]
            })
        ]
    });
};
var DescriptionsItemSkeleton = function DescriptionsItemSkeleton(_ref2) {
    var size = _ref2.size, active = _ref2.active;
    var defaultCol = (0, _react.useMemo)(function() {
        return {
            lg: true,
            md: true,
            sm: false,
            xl: false,
            xs: false,
            xxl: false
        };
    }, []);
    var col = (0, _useBreakpoint.default)() || defaultCol;
    var colSize = Object.keys(col).filter(function(key) {
        return col[key] === true;
    })[0] || 'md';
    var arraySize = size === undefined ? MediaQueryKeyEnum[colSize] || 3 : size;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        style: {
            width: '100%',
            justifyContent: 'space-between',
            display: 'flex'
        },
        children: new Array(arraySize).fill(null).map(function(_, index) {
            return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                style: {
                    flex: 1,
                    paddingInlineStart: index === 0 ? 0 : 24,
                    paddingInlineEnd: index === arraySize - 1 ? 0 : 24
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
                        active: active,
                        paragraph: false,
                        title: {
                            style: {
                                marginBlockStart: 0
                            }
                        }
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
                        active: active,
                        paragraph: false,
                        title: {
                            style: {
                                marginBlockStart: 8
                            }
                        }
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
                        active: active,
                        paragraph: false,
                        title: {
                            style: {
                                marginBlockStart: 8
                            }
                        }
                    })
                ]
            }, index);
        })
    });
};
var TableItemSkeleton = function TableItemSkeleton(_ref3) {
    var active = _ref3.active, _ref3$header = _ref3.header, header = _ref3$header === void 0 ? false : _ref3$header;
    var defaultCol = (0, _react.useMemo)(function() {
        return {
            lg: true,
            md: true,
            sm: false,
            xl: false,
            xs: false,
            xxl: false
        };
    }, []);
    var col = (0, _useBreakpoint.default)() || defaultCol;
    var colSize = Object.keys(col).filter(function(key) {
        return col[key] === true;
    })[0] || 'md';
    var arraySize = MediaQueryKeyEnum[colSize] || 3;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                style: {
                    display: 'flex',
                    background: header ? 'rgba(0,0,0,0.02)' : 'none',
                    padding: '24px 8px'
                },
                children: [
                    new Array(arraySize).fill(null).map(function(_, index) {
                        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            style: {
                                flex: 1,
                                paddingInlineStart: header && index === 0 ? 0 : 20,
                                paddingInlineEnd: 32
                            },
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
                                active: active,
                                paragraph: false,
                                title: {
                                    style: {
                                        margin: 0,
                                        height: 24,
                                        width: header ? '75px' : '100%'
                                    }
                                }
                            })
                        }, index);
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        style: {
                            flex: 3,
                            paddingInlineStart: 32
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
                            active: active,
                            paragraph: false,
                            title: {
                                style: {
                                    margin: 0,
                                    height: 24,
                                    width: header ? '75px' : '100%'
                                }
                            }
                        })
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_List.Line, {
                padding: "0px 0px"
            })
        ]
    });
};
var TableSkeleton = function TableSkeleton(_ref4) {
    var active = _ref4.active, _ref4$size = _ref4.size, size = _ref4$size === void 0 ? 4 : _ref4$size;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_antd.Card, {
        bordered: false,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Button, {
                active: active,
                size: "small",
                style: {
                    width: 100,
                    marginBlockEnd: 16
                }
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(TableItemSkeleton, {
                header: true,
                active: active
            }),
            new Array(size).fill(null).map(function(_, index) {
                return(/*#__PURE__*/ // eslint-disable-next-line react/no-array-index-key
                (0, _jsxruntime.jsx)(TableItemSkeleton, {
                    active: active
                }, index));
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                style: {
                    display: 'flex',
                    justifyContent: 'flex-end',
                    paddingBlockStart: 16
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
                    active: active,
                    paragraph: false,
                    title: {
                        style: {
                            margin: 0,
                            height: 32,
                            float: 'right',
                            maxWidth: '630px'
                        }
                    }
                })
            })
        ]
    });
};
var DescriptionsSkeleton = function DescriptionsSkeleton(_ref5) {
    var active = _ref5.active;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_antd.Card, {
        bordered: false,
        style: {
            borderStartEndRadius: 0,
            borderTopLeftRadius: 0
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Button, {
                active: active,
                size: "small",
                style: {
                    width: 100,
                    marginBlockEnd: 16
                }
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(DescriptionsItemSkeleton, {
                active: active
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(DescriptionsLargeItemSkeleton, {
                active: active
            })
        ]
    });
};
var DescriptionsPageSkeleton = function DescriptionsPageSkeleton(_ref6) {
    var _ref6$active = _ref6.active, active = _ref6$active === void 0 ? true : _ref6$active, pageHeader = _ref6.pageHeader, list = _ref6.list;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        style: {
            width: '100%'
        },
        children: [
            pageHeader !== false && /*#__PURE__*/ (0, _jsxruntime.jsx)(_List.PageHeaderSkeleton, {
                active: active
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(DescriptionsSkeleton, {
                active: active
            }),
            list !== false && /*#__PURE__*/ (0, _jsxruntime.jsx)(_List.Line, {}),
            list !== false && /*#__PURE__*/ (0, _jsxruntime.jsx)(TableSkeleton, {
                active: active,
                size: list
            })
        ]
    });
};
var _default = DescriptionsPageSkeleton;

},
"node_modules/@ant-design/pro-skeleton/es/components/List/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    Line: function() {
        return Line;
    },
    ListSkeleton: function() {
        return ListSkeleton;
    },
    ListSkeletonItem: function() {
        return ListSkeletonItem;
    },
    ListToolbarSkeleton: function() {
        return ListToolbarSkeleton;
    },
    MediaQueryKeyEnum: function() {
        return MediaQueryKeyEnum;
    },
    PageHeaderSkeleton: function() {
        return PageHeaderSkeleton;
    },
    default: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _useBreakpoint = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/antd/es/grid/hooks/useBreakpoint.js"));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var Line = function Line(_ref) {
    var padding = _ref.padding;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        style: {
            padding: padding || '0 24px'
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Divider, {
            style: {
                margin: 0
            }
        })
    });
};
var MediaQueryKeyEnum = {
    xs: 2,
    sm: 2,
    md: 4,
    lg: 4,
    xl: 6,
    xxl: 6
};
var StatisticSkeleton = function StatisticSkeleton(_ref2) {
    var size = _ref2.size, active = _ref2.active;
    var defaultCol = (0, _react.useMemo)(function() {
        return {
            lg: true,
            md: true,
            sm: false,
            xl: false,
            xs: false,
            xxl: false
        };
    }, []);
    var col = (0, _useBreakpoint.default)() || defaultCol;
    var colSize = Object.keys(col).filter(function(key) {
        return col[key] === true;
    })[0] || 'md';
    var arraySize = size === undefined ? MediaQueryKeyEnum[colSize] || 6 : size;
    var firstWidth = function firstWidth(index) {
        if (index === 0) return 0;
        if (arraySize > 2) return 42;
        return 16;
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Card, {
        bordered: false,
        style: {
            marginBlockEnd: 16
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            style: {
                width: '100%',
                justifyContent: 'space-between',
                display: 'flex'
            },
            children: new Array(arraySize).fill(null).map(function(_, index) {
                return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    style: {
                        borderInlineStart: arraySize > 2 && index === 1 ? '1px solid rgba(0,0,0,0.06)' : undefined,
                        paddingInlineStart: firstWidth(index),
                        flex: 1,
                        marginInlineEnd: index === 0 ? 16 : 0
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
                            active: active,
                            paragraph: false,
                            title: {
                                width: 100,
                                style: {
                                    marginBlockStart: 0
                                }
                            }
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Button, {
                            active: active,
                            style: {
                                height: 48
                            }
                        })
                    ]
                }, index);
            })
        })
    });
};
var ListSkeletonItem = function ListSkeletonItem(_ref3) {
    var active = _ref3.active;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Card, {
                bordered: false,
                style: {
                    borderRadius: 0
                },
                styles: {
                    body: {
                        padding: 24
                    }
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    style: {
                        width: '100%',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'space-between'
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            style: {
                                maxWidth: '100%',
                                flex: 1
                            },
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
                                active: active,
                                title: {
                                    width: 100,
                                    style: {
                                        marginBlockStart: 0
                                    }
                                },
                                paragraph: {
                                    rows: 1,
                                    style: {
                                        margin: 0
                                    }
                                }
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Button, {
                            active: active,
                            size: "small",
                            style: {
                                width: 165,
                                marginBlockStart: 12
                            }
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(Line, {})
        ]
    });
};
var ListSkeleton = function ListSkeleton(_ref4) {
    var size = _ref4.size, _ref4$active = _ref4.active, active = _ref4$active === void 0 ? true : _ref4$active, actionButton = _ref4.actionButton;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_antd.Card, {
        bordered: false,
        styles: {
            body: {
                padding: 0
            }
        },
        children: [
            new Array(size).fill(null).map(function(_, index) {
                return(/*#__PURE__*/ // eslint-disable-next-line react/no-array-index-key
                (0, _jsxruntime.jsx)(ListSkeletonItem, {
                    active: !!active
                }, index));
            }),
            actionButton !== false && /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Card, {
                bordered: false,
                style: {
                    borderStartEndRadius: 0,
                    borderTopLeftRadius: 0
                },
                styles: {
                    body: {
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center'
                    }
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Button, {
                    style: {
                        width: 102
                    },
                    active: active,
                    size: "small"
                })
            })
        ]
    });
};
var PageHeaderSkeleton = function PageHeaderSkeleton(_ref5) {
    var active = _ref5.active;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        style: {
            marginBlockEnd: 16
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton, {
                paragraph: false,
                title: {
                    width: 185
                }
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Button, {
                active: active,
                size: "small"
            })
        ]
    });
};
var ListToolbarSkeleton = function ListToolbarSkeleton(_ref6) {
    var active = _ref6.active;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Card, {
        bordered: false,
        style: {
            borderBottomRightRadius: 0,
            borderBottomLeftRadius: 0
        },
        styles: {
            body: {
                paddingBlockEnd: 8
            }
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_antd.Space, {
            style: {
                width: '100%',
                justifyContent: 'space-between'
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Button, {
                    active: active,
                    style: {
                        width: 200
                    },
                    size: "small"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_antd.Space, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Button, {
                            active: active,
                            size: "small",
                            style: {
                                width: 120
                            }
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Button, {
                            active: active,
                            size: "small",
                            style: {
                                width: 80
                            }
                        })
                    ]
                })
            ]
        })
    });
};
var ListPageSkeleton = function ListPageSkeleton(_ref7) {
    var _ref7$active = _ref7.active, active = _ref7$active === void 0 ? true : _ref7$active, statistic = _ref7.statistic, actionButton = _ref7.actionButton, toolbar = _ref7.toolbar, pageHeader = _ref7.pageHeader, _ref7$list = _ref7.list, list = _ref7$list === void 0 ? 5 : _ref7$list;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        style: {
            width: '100%'
        },
        children: [
            pageHeader !== false && /*#__PURE__*/ (0, _jsxruntime.jsx)(PageHeaderSkeleton, {
                active: active
            }),
            statistic !== false && /*#__PURE__*/ (0, _jsxruntime.jsx)(StatisticSkeleton, {
                size: statistic,
                active: active
            }),
            (toolbar !== false || list !== false) && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_antd.Card, {
                bordered: false,
                styles: {
                    body: {
                        padding: 0
                    }
                },
                children: [
                    toolbar !== false && /*#__PURE__*/ (0, _jsxruntime.jsx)(ListToolbarSkeleton, {
                        active: active
                    }),
                    list !== false && /*#__PURE__*/ (0, _jsxruntime.jsx)(ListSkeleton, {
                        size: list,
                        active: active,
                        actionButton: actionButton
                    })
                ]
            })
        ]
    });
};
var _default = ListPageSkeleton;

},
"node_modules/@ant-design/pro-skeleton/es/components/Result/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _react = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/react/index.js"));
var _List = __mako_require__("node_modules/@ant-design/pro-skeleton/es/components/List/index.js");
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var ResultPageSkeleton = function ResultPageSkeleton(_ref) {
    var _ref$active = _ref.active, active = _ref$active === void 0 ? true : _ref$active, pageHeader = _ref.pageHeader;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        style: {
            width: '100%'
        },
        children: [
            pageHeader !== false && /*#__PURE__*/ (0, _jsxruntime.jsx)(_List.PageHeaderSkeleton, {
                active: active
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Card, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    style: {
                        display: 'flex',
                        justifyContent: 'center',
                        alignItems: 'center',
                        flexDirection: 'column',
                        padding: 128
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Avatar, {
                            size: 64,
                            style: {
                                marginBlockEnd: 32
                            }
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Button, {
                            active: active,
                            style: {
                                width: 214,
                                marginBlockEnd: 8
                            }
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Button, {
                            active: active,
                            style: {
                                width: 328
                            },
                            size: "small"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_antd.Space, {
                            style: {
                                marginBlockStart: 24
                            },
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Button, {
                                    active: active,
                                    style: {
                                        width: 116
                                    }
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Skeleton.Button, {
                                    active: active,
                                    style: {
                                        width: 116
                                    }
                                })
                            ]
                        })
                    ]
                })
            })
        ]
    });
};
var _default = ResultPageSkeleton;

},
"node_modules/@ant-design/pro-skeleton/es/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    DescriptionsSkeleton: function() {
        return _Descriptions.DescriptionsSkeleton;
    },
    ListPageSkeleton: function() {
        return _List.default;
    },
    ListSkeleton: function() {
        return _List.ListSkeleton;
    },
    ListSkeletonItem: function() {
        return _List.ListSkeletonItem;
    },
    ListToolbarSkeleton: function() {
        return _List.ListToolbarSkeleton;
    },
    PageHeaderSkeleton: function() {
        return _List.PageHeaderSkeleton;
    },
    ProSkeleton: function() {
        return ProSkeleton;
    },
    TableItemSkeleton: function() {
        return _Descriptions.TableItemSkeleton;
    },
    TableSkeleton: function() {
        return _Descriptions.TableSkeleton;
    },
    default: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _objectWithoutProperties = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"));
__mako_require__("node_modules/antd/es/skeleton/style/index.js");
var _react = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/react/index.js"));
var _Descriptions = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/@ant-design/pro-skeleton/es/components/Descriptions/index.js"));
var _List = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/@ant-design/pro-skeleton/es/components/List/index.js"));
var _Result = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-skeleton/es/components/Result/index.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var _excluded = [
    "type"
];
var ProSkeleton = function ProSkeleton(_ref) {
    var _ref$type = _ref.type, type = _ref$type === void 0 ? 'list' : _ref$type, rest = (0, _objectWithoutProperties.default)(_ref, _excluded);
    if (type === 'result') return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Result.default, (0, _objectSpread2.default)({}, rest));
    if (type === 'descriptions') return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Descriptions.default, (0, _objectSpread2.default)({}, rest));
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_List.default, (0, _objectSpread2.default)({}, rest));
};
var _default = ProSkeleton;

},
"node_modules/@ant-design/pro-table/es/Store/Provide.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    Container: function() {
        return Container;
    },
    TableContext: function() {
        return TableContext;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _slicedToArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/slicedToArray.js"));
var _merge = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/lodash-es/merge.js"));
var _useMergedState = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/rc-util/es/hooks/useMergedState.js"));
var _warning = __mako_require__("node_modules/rc-util/es/warning.js");
var _react = __mako_require__("node_modules/react/index.js");
var _utils = __mako_require__("node_modules/@ant-design/pro-table/es/utils/index.js");
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
function useContainer() {
    var _props$columnsState6, _props$columnsState7, _props$columnsState10, _props$columnsState11, _props$columnsState15, _props$columnsState16;
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var actionRef = (0, _react.useRef)();
    var rootDomRef = (0, _react.useRef)(null);
    /** 父 form item 的 name */ var prefixNameRef = (0, _react.useRef)();
    /** 自己 props 的引用 */ var propsRef = (0, _react.useRef)();
    // 共享状态比较难，就放到这里了
    var _useState = (0, _react.useState)(''), _useState2 = (0, _slicedToArray.default)(_useState, 2), keyWords = _useState2[0], _setKeyWords = _useState2[1];
    // 用于排序的数组
    var sortKeyColumns = (0, _react.useRef)([]);
    var _useMergedState1 = (0, _useMergedState.default)(function() {
        return props.size || props.defaultSize || 'middle';
    }, {
        value: props.size,
        onChange: props.onSizeChange
    }), _useMergedState2 = (0, _slicedToArray.default)(_useMergedState1, 2), tableSize = _useMergedState2[0], setTableSize = _useMergedState2[1];
    /** 默认全选中 */ var defaultColumnKeyMap = (0, _react.useMemo)(function() {
        var _props$columnsState, _props$columns;
        if (props !== null && props !== void 0 && (_props$columnsState = props.columnsState) !== null && _props$columnsState !== void 0 && _props$columnsState.defaultValue) return props.columnsState.defaultValue;
        var columnKeyMap = {};
        (_props$columns = props.columns) === null || _props$columns === void 0 || _props$columns.forEach(function(_ref, index) {
            var key = _ref.key, dataIndex = _ref.dataIndex, fixed = _ref.fixed, disable = _ref.disable;
            var columnKey = (0, _utils.genColumnKey)(key !== null && key !== void 0 ? key : dataIndex, index);
            if (columnKey) columnKeyMap[columnKey] = {
                show: true,
                fixed: fixed,
                disable: disable
            };
        });
        return columnKeyMap;
    }, [
        props.columns
    ]);
    var _useMergedState3 = (0, _useMergedState.default)(function() {
        var _props$columnsState4, _props$columnsState5;
        var _ref2 = props.columnsState || {}, persistenceType = _ref2.persistenceType, persistenceKey = _ref2.persistenceKey;
        if (persistenceKey && persistenceType && typeof window !== 'undefined') {
            /** 从持久化中读取数据 */ var storage = window[persistenceType];
            try {
                var storageValue = storage === null || storage === void 0 ? void 0 : storage.getItem(persistenceKey);
                if (storageValue) {
                    var _props$columnsState2;
                    if (props !== null && props !== void 0 && (_props$columnsState2 = props.columnsState) !== null && _props$columnsState2 !== void 0 && _props$columnsState2.defaultValue) {
                        var _props$columnsState3;
                        // 实际生产中，defaultValue往往作为系统方默认配置，则优先级不应高于用户配置的storageValue
                        return (0, _merge.default)({}, props === null || props === void 0 || (_props$columnsState3 = props.columnsState) === null || _props$columnsState3 === void 0 ? void 0 : _props$columnsState3.defaultValue, JSON.parse(storageValue));
                    }
                    return JSON.parse(storageValue);
                }
            } catch (error) {
                console.warn(error);
            }
        }
        return props.columnsStateMap || ((_props$columnsState4 = props.columnsState) === null || _props$columnsState4 === void 0 ? void 0 : _props$columnsState4.value) || ((_props$columnsState5 = props.columnsState) === null || _props$columnsState5 === void 0 ? void 0 : _props$columnsState5.defaultValue) || defaultColumnKeyMap;
    }, {
        value: ((_props$columnsState6 = props.columnsState) === null || _props$columnsState6 === void 0 ? void 0 : _props$columnsState6.value) || props.columnsStateMap,
        onChange: ((_props$columnsState7 = props.columnsState) === null || _props$columnsState7 === void 0 ? void 0 : _props$columnsState7.onChange) || props.onColumnsStateChange
    }), _useMergedState4 = (0, _slicedToArray.default)(_useMergedState3, 2), columnsMap = _useMergedState4[0], setColumnsMap = _useMergedState4[1];
    /**  配置或列更改时对columnsMap重新赋值 */ (0, _react.useEffect)(function() {
        var _ref3 = props.columnsState || {}, persistenceType = _ref3.persistenceType, persistenceKey = _ref3.persistenceKey;
        if (persistenceKey && persistenceType && typeof window !== 'undefined') {
            /** 从持久化中读取数据 */ var storage = window[persistenceType];
            try {
                var storageValue = storage === null || storage === void 0 ? void 0 : storage.getItem(persistenceKey);
                if (storageValue) {
                    var _props$columnsState8;
                    if (props !== null && props !== void 0 && (_props$columnsState8 = props.columnsState) !== null && _props$columnsState8 !== void 0 && _props$columnsState8.defaultValue) {
                        var _props$columnsState9;
                        setColumnsMap((0, _merge.default)({}, props === null || props === void 0 || (_props$columnsState9 = props.columnsState) === null || _props$columnsState9 === void 0 ? void 0 : _props$columnsState9.defaultValue, JSON.parse(storageValue)));
                    } else setColumnsMap(JSON.parse(storageValue));
                } else setColumnsMap(defaultColumnKeyMap);
            } catch (error) {
                console.warn(error);
            }
        }
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        (_props$columnsState10 = props.columnsState) === null || _props$columnsState10 === void 0 ? void 0 : _props$columnsState10.persistenceKey,
        (_props$columnsState11 = props.columnsState) === null || _props$columnsState11 === void 0 ? void 0 : _props$columnsState11.persistenceType,
        defaultColumnKeyMap
    ]);
    (0, _warning.noteOnce)(!props.columnsStateMap, 'columnsStateMap已经废弃，请使用 columnsState.value 替换');
    (0, _warning.noteOnce)(!props.columnsStateMap, 'columnsStateMap has been discarded, please use columnsState.value replacement');
    /** 清空一下当前的 key */ var clearPersistenceStorage = (0, _react.useCallback)(function() {
        var _ref4 = props.columnsState || {}, persistenceType = _ref4.persistenceType, persistenceKey = _ref4.persistenceKey;
        if (!persistenceKey || !persistenceType || typeof window === 'undefined') return;
        /** 给持久化中设置数据 */ var storage = window[persistenceType];
        try {
            storage === null || storage === void 0 || storage.removeItem(persistenceKey);
        } catch (error) {
            console.warn(error);
        }
    }, [
        props.columnsState
    ]);
    (0, _react.useEffect)(function() {
        var _props$columnsState12, _props$columnsState13;
        if (!((_props$columnsState12 = props.columnsState) !== null && _props$columnsState12 !== void 0 && _props$columnsState12.persistenceKey) || !((_props$columnsState13 = props.columnsState) !== null && _props$columnsState13 !== void 0 && _props$columnsState13.persistenceType)) return;
        if (typeof window === 'undefined') return;
        /** 给持久化中设置数据 */ var _props$columnsState14 = props.columnsState, persistenceType = _props$columnsState14.persistenceType, persistenceKey = _props$columnsState14.persistenceKey;
        var storage = window[persistenceType];
        try {
            storage === null || storage === void 0 || storage.setItem(persistenceKey, JSON.stringify(columnsMap));
        } catch (error) {
            console.warn(error);
            clearPersistenceStorage();
        }
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        (_props$columnsState15 = props.columnsState) === null || _props$columnsState15 === void 0 ? void 0 : _props$columnsState15.persistenceKey,
        columnsMap,
        (_props$columnsState16 = props.columnsState) === null || _props$columnsState16 === void 0 ? void 0 : _props$columnsState16.persistenceType
    ]);
    var renderValue = {
        action: actionRef.current,
        setAction: function setAction(newAction) {
            actionRef.current = newAction;
        },
        sortKeyColumns: sortKeyColumns.current,
        setSortKeyColumns: function setSortKeyColumns(keys) {
            sortKeyColumns.current = keys;
        },
        propsRef: propsRef,
        columnsMap: columnsMap,
        keyWords: keyWords,
        setKeyWords: function setKeyWords(k) {
            return _setKeyWords(k);
        },
        setTableSize: setTableSize,
        tableSize: tableSize,
        prefixName: prefixNameRef.current,
        setPrefixName: function setPrefixName(name) {
            prefixNameRef.current = name;
        },
        setColumnsMap: setColumnsMap,
        columns: props.columns,
        rootDomRef: rootDomRef,
        clearPersistenceStorage: clearPersistenceStorage,
        defaultColumnKeyMap: defaultColumnKeyMap
    };
    Object.defineProperty(renderValue, 'prefixName', {
        get: function get() {
            return prefixNameRef.current;
        }
    });
    Object.defineProperty(renderValue, 'sortKeyColumns', {
        get: function get() {
            return sortKeyColumns.current;
        }
    });
    Object.defineProperty(renderValue, 'action', {
        get: function get() {
            return actionRef.current;
        }
    });
    return renderValue;
}
var TableContext = /*#__PURE__*/ (0, _react.createContext)({});
var Container = function Container(props) {
    var value = useContainer(props.initValue);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(TableContext.Provider, {
        value: value,
        children: props.children
    });
};

},
"node_modules/@ant-design/pro-table/es/Table.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _regeneratorRuntime = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js"));
var _asyncToGenerator = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"));
var _typeof = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/typeof.js"));
var _slicedToArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/slicedToArray.js"));
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _toConsumableArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _objectWithoutProperties = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"));
__mako_require__("node_modules/antd/es/table/style/index.js");
__mako_require__("node_modules/antd/es/typography/style/index.js");
var _procard = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-card/es/index.js"));
var _proform = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/@ant-design/pro-form/es/index.js"));
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _classnames = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/classnames/index.js"));
var _isEmpty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/lodash-es/isEmpty.js"));
var _isEqual = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/lodash-es/isEqual.js"));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _Provide = __mako_require__("node_modules/@ant-design/pro-table/es/Store/Provide.js");
var _Alert = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/Alert/index.js"));
var _Form = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/Form/index.js"));
var _ToolBar = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/ToolBar/index.js"));
var _style = __mako_require__("node_modules/@ant-design/pro-table/es/style/index.js");
var _useFetchData = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/useFetchData.js"));
var _utils = __mako_require__("node_modules/@ant-design/pro-table/es/utils/index.js");
var _columnSort = __mako_require__("node_modules/@ant-design/pro-table/es/utils/columnSort.js");
var _genProColumnToColumn = __mako_require__("node_modules/@ant-design/pro-table/es/utils/genProColumnToColumn.js");
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var _excluded = [
    "rowKey",
    "tableClassName",
    "defaultClassName",
    "action",
    "tableColumn",
    "type",
    "pagination",
    "rowSelection",
    "size",
    "defaultSize",
    "tableStyle",
    "toolbarDom",
    "hideToolbar",
    "searchNode",
    "style",
    "cardProps",
    "alertDom",
    "name",
    "onSortChange",
    "onFilterChange",
    "options",
    "isLightFilter",
    "className",
    "cardBordered",
    "editableUtils",
    "getRowKey"
];
var _excluded2 = [
    "cardBordered",
    "request",
    "className",
    "params",
    "defaultData",
    "headerTitle",
    "postData",
    "ghost",
    "pagination",
    "actionRef",
    "columns",
    "toolBarRender",
    "optionsRender",
    "onLoad",
    "onRequestError",
    "style",
    "cardProps",
    "tableStyle",
    "tableClassName",
    "columnsStateMap",
    "onColumnsStateChange",
    "options",
    "search",
    "name",
    "onLoadingChange",
    "rowSelection",
    "beforeSearchSubmit",
    "tableAlertRender",
    "defaultClassName",
    "formRef",
    "type",
    "columnEmptyText",
    "toolbar",
    "rowKey",
    "manualRequest",
    "polling",
    "tooltip",
    "revalidateOnFocus",
    "searchFormRender"
];
function TableRender(props) {
    var rowKey = props.rowKey, tableClassName = props.tableClassName, defaultClassName = props.defaultClassName, action = props.action, tableColumns = props.tableColumn, type = props.type, pagination = props.pagination, rowSelection = props.rowSelection, size = props.size, defaultSize = props.defaultSize, tableStyle = props.tableStyle, toolbarDom = props.toolbarDom, hideToolbar = props.hideToolbar, searchNode = props.searchNode, style = props.style, propsCardProps = props.cardProps, alertDom = props.alertDom, name = props.name, onSortChange = props.onSortChange, onFilterChange = props.onFilterChange, options = props.options, isLightFilter = props.isLightFilter, className = props.className, cardBordered = props.cardBordered, editableUtils = props.editableUtils, getRowKey = props.getRowKey, rest = (0, _objectWithoutProperties.default)(props, _excluded);
    var counter = (0, _react.useContext)(_Provide.TableContext);
    /** 需要遍历一下，不然不支持嵌套表格 */ var columns = (0, _react.useMemo)(function() {
        var loopFilter = function loopFilter(column) {
            return column.map(function(item) {
                // 删掉不应该显示的
                var columnKey = (0, _utils.genColumnKey)(item.key, item.index);
                var config = counter.columnsMap[columnKey];
                if (config && config.show === false) return false;
                if (item.children) return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, item), {}, {
                    children: loopFilter(item.children)
                });
                return item;
            }).filter(Boolean);
        };
        return loopFilter(tableColumns);
    }, [
        counter.columnsMap,
        tableColumns
    ]);
    /** 如果所有列中的 filters = true | undefined 说明是用的是本地筛选 任何一列配置 filters=false，就能绕过这个判断 */ var useLocaleFilter = (0, _react.useMemo)(function() {
        var _columns = [];
        // 平铺所有columns, 用于判断是用的是本地筛选
        var loopColumns = function loopColumns(data) {
            for(var i = 0; i < data.length; i++){
                var _curItem = data[i];
                if (_curItem.children) loopColumns(_curItem.children);
                else _columns.push(_curItem);
            }
        };
        loopColumns(columns);
        return _columns === null || _columns === void 0 ? void 0 : _columns.every(function(column) {
            return !!column.filters && !!column.onFilter || column.filters === undefined && column.onFilter === undefined;
        });
    }, [
        columns
    ]);
    /**
   * 如果是分页的新增，总是加到最后一行
   *
   * @returns
   */ var editableDataSource = function editableDataSource(dataSource) {
        var _ref = editableUtils.newLineRecord || {}, newLineOptions = _ref.options, row = _ref.defaultValue;
        var isNewLineRecordAtTop = (newLineOptions === null || newLineOptions === void 0 ? void 0 : newLineOptions.position) === 'top';
        if (newLineOptions !== null && newLineOptions !== void 0 && newLineOptions.parentKey) {
            var _recordKeyToString, _props$expandable;
            var actionProps = {
                data: dataSource,
                getRowKey: getRowKey,
                row: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, row), {}, {
                    map_row_parentKey: (_recordKeyToString = (0, _proutils.recordKeyToString)(newLineOptions.parentKey)) === null || _recordKeyToString === void 0 ? void 0 : _recordKeyToString.toString()
                }),
                key: newLineOptions === null || newLineOptions === void 0 ? void 0 : newLineOptions.recordKey,
                childrenColumnName: ((_props$expandable = props.expandable) === null || _props$expandable === void 0 ? void 0 : _props$expandable.childrenColumnName) || 'children'
            };
            return (0, _proutils.editableRowByKey)(actionProps, isNewLineRecordAtTop ? 'top' : 'update');
        }
        if (isNewLineRecordAtTop) return [
            row
        ].concat((0, _toConsumableArray.default)(action.dataSource));
        // 如果有分页的功能，我们加到这一页的末尾
        if (pagination && pagination !== null && pagination !== void 0 && pagination.current && pagination !== null && pagination !== void 0 && pagination.pageSize) {
            var newDataSource = (0, _toConsumableArray.default)(action.dataSource);
            if ((pagination === null || pagination === void 0 ? void 0 : pagination.pageSize) > newDataSource.length) {
                newDataSource.push(row);
                return newDataSource;
            }
            newDataSource.splice((pagination === null || pagination === void 0 ? void 0 : pagination.current) * (pagination === null || pagination === void 0 ? void 0 : pagination.pageSize) - 1, 0, row);
            return newDataSource;
        }
        return [].concat((0, _toConsumableArray.default)(action.dataSource), [
            row
        ]);
    };
    var getTableProps = function getTableProps() {
        return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, rest), {}, {
            size: size,
            rowSelection: rowSelection === false ? undefined : rowSelection,
            className: tableClassName,
            style: tableStyle,
            columns: columns,
            loading: action.loading,
            dataSource: editableUtils.newLineRecord ? editableDataSource(action.dataSource) : action.dataSource,
            pagination: pagination,
            onChange: function onChange(changePagination, filters, sorter, extra) {
                var _rest$onChange;
                (_rest$onChange = rest.onChange) === null || _rest$onChange === void 0 || _rest$onChange.call(rest, changePagination, filters, sorter, extra);
                if (!useLocaleFilter) onFilterChange((0, _proutils.omitUndefined)(filters));
                // 制造筛选的数据
                // 制造一个排序的数据
                if (Array.isArray(sorter)) {
                    var data = sorter.reduce(function(pre, value) {
                        return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, pre), {}, (0, _defineProperty.default)({}, "".concat(value.field), value.order));
                    }, {});
                    onSortChange((0, _proutils.omitUndefined)(data));
                } else {
                    var _sorter$column;
                    var sorterOfColumn = (_sorter$column = sorter.column) === null || _sorter$column === void 0 ? void 0 : _sorter$column.sorter;
                    var isSortByField = (sorterOfColumn === null || sorterOfColumn === void 0 ? void 0 : sorterOfColumn.toString()) === sorterOfColumn;
                    onSortChange((0, _proutils.omitUndefined)((0, _defineProperty.default)({}, "".concat(isSortByField ? sorterOfColumn : sorter.field), sorter.order)));
                }
            }
        });
    };
    /**
   * 是否需要 card 来包裹
   */ var notNeedCardDom = (0, _react.useMemo)(function() {
        if (props.search === false && !props.headerTitle && props.toolBarRender === false) return true;
        return false;
    }, []);
    /** 默认的 table dom，如果是编辑模式，外面还要包个 form */ var baseTableDom = /*#__PURE__*/ (0, _jsxruntime.jsx)(_proform.GridContext.Provider, {
        value: {
            grid: false,
            colProps: undefined,
            rowProps: undefined
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Table, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, getTableProps()), {}, {
            rowKey: rowKey
        }))
    });
    /** 自定义的 render */ var tableDom = props.tableViewRender ? props.tableViewRender((0, _objectSpread2.default)((0, _objectSpread2.default)({}, getTableProps()), {}, {
        rowSelection: rowSelection !== false ? rowSelection : undefined
    }), baseTableDom) : baseTableDom;
    /**
   * 这段代码使用了 useMemo 进行了性能优化，根据 props.editable 和 props.name 的不同情况，渲染不同的页面组件。
   * 当 props.editable 为 true 并且 props.name 不存在时，渲染一个带有表单和工具栏的页面组件，否则只渲染工具栏和表格组件。
   * renderContent 函数会在 alertDom、props.loading、props.editable、tableDom、toolbarDom 发生变化时重新执行。
   * */ var tableContentDom = (0, _react.useMemo)(function() {
        if (props.editable && !props.name) {
            var _props$editable, _props$editable2, _props$editable3;
            return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: [
                    toolbarDom,
                    alertDom,
                    /*#__PURE__*/ (0, _react.createElement)(_proform.default, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, (_props$editable = props.editable) === null || _props$editable === void 0 ? void 0 : _props$editable.formProps), {}, {
                        formRef: (_props$editable2 = props.editable) === null || _props$editable2 === void 0 || (_props$editable2 = _props$editable2.formProps) === null || _props$editable2 === void 0 ? void 0 : _props$editable2.formRef,
                        component: false,
                        form: (_props$editable3 = props.editable) === null || _props$editable3 === void 0 ? void 0 : _props$editable3.form,
                        onValuesChange: editableUtils.onValuesChange,
                        key: "table",
                        submitter: false,
                        omitNil: false,
                        dateFormatter: props.dateFormatter
                    }), tableDom)
                ]
            });
        }
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [
                toolbarDom,
                alertDom,
                tableDom
            ]
        });
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        alertDom,
        props.loading,
        !!props.editable,
        tableDom,
        toolbarDom
    ]);
    var cardBodyStyle = (0, _react.useMemo)(function() {
        if (propsCardProps === false || notNeedCardDom === true || !!props.name) return {};
        if (hideToolbar) return {
            padding: 0
        };
        if (toolbarDom) return {
            paddingBlockStart: 0
        };
        if (toolbarDom && pagination === false) return {
            paddingBlockStart: 0
        };
        // if (!toolbarDom)
        return {
            padding: 0
        };
    }, [
        notNeedCardDom,
        pagination,
        props.name,
        propsCardProps,
        toolbarDom,
        hideToolbar
    ]);
    /** Table 区域的 dom，为了方便 render */ var tableAreaDom = // cardProps 或者 有了name 就不需要这个padding了，不然会导致不好对齐
    propsCardProps === false || notNeedCardDom === true || !!props.name ? tableContentDom : /*#__PURE__*/ (0, _jsxruntime.jsx)(_procard.default, (0, _objectSpread2.default)((0, _objectSpread2.default)({
        ghost: props.ghost,
        bordered: (0, _utils.isBordered)('table', cardBordered),
        bodyStyle: cardBodyStyle
    }, propsCardProps), {}, {
        children: tableContentDom
    }));
    var renderTable = function renderTable() {
        if (props.tableRender) return props.tableRender(props, tableAreaDom, {
            toolbar: toolbarDom || undefined,
            alert: alertDom || undefined,
            table: tableDom || undefined
        });
        return tableAreaDom;
    };
    var proTableDom = /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: (0, _classnames.default)(className, (0, _defineProperty.default)({}, "".concat(defaultClassName, "-polling"), action.pollingLoading)),
        style: style,
        ref: counter.rootDomRef,
        children: [
            isLightFilter ? null : searchNode,
            type !== 'form' && props.tableExtraRender && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: (0, _classnames.default)(className, "".concat(defaultClassName, "-extra")),
                children: props.tableExtraRender(props, action.dataSource || [])
            }),
            type !== 'form' && renderTable()
        ]
    });
    // 如果不需要的全屏，ConfigProvider 没有意义
    if (!options || !(options !== null && options !== void 0 && options.fullScreen)) return proTableDom;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.ConfigProvider, {
        getPopupContainer: function getPopupContainer() {
            return counter.rootDomRef.current || document.body;
        },
        children: proTableDom
    });
}
var emptyObj = {};
var ProTable = function ProTable(props) {
    var _props$expandable2;
    var cardBordered = props.cardBordered, request = props.request, propsClassName = props.className, _props$params = props.params, params = _props$params === void 0 ? emptyObj : _props$params, defaultData = props.defaultData, headerTitle = props.headerTitle, postData = props.postData, ghost = props.ghost, propsPagination = props.pagination, propsActionRef = props.actionRef, _props$columns = props.columns, propsColumns = _props$columns === void 0 ? [] : _props$columns, toolBarRender = props.toolBarRender, optionsRender = props.optionsRender, onLoad = props.onLoad, onRequestError = props.onRequestError, style = props.style, cardProps = props.cardProps, tableStyle = props.tableStyle, tableClassName = props.tableClassName, columnsStateMap = props.columnsStateMap, onColumnsStateChange = props.onColumnsStateChange, options = props.options, search = props.search, isEditorTable = props.name, onLoadingChange = props.onLoadingChange, _props$rowSelection = props.rowSelection, propsRowSelection = _props$rowSelection === void 0 ? false : _props$rowSelection, beforeSearchSubmit = props.beforeSearchSubmit, tableAlertRender = props.tableAlertRender, defaultClassName = props.defaultClassName, propRef = props.formRef, _props$type = props.type, type = _props$type === void 0 ? 'table' : _props$type, _props$columnEmptyTex = props.columnEmptyText, columnEmptyText = _props$columnEmptyTex === void 0 ? '-' : _props$columnEmptyTex, toolbar = props.toolbar, rowKey = props.rowKey, manualRequest = props.manualRequest, polling = props.polling, tooltip = props.tooltip, _props$revalidateOnFo = props.revalidateOnFocus, revalidateOnFocus = _props$revalidateOnFo === void 0 ? false : _props$revalidateOnFo, searchFormRender = props.searchFormRender, rest = (0, _objectWithoutProperties.default)(props, _excluded2);
    var _useStyle = (0, _style.useStyle)(props.defaultClassName), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
    var className = (0, _classnames.default)(defaultClassName, propsClassName, hashId);
    /** 通用的来操作子节点的工具类 */ var actionRef = (0, _react.useRef)();
    var defaultFormRef = (0, _react.useRef)();
    var formRef = propRef || defaultFormRef;
    (0, _react.useImperativeHandle)(propsActionRef, function() {
        return actionRef.current;
    });
    /** 单选多选的相关逻辑 */ var _useMountMergeState = (0, _proutils.useMountMergeState)(propsRowSelection ? (propsRowSelection === null || propsRowSelection === void 0 ? void 0 : propsRowSelection.defaultSelectedRowKeys) || [] : undefined, {
        value: propsRowSelection ? propsRowSelection.selectedRowKeys : undefined
    }), _useMountMergeState2 = (0, _slicedToArray.default)(_useMountMergeState, 2), selectedRowKeys = _useMountMergeState2[0], setSelectedRowKeys = _useMountMergeState2[1];
    var _useMountMergeState3 = (0, _proutils.useMountMergeState)(function() {
        // 如果手动模式，或者 search 不存在的时候设置为 undefined
        // undefined 就不会触发首次加载
        if (manualRequest || search !== false) return undefined;
        return {};
    }), _useMountMergeState4 = (0, _slicedToArray.default)(_useMountMergeState3, 2), formSearch = _useMountMergeState4[0], setFormSearch = _useMountMergeState4[1];
    var _useMountMergeState5 = (0, _proutils.useMountMergeState)({}), _useMountMergeState6 = (0, _slicedToArray.default)(_useMountMergeState5, 2), proFilter = _useMountMergeState6[0], setProFilter = _useMountMergeState6[1];
    var _useMountMergeState7 = (0, _proutils.useMountMergeState)({}), _useMountMergeState8 = (0, _slicedToArray.default)(_useMountMergeState7, 2), proSort = _useMountMergeState8[0], setProSort = _useMountMergeState8[1];
    /** 设置默认排序和筛选值 */ (0, _react.useEffect)(function() {
        var _parseDefaultColumnCo = (0, _utils.parseDefaultColumnConfig)(propsColumns), sort = _parseDefaultColumnCo.sort, filter = _parseDefaultColumnCo.filter;
        setProFilter(filter);
        setProSort(sort);
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    var intl = (0, _proprovider.useIntl)();
    /** 需要初始化 不然默认可能报错 这里取了 defaultCurrent 和 current 为了保证不会重复刷新 */ var fetchPagination = (0, _typeof.default)(propsPagination) === 'object' ? propsPagination : {
        defaultCurrent: 1,
        defaultPageSize: 20,
        pageSize: 20,
        current: 1
    };
    var counter = (0, _react.useContext)(_Provide.TableContext);
    // ============================ useFetchData ============================
    var fetchData = (0, _react.useMemo)(function() {
        if (!request) return undefined;
        return /*#__PURE__*/ function() {
            var _ref2 = (0, _asyncToGenerator.default)(/*#__PURE__*/ (0, _regeneratorRuntime.default)().mark(function _callee(pageParams) {
                var actionParams, response;
                return (0, _regeneratorRuntime.default)().wrap(function _callee$(_context) {
                    while(true)switch(_context.prev = _context.next){
                        case 0:
                            actionParams = (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, pageParams || {}), formSearch), params); // eslint-disable-next-line no-underscore-dangle
                            delete actionParams._timestamp;
                            _context.next = 4;
                            return request(actionParams, proSort, proFilter);
                        case 4:
                            response = _context.sent;
                            return _context.abrupt("return", response);
                        case 6:
                        case "end":
                            return _context.stop();
                    }
                }, _callee);
            }));
            return function(_x) {
                return _ref2.apply(this, arguments);
            };
        }();
    }, [
        formSearch,
        params,
        proFilter,
        proSort,
        request
    ]);
    var action = (0, _useFetchData.default)(fetchData, defaultData, {
        pageInfo: propsPagination === false ? false : fetchPagination,
        loading: props.loading,
        dataSource: props.dataSource,
        onDataSourceChange: props.onDataSourceChange,
        onLoad: onLoad,
        onLoadingChange: onLoadingChange,
        onRequestError: onRequestError,
        postData: postData,
        revalidateOnFocus: revalidateOnFocus,
        manual: formSearch === undefined,
        polling: polling,
        effects: [
            (0, _proutils.stringify)(params),
            (0, _proutils.stringify)(formSearch),
            (0, _proutils.stringify)(proFilter),
            (0, _proutils.stringify)(proSort)
        ],
        debounceTime: props.debounceTime,
        onPageInfoChange: function onPageInfoChange(pageInfo) {
            var _propsPagination$onCh, _propsPagination$onSh;
            if (!propsPagination || !fetchData) return;
            // 总是触发一下 onChange 和  onShowSizeChange
            // 目前只有 List 和 Table 支持分页, List 有分页的时候打断 Table 的分页
            propsPagination === null || propsPagination === void 0 || (_propsPagination$onCh = propsPagination.onChange) === null || _propsPagination$onCh === void 0 || _propsPagination$onCh.call(propsPagination, pageInfo.current, pageInfo.pageSize);
            propsPagination === null || propsPagination === void 0 || (_propsPagination$onSh = propsPagination.onShowSizeChange) === null || _propsPagination$onSh === void 0 || _propsPagination$onSh.call(propsPagination, pageInfo.current, pageInfo.pageSize);
        }
    });
    // ============================ END ============================
    /** 聚焦的时候重新请求数据，这样可以保证数据都是最新的。 */ (0, _react.useEffect)(function() {
        var _props$form;
        // 手动模式和 request 为空都不生效
        if (props.manualRequest || !props.request || !revalidateOnFocus || (_props$form = props.form) !== null && _props$form !== void 0 && _props$form.ignoreRules) return;
        // 聚焦时重新请求事件
        var visibilitychange = function visibilitychange() {
            if (document.visibilityState === 'visible') action.reload();
        };
        document.addEventListener('visibilitychange', visibilitychange);
        return function() {
            return document.removeEventListener('visibilitychange', visibilitychange);
        };
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    /** SelectedRowKeys受控处理selectRows */ var preserveRecordsRef = _react.default.useRef(new Map());
    // ============================ RowKey ============================
    var getRowKey = _react.default.useMemo(function() {
        if (typeof rowKey === 'function') return rowKey;
        return function(record, index) {
            var _ref3;
            if (index === -1) return record === null || record === void 0 ? void 0 : record[rowKey];
            // 如果 props 中有name 的话，用index 来做行号，这样方便转化为 index
            if (props.name) return index === null || index === void 0 ? void 0 : index.toString();
            return (_ref3 = record === null || record === void 0 ? void 0 : record[rowKey]) !== null && _ref3 !== void 0 ? _ref3 : index === null || index === void 0 ? void 0 : index.toString();
        };
    }, [
        props.name,
        rowKey
    ]);
    (0, _react.useMemo)(function() {
        var _action$dataSource;
        if ((_action$dataSource = action.dataSource) !== null && _action$dataSource !== void 0 && _action$dataSource.length) {
            var keys = action.dataSource.map(function(data) {
                var dataRowKey = getRowKey(data, -1);
                preserveRecordsRef.current.set(dataRowKey, data);
                return dataRowKey;
            });
            return keys;
        }
        return [];
    }, [
        action.dataSource,
        getRowKey
    ]);
    /** 页面编辑的计算 */ var pagination = (0, _react.useMemo)(function() {
        var newPropsPagination = propsPagination === false ? false : (0, _objectSpread2.default)({}, propsPagination);
        var pageConfig = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, action.pageInfo), {}, {
            setPageInfo: function setPageInfo(_ref4) {
                var pageSize = _ref4.pageSize, current = _ref4.current;
                var pageInfo = action.pageInfo;
                // pageSize 发生改变，并且你不是在第一页，切回到第一页
                // 这样可以防止出现 跳转到一个空的数据页的问题
                if (pageSize === pageInfo.pageSize || pageInfo.current === 1) {
                    action.setPageInfo({
                        pageSize: pageSize,
                        current: current
                    });
                    return;
                }
                // 通过request的时候清空数据，然后刷新不然可能会导致 pageSize 没有数据多
                if (request) action.setDataSource([]);
                action.setPageInfo({
                    pageSize: pageSize,
                    // 目前只有 List 和 Table 支持分页, List 有分页的时候 还是使用之前的当前页码
                    current: type === 'list' ? current : 1
                });
            }
        });
        if (request && newPropsPagination) {
            delete newPropsPagination.onChange;
            delete newPropsPagination.onShowSizeChange;
        }
        return (0, _utils.mergePagination)(newPropsPagination, pageConfig, intl);
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        propsPagination,
        action,
        intl
    ]);
    (0, _proutils.useDeepCompareEffect)(function() {
        var _action$pageInfo;
        // request 存在且params不为空，且已经请求过数据才需要设置。
        if (props.request && !(0, _isEmpty.default)(params) && action.dataSource && !(0, _isEqual.default)(action.dataSource, defaultData) && (action === null || action === void 0 || (_action$pageInfo = action.pageInfo) === null || _action$pageInfo === void 0 ? void 0 : _action$pageInfo.current) !== 1) action.setPageInfo({
            current: 1
        });
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        params
    ]);
    // 设置 name 到 store 中，里面用了 ref ，所以不用担心直接 set
    counter.setPrefixName(props.name);
    /** 清空所有的选中项 */ var _onCleanSelected = (0, _react.useCallback)(function() {
        if (propsRowSelection && propsRowSelection.onChange) propsRowSelection.onChange([], [], {
            type: 'none'
        });
        setSelectedRowKeys([]);
    }, [
        propsRowSelection,
        setSelectedRowKeys
    ]);
    counter.propsRef.current = props;
    /** 可编辑行的相关配置 */ var editableUtils = (0, _proutils.useEditableArray)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, props.editable), {}, {
        tableName: props.name,
        getRowKey: getRowKey,
        childrenColumnName: ((_props$expandable2 = props.expandable) === null || _props$expandable2 === void 0 ? void 0 : _props$expandable2.childrenColumnName) || 'children',
        dataSource: action.dataSource || [],
        setDataSource: function setDataSource(data) {
            var _props$editable4, _props$editable4$onVa;
            (_props$editable4 = props.editable) === null || _props$editable4 === void 0 || (_props$editable4$onVa = _props$editable4.onValuesChange) === null || _props$editable4$onVa === void 0 || _props$editable4$onVa.call(_props$editable4, undefined, data);
            action.setDataSource(data);
        }
    }));
    // ============================ Render ============================
    var _proTheme$useToken = _proprovider.proTheme === null || _proprovider.proTheme === void 0 ? void 0 : _proprovider.proTheme.useToken(), token = _proTheme$useToken.token;
    /** 绑定 action */ (0, _utils.useActionType)(actionRef, action, {
        fullScreen: function fullScreen() {
            var _counter$rootDomRef;
            if (!((_counter$rootDomRef = counter.rootDomRef) !== null && _counter$rootDomRef !== void 0 && _counter$rootDomRef.current) || !document.fullscreenEnabled) return;
            if (document.fullscreenElement) document.exitFullscreen();
            else {
                var _counter$rootDomRef2;
                (_counter$rootDomRef2 = counter.rootDomRef) === null || _counter$rootDomRef2 === void 0 || _counter$rootDomRef2.current.requestFullscreen();
            }
        },
        onCleanSelected: function onCleanSelected() {
            // 清空选中行
            _onCleanSelected();
        },
        resetAll: function resetAll() {
            var _formRef$current;
            // 清空选中行
            _onCleanSelected();
            // 清空筛选
            setProFilter({});
            // 清空排序
            setProSort({});
            // 清空 toolbar 搜索
            counter.setKeyWords(undefined);
            // 重置页码
            action.setPageInfo({
                current: 1
            });
            // 重置表单
            formRef === null || formRef === void 0 || (_formRef$current = formRef.current) === null || _formRef$current === void 0 || _formRef$current.resetFields();
            setFormSearch({});
        },
        editableUtils: editableUtils
    });
    /** 同步 action */ counter.setAction(actionRef.current);
    // ---------- 列计算相关 start  -----------------
    var tableColumn = (0, _react.useMemo)(function() {
        var _props$expandable3;
        return (0, _genProColumnToColumn.genProColumnToColumn)({
            columns: propsColumns,
            counter: counter,
            columnEmptyText: columnEmptyText,
            type: type,
            marginSM: token.marginSM,
            editableUtils: editableUtils,
            rowKey: rowKey,
            childrenColumnName: (_props$expandable3 = props.expandable) === null || _props$expandable3 === void 0 ? void 0 : _props$expandable3.childrenColumnName
        }).sort((0, _columnSort.columnSort)(counter.columnsMap));
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        propsColumns,
        counter === null || counter === void 0 ? void 0 : counter.sortKeyColumns,
        counter === null || counter === void 0 ? void 0 : counter.columnsMap,
        columnEmptyText,
        type,
        // eslint-disable-next-line react-hooks/exhaustive-deps
        editableUtils.editableKeys && editableUtils.editableKeys.join(',')
    ]);
    /** Table Column 变化的时候更新一下，这个参数将会用于渲染 */ (0, _proutils.useDeepCompareEffectDebounce)(function() {
        if (tableColumn && tableColumn.length > 0) {
            // 重新生成key的字符串用于排序
            var columnKeys = tableColumn.map(function(item) {
                return (0, _utils.genColumnKey)(item.key, item.index);
            });
            counter.setSortKeyColumns(columnKeys);
        }
    }, [
        tableColumn
    ], [
        'render',
        'renderFormItem'
    ], 100);
    /** 同步 Pagination，支持受控的 页码 和 pageSize */ (0, _proutils.useDeepCompareEffect)(function() {
        var pageInfo = action.pageInfo;
        var _ref5 = propsPagination || {}, _ref5$current = _ref5.current, current = _ref5$current === void 0 ? pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.current : _ref5$current, _ref5$pageSize = _ref5.pageSize, pageSize = _ref5$pageSize === void 0 ? pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.pageSize : _ref5$pageSize;
        if (propsPagination && (current || pageSize) && (pageSize !== (pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.pageSize) || current !== (pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.current))) action.setPageInfo({
            pageSize: pageSize || pageInfo.pageSize,
            current: current || pageInfo.current
        });
    }, [
        propsPagination && propsPagination.pageSize,
        propsPagination && propsPagination.current
    ]);
    /** 行选择相关的问题 */ var rowSelection = (0, _objectSpread2.default)((0, _objectSpread2.default)({
        selectedRowKeys: selectedRowKeys
    }, propsRowSelection), {}, {
        onChange: function onChange(keys, rows, info) {
            if (propsRowSelection && propsRowSelection.onChange) propsRowSelection.onChange(keys, rows, info);
            setSelectedRowKeys(keys);
        }
    });
    /** 是不是 LightFilter, LightFilter 有一些特殊的处理 */ var isLightFilter = search !== false && (search === null || search === void 0 ? void 0 : search.filterType) === 'light';
    var _onFormSearchSubmit = (0, _react.useCallback)(function(values) {
        // 判断search.onSearch返回值决定是否更新formSearch
        if (options && options.search) {
            var _options$search, _options$search$onSea;
            var _ref6 = options.search === true ? {} : options.search, _ref6$name = _ref6.name, name = _ref6$name === void 0 ? 'keyword' : _ref6$name;
            /** 如果传入的 onSearch 返回值为 false，则不要把options.search.name对应的值set到formSearch */ var success = (_options$search = options.search) === null || _options$search === void 0 || (_options$search$onSea = _options$search.onSearch) === null || _options$search$onSea === void 0 ? void 0 : _options$search$onSea.call(_options$search, counter.keyWords);
            if (success !== false) {
                setFormSearch((0, _objectSpread2.default)((0, _objectSpread2.default)({}, values), {}, (0, _defineProperty.default)({}, name, counter.keyWords)));
                return;
            }
        }
        setFormSearch(values);
    }, [
        counter.keyWords,
        options,
        setFormSearch
    ]);
    var loading = (0, _react.useMemo)(function() {
        if ((0, _typeof.default)(action.loading) === 'object') {
            var _action$loading;
            return ((_action$loading = action.loading) === null || _action$loading === void 0 ? void 0 : _action$loading.spinning) || false;
        }
        return action.loading;
    }, [
        action.loading
    ]);
    var searchNode = (0, _react.useMemo)(function() {
        var node = search === false && type !== 'form' ? null : /*#__PURE__*/ (0, _jsxruntime.jsx)(_Form.default, {
            pagination: pagination,
            beforeSearchSubmit: beforeSearchSubmit,
            action: actionRef,
            columns: propsColumns,
            onFormSearchSubmit: function onFormSearchSubmit(values) {
                _onFormSearchSubmit(values);
            },
            ghost: ghost,
            onReset: props.onReset,
            onSubmit: props.onSubmit,
            loading: !!loading,
            manualRequest: manualRequest,
            search: search,
            form: props.form,
            formRef: formRef,
            type: props.type || 'table',
            cardBordered: props.cardBordered,
            dateFormatter: props.dateFormatter
        });
        if (searchFormRender && node) return /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
            children: searchFormRender(props, node)
        });
        else return node;
    }, [
        beforeSearchSubmit,
        formRef,
        ghost,
        loading,
        manualRequest,
        _onFormSearchSubmit,
        pagination,
        props,
        propsColumns,
        search,
        searchFormRender,
        type
    ]);
    var selectedRows = (0, _react.useMemo)(function() {
        return selectedRowKeys === null || selectedRowKeys === void 0 ? void 0 : selectedRowKeys.map(function(key) {
            var _preserveRecordsRef$c;
            return (_preserveRecordsRef$c = preserveRecordsRef.current) === null || _preserveRecordsRef$c === void 0 ? void 0 : _preserveRecordsRef$c.get(key);
        });
    }, [
        action.dataSource,
        selectedRowKeys
    ]);
    var hideToolbar = (0, _react.useMemo)(function() {
        return options === false && !headerTitle && !toolBarRender && !toolbar && !isLightFilter;
    }, [
        options,
        headerTitle,
        toolBarRender,
        toolbar,
        isLightFilter
    ]);
    /** 内置的工具栏 */ var toolbarDom = toolBarRender === false ? null : /*#__PURE__*/ (0, _jsxruntime.jsx)(_ToolBar.default, {
        headerTitle: headerTitle,
        hideToolbar: hideToolbar,
        selectedRows: selectedRows,
        selectedRowKeys: selectedRowKeys,
        tableColumn: tableColumn,
        tooltip: tooltip,
        toolbar: toolbar,
        onFormSearchSubmit: function onFormSearchSubmit(newValues) {
            setFormSearch((0, _objectSpread2.default)((0, _objectSpread2.default)({}, formSearch), newValues));
        },
        searchNode: isLightFilter ? searchNode : null,
        options: options,
        optionsRender: optionsRender,
        actionRef: actionRef,
        toolBarRender: toolBarRender
    });
    /** 内置的多选操作栏 */ var alertDom = propsRowSelection !== false ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_Alert.default, {
        selectedRowKeys: selectedRowKeys,
        selectedRows: selectedRows,
        onCleanSelected: _onCleanSelected,
        alertOptionRender: rest.tableAlertOptionRender,
        alertInfoRender: tableAlertRender,
        alwaysShowAlert: propsRowSelection === null || propsRowSelection === void 0 ? void 0 : propsRowSelection.alwaysShowAlert
    }) : null;
    return wrapSSR(/*#__PURE__*/ (0, _jsxruntime.jsx)(TableRender, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, props), {}, {
        name: isEditorTable,
        defaultClassName: defaultClassName,
        size: counter.tableSize,
        onSizeChange: counter.setTableSize,
        pagination: pagination,
        searchNode: searchNode,
        rowSelection: propsRowSelection !== false ? rowSelection : undefined,
        className: className,
        tableColumn: tableColumn,
        isLightFilter: isLightFilter,
        action: action,
        alertDom: alertDom,
        toolbarDom: toolbarDom,
        hideToolbar: hideToolbar,
        onSortChange: function onSortChange(sortConfig) {
            if (proSort === sortConfig) return;
            setProSort(sortConfig !== null && sortConfig !== void 0 ? sortConfig : {});
        },
        onFilterChange: function onFilterChange(filterConfig) {
            if (filterConfig === proFilter) return;
            setProFilter(filterConfig);
        },
        editableUtils: editableUtils,
        getRowKey: getRowKey
    })));
};
/**
 * 🏆 Use Ant Design Table like a Pro! 更快 更好 更方便
 *
 * @param props
 */ var ProviderTableContainer = function ProviderTableContainer(props) {
    var _useContext = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
    var ErrorComponent = props.ErrorBoundary === false ? _react.default.Fragment : props.ErrorBoundary || _proutils.ErrorBoundary;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Provide.Container, {
        initValue: props,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_proprovider.ProConfigProvider, {
            needDeps: true,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(ErrorComponent, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(ProTable, (0, _objectSpread2.default)({
                    defaultClassName: "".concat(getPrefixCls('pro-table'))
                }, props))
            })
        })
    });
};
ProviderTableContainer.Summary = _antd.Table.Summary;
var _default = ProviderTableContainer;

},
"node_modules/@ant-design/pro-table/es/components/Alert/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _style = __mako_require__("node_modules/@ant-design/pro-table/es/components/Alert/style.js");
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var defaultAlertOptionRender = function defaultAlertOptionRender(props) {
    var intl = props.intl, onCleanSelected = props.onCleanSelected;
    return [
        /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
            onClick: onCleanSelected,
            children: intl.getMessage('alert.clear', '清空')
        }, "0")
    ];
};
function TableAlert(_ref) {
    var _ref$selectedRowKeys = _ref.selectedRowKeys, selectedRowKeys = _ref$selectedRowKeys === void 0 ? [] : _ref$selectedRowKeys, onCleanSelected = _ref.onCleanSelected, alwaysShowAlert = _ref.alwaysShowAlert, selectedRows = _ref.selectedRows, _ref$alertInfoRender = _ref.alertInfoRender, alertInfoRender = _ref$alertInfoRender === void 0 ? function(_ref2) {
        var intl = _ref2.intl;
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_antd.Space, {
            children: [
                intl.getMessage('alert.selected', '已选择'),
                selectedRowKeys.length,
                intl.getMessage('alert.item', '项'),
                "\xA0\xA0"
            ]
        });
    } : _ref$alertInfoRender, _ref$alertOptionRende = _ref.alertOptionRender, alertOptionRender = _ref$alertOptionRende === void 0 ? defaultAlertOptionRender : _ref$alertOptionRende;
    var intl = (0, _proprovider.useIntl)();
    var option = alertOptionRender && alertOptionRender({
        onCleanSelected: onCleanSelected,
        selectedRowKeys: selectedRowKeys,
        selectedRows: selectedRows,
        intl: intl
    });
    var _useContext = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
    var className = getPrefixCls('pro-table-alert');
    var _useStyle = (0, _style.useStyle)(className), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
    if (alertInfoRender === false) return null;
    var dom = alertInfoRender({
        intl: intl,
        selectedRowKeys: selectedRowKeys,
        selectedRows: selectedRows,
        onCleanSelected: onCleanSelected
    });
    if (dom === false || selectedRowKeys.length < 1 && !alwaysShowAlert) return null;
    return wrapSSR(/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: "".concat(className, " ").concat(hashId).trim(),
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "".concat(className, "-container ").concat(hashId).trim(),
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "".concat(className, "-info ").concat(hashId).trim(),
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "".concat(className, "-info-content ").concat(hashId).trim(),
                        children: dom
                    }),
                    option ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "".concat(className, "-info-option ").concat(hashId).trim(),
                        children: option
                    }) : null
                ]
            })
        })
    }));
}
var _default = TableAlert;

},
"node_modules/@ant-design/pro-table/es/components/Alert/style.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "useStyle", {
    enumerable: true,
    get: function() {
        return useStyle;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var genProStyle = function genProStyle(token) {
    return (0, _defineProperty.default)({}, token.componentCls, {
        marginBlockEnd: 16,
        backgroundColor: (0, _proprovider.setAlpha)(token.colorTextBase, 0.02),
        borderRadius: token.borderRadius,
        border: 'none',
        '&-container': {
            paddingBlock: token.paddingSM,
            paddingInline: token.paddingLG
        },
        '&-info': {
            display: 'flex',
            alignItems: 'center',
            transition: 'all 0.3s',
            color: token.colorTextTertiary,
            '&-content': {
                flex: 1
            },
            '&-option': {
                minWidth: 48,
                paddingInlineStart: 16
            }
        }
    });
};
function useStyle(prefixCls) {
    return (0, _proprovider.useStyle)('ProTableAlert', function(token) {
        var proToken = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, token), {}, {
            componentCls: ".".concat(prefixCls)
        });
        return [
            genProStyle(proToken)
        ];
    });
}

},
"node_modules/@ant-design/pro-table/es/components/ColumnSetting/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _toConsumableArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"));
var _objectWithoutProperties = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"));
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _icons = __mako_require__("node_modules/@ant-design/pro-table/node_modules/@ant-design/icons/es/index.js");
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _classnames = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/classnames/index.js"));
var _omit = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/rc-util/es/omit.js"));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _Provide = __mako_require__("node_modules/@ant-design/pro-table/es/Store/Provide.js");
var _index = __mako_require__("node_modules/@ant-design/pro-table/es/utils/index.js");
var _style = __mako_require__("node_modules/@ant-design/pro-table/es/components/ColumnSetting/style.js");
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var _excluded = [
    "key",
    "dataIndex",
    "children"
];
var _excluded2 = [
    "disabled"
];
var ToolTipIcon = function ToolTipIcon(_ref) {
    var title = _ref.title, show = _ref.show, children = _ref.children, columnKey = _ref.columnKey, fixed = _ref.fixed;
    var _useContext = (0, _react.useContext)(_Provide.TableContext), columnsMap = _useContext.columnsMap, setColumnsMap = _useContext.setColumnsMap;
    if (!show) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Tooltip, {
        title: title,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
            onClick: function onClick(e) {
                e.stopPropagation();
                e.preventDefault();
                var config = columnsMap[columnKey] || {};
                var columnKeyMap = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, columnsMap), {}, (0, _defineProperty.default)({}, columnKey, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, config), {}, {
                    fixed: fixed
                })));
                setColumnsMap(columnKeyMap);
            },
            children: children
        })
    });
};
var CheckboxListItem = function CheckboxListItem(_ref2) {
    var columnKey = _ref2.columnKey, isLeaf = _ref2.isLeaf, title = _ref2.title, className = _ref2.className, fixed = _ref2.fixed, showListItemOption = _ref2.showListItemOption;
    var intl = (0, _proprovider.useIntl)();
    var _useContext2 = (0, _react.useContext)(_proprovider.ProProvider), hashId = _useContext2.hashId;
    var dom = /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
        className: "".concat(className, "-list-item-option ").concat(hashId).trim(),
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(ToolTipIcon, {
                columnKey: columnKey,
                fixed: "left",
                title: intl.getMessage('tableToolBar.leftPin', '固定在列首'),
                show: fixed !== 'left',
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.VerticalAlignTopOutlined, {})
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(ToolTipIcon, {
                columnKey: columnKey,
                fixed: undefined,
                title: intl.getMessage('tableToolBar.noPin', '不固定'),
                show: !!fixed,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.VerticalAlignMiddleOutlined, {})
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(ToolTipIcon, {
                columnKey: columnKey,
                fixed: "right",
                title: intl.getMessage('tableToolBar.rightPin', '固定在列尾'),
                show: fixed !== 'right',
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.VerticalAlignBottomOutlined, {})
            })
        ]
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
        className: "".concat(className, "-list-item ").concat(hashId).trim(),
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "".concat(className, "-list-item-title ").concat(hashId).trim(),
                children: title
            }),
            showListItemOption && !isLeaf ? dom : null
        ]
    }, columnKey);
};
var CheckboxList = function CheckboxList(_ref3) {
    var _treeDataConfig$list, _treeDataConfig$list2, _treeDataConfig$list3;
    var list = _ref3.list, draggable = _ref3.draggable, checkable = _ref3.checkable, showListItemOption = _ref3.showListItemOption, className = _ref3.className, _ref3$showTitle = _ref3.showTitle, showTitle = _ref3$showTitle === void 0 ? true : _ref3$showTitle, listTitle = _ref3.title, _ref3$listHeight = _ref3.listHeight, listHeight = _ref3$listHeight === void 0 ? 280 : _ref3$listHeight;
    var _useContext3 = (0, _react.useContext)(_proprovider.ProProvider), hashId = _useContext3.hashId;
    var _useContext4 = (0, _react.useContext)(_Provide.TableContext), columnsMap = _useContext4.columnsMap, setColumnsMap = _useContext4.setColumnsMap, sortKeyColumns = _useContext4.sortKeyColumns, setSortKeyColumns = _useContext4.setSortKeyColumns;
    var show = list && list.length > 0;
    var treeDataConfig = (0, _react.useMemo)(function() {
        if (!show) return {};
        var checkedKeys = [];
        var treeMap = new Map();
        var loopData = function loopData(data, parentConfig) {
            return data.map(function(_ref4) {
                var _config$disable;
                var key = _ref4.key, dataIndex = _ref4.dataIndex, children = _ref4.children, rest = (0, _objectWithoutProperties.default)(_ref4, _excluded);
                var columnKey = (0, _index.genColumnKey)(key, [
                    parentConfig === null || parentConfig === void 0 ? void 0 : parentConfig.columnKey,
                    rest.index
                ].filter(Boolean).join('-'));
                var config = columnsMap[columnKey || 'null'] || {
                    show: true
                };
                if (config.show !== false && !children) checkedKeys.push(columnKey);
                var item = (0, _objectSpread2.default)((0, _objectSpread2.default)({
                    key: columnKey
                }, (0, _omit.default)(rest, [
                    'className'
                ])), {}, {
                    selectable: false,
                    disabled: config.disable === true,
                    disableCheckbox: typeof config.disable === 'boolean' ? config.disable : (_config$disable = config.disable) === null || _config$disable === void 0 ? void 0 : _config$disable.checkbox,
                    isLeaf: parentConfig ? true : undefined
                });
                if (children) {
                    var _item$children;
                    item.children = loopData(children, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, config), {}, {
                        columnKey: columnKey
                    }));
                    // 如果children 已经全部是show了，把自己也设置为show
                    if ((_item$children = item.children) !== null && _item$children !== void 0 && _item$children.every(function(childrenItem) {
                        return checkedKeys === null || checkedKeys === void 0 ? void 0 : checkedKeys.includes(childrenItem.key);
                    })) checkedKeys.push(columnKey);
                }
                treeMap.set(key, item);
                return item;
            });
        };
        return {
            list: loopData(list),
            keys: checkedKeys,
            map: treeMap
        };
    }, [
        columnsMap,
        list,
        show
    ]);
    /** 移动到指定的位置 */ var move = (0, _proutils.useRefFunction)(function(id, targetId, dropPosition) {
        var newMap = (0, _objectSpread2.default)({}, columnsMap);
        var newColumns = (0, _toConsumableArray.default)(sortKeyColumns);
        var findIndex = newColumns.findIndex(function(columnKey) {
            return columnKey === id;
        });
        var targetIndex = newColumns.findIndex(function(columnKey) {
            return columnKey === targetId;
        });
        var isDownWard = dropPosition >= findIndex;
        if (findIndex < 0) return;
        var targetItem = newColumns[findIndex];
        newColumns.splice(findIndex, 1);
        if (dropPosition === 0) newColumns.unshift(targetItem);
        else newColumns.splice(isDownWard ? targetIndex : targetIndex + 1, 0, targetItem);
        // 重新生成排序数组
        newColumns.forEach(function(key, order) {
            newMap[key] = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, newMap[key] || {}), {}, {
                order: order
            });
        });
        // 更新数组
        setColumnsMap(newMap);
        setSortKeyColumns(newColumns);
    });
    /** 选中反选功能 */ var onCheckTree = (0, _proutils.useRefFunction)(function(e) {
        var newColumnMap = (0, _objectSpread2.default)({}, columnsMap);
        var loopSetShow = function loopSetShow(key) {
            var _treeDataConfig$map;
            var newSetting = (0, _objectSpread2.default)({}, newColumnMap[key]);
            newSetting.show = e.checked;
            // 如果含有子节点，也要选中
            if ((_treeDataConfig$map = treeDataConfig.map) !== null && _treeDataConfig$map !== void 0 && (_treeDataConfig$map = _treeDataConfig$map.get(key)) !== null && _treeDataConfig$map !== void 0 && _treeDataConfig$map.children) {
                var _treeDataConfig$map$g;
                (_treeDataConfig$map$g = treeDataConfig.map.get(key)) === null || _treeDataConfig$map$g === void 0 || (_treeDataConfig$map$g = _treeDataConfig$map$g.children) === null || _treeDataConfig$map$g === void 0 || _treeDataConfig$map$g.forEach(function(item) {
                    return loopSetShow(item.key);
                });
            }
            newColumnMap[key] = newSetting;
        };
        loopSetShow(e.node.key);
        setColumnsMap((0, _objectSpread2.default)({}, newColumnMap));
    });
    if (!show) return null;
    var listDom = /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Tree, {
        itemHeight: 24,
        draggable: draggable && !!((_treeDataConfig$list = treeDataConfig.list) !== null && _treeDataConfig$list !== void 0 && _treeDataConfig$list.length) && ((_treeDataConfig$list2 = treeDataConfig.list) === null || _treeDataConfig$list2 === void 0 ? void 0 : _treeDataConfig$list2.length) > 1,
        checkable: checkable,
        onDrop: function onDrop(info) {
            var dropKey = info.node.key;
            var dragKey = info.dragNode.key;
            var dropPosition = info.dropPosition, dropToGap = info.dropToGap;
            var position = dropPosition === -1 || !dropToGap ? dropPosition + 1 : dropPosition;
            move(dragKey, dropKey, position);
        },
        blockNode: true,
        onCheck: function onCheck(_, e) {
            return onCheckTree(e);
        },
        checkedKeys: treeDataConfig.keys,
        showLine: false,
        titleRender: function titleRender(_node) {
            var node = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, _node), {}, {
                children: undefined
            });
            if (!node.title) return null;
            var normalizedTitle = (0, _proutils.runFunction)(node.title, node);
            var wrappedTitle = /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Typography.Text, {
                style: {
                    width: 80
                },
                ellipsis: {
                    tooltip: normalizedTitle
                },
                children: normalizedTitle
            });
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(CheckboxListItem, (0, _objectSpread2.default)((0, _objectSpread2.default)({
                className: className
            }, (0, _omit.default)(node, [
                'key'
            ])), {}, {
                showListItemOption: showListItemOption,
                title: wrappedTitle,
                columnKey: node.key
            }));
        },
        height: listHeight,
        treeData: (_treeDataConfig$list3 = treeDataConfig.list) === null || _treeDataConfig$list3 === void 0 ? void 0 : _treeDataConfig$list3.map(function(_ref5) {
            var disabled = _ref5.disabled, config = (0, _objectWithoutProperties.default)(_ref5, _excluded2);
            return config;
        })
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            showTitle && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                className: "".concat(className, "-list-title ").concat(hashId).trim(),
                children: listTitle
            }),
            listDom
        ]
    });
};
var GroupCheckboxList = function GroupCheckboxList(_ref6) {
    var localColumns = _ref6.localColumns, className = _ref6.className, draggable = _ref6.draggable, checkable = _ref6.checkable, showListItemOption = _ref6.showListItemOption, listsHeight = _ref6.listsHeight;
    var _useContext5 = (0, _react.useContext)(_proprovider.ProProvider), hashId = _useContext5.hashId;
    var rightList = [];
    var leftList = [];
    var list = [];
    var intl = (0, _proprovider.useIntl)();
    localColumns.forEach(function(item) {
        /** 不在 setting 中展示的 */ if (item.hideInSetting) return;
        var fixed = item.fixed;
        if (fixed === 'left') {
            leftList.push(item);
            return;
        }
        if (fixed === 'right') {
            rightList.push(item);
            return;
        }
        list.push(item);
    });
    var showRight = rightList && rightList.length > 0;
    var showLeft = leftList && leftList.length > 0;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: (0, _classnames.default)("".concat(className, "-list"), hashId, (0, _defineProperty.default)({}, "".concat(className, "-list-group"), showRight || showLeft)),
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(CheckboxList, {
                title: intl.getMessage('tableToolBar.leftFixedTitle', '固定在左侧'),
                list: leftList,
                draggable: draggable,
                checkable: checkable,
                showListItemOption: showListItemOption,
                className: className,
                listHeight: listsHeight
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(CheckboxList, {
                list: list,
                draggable: draggable,
                checkable: checkable,
                showListItemOption: showListItemOption,
                title: intl.getMessage('tableToolBar.noFixedTitle', '不固定'),
                showTitle: showLeft || showRight,
                className: className,
                listHeight: listsHeight
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(CheckboxList, {
                title: intl.getMessage('tableToolBar.rightFixedTitle', '固定在右侧'),
                list: rightList,
                draggable: draggable,
                checkable: checkable,
                showListItemOption: showListItemOption,
                className: className,
                listHeight: listsHeight
            })
        ]
    });
};
function ColumnSetting(props) {
    var _props$checkable, _props$draggable, _props$showListItemOp, _props$settingIcon;
    var columnRef = (0, _react.useRef)(null);
    // 获得当前上下文的 hashID
    var counter = (0, _react.useContext)(_Provide.TableContext);
    var localColumns = props.columns;
    var _props$checkedReset = props.checkedReset, checkedReset = _props$checkedReset === void 0 ? true : _props$checkedReset;
    var columnsMap = counter.columnsMap, setColumnsMap = counter.setColumnsMap, clearPersistenceStorage = counter.clearPersistenceStorage;
    (0, _react.useEffect)(function() {
        var _counter$propsRef$cur;
        if ((_counter$propsRef$cur = counter.propsRef.current) !== null && _counter$propsRef$cur !== void 0 && (_counter$propsRef$cur = _counter$propsRef$cur.columnsState) !== null && _counter$propsRef$cur !== void 0 && _counter$propsRef$cur.value) {
            var _counter$propsRef$cur2;
            columnRef.current = JSON.parse(JSON.stringify(((_counter$propsRef$cur2 = counter.propsRef.current) === null || _counter$propsRef$cur2 === void 0 || (_counter$propsRef$cur2 = _counter$propsRef$cur2.columnsState) === null || _counter$propsRef$cur2 === void 0 ? void 0 : _counter$propsRef$cur2.value) || {}));
        }
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    /**
   * 设置全部选中，或全部未选中
   *
   * @param show
   */ var setAllSelectAction = (0, _proutils.useRefFunction)(function() {
        var show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
        var columnKeyMap = {};
        var loopColumns = function loopColumns(columns) {
            columns.forEach(function(_ref7) {
                var key = _ref7.key, fixed = _ref7.fixed, index = _ref7.index, children = _ref7.children, disable = _ref7.disable;
                var columnKey = (0, _index.genColumnKey)(key, index);
                if (columnKey) {
                    var _columnsMap$columnKey, _columnsMap$columnKey2;
                    columnKeyMap[columnKey] = {
                        // 子节点 disable 时，不修改节点显示状态
                        show: disable ? (_columnsMap$columnKey = columnsMap[columnKey]) === null || _columnsMap$columnKey === void 0 ? void 0 : _columnsMap$columnKey.show : show,
                        fixed: fixed,
                        disable: disable,
                        order: (_columnsMap$columnKey2 = columnsMap[columnKey]) === null || _columnsMap$columnKey2 === void 0 ? void 0 : _columnsMap$columnKey2.order
                    };
                }
                if (children) loopColumns(children);
            });
        };
        loopColumns(localColumns);
        setColumnsMap(columnKeyMap);
    });
    /** 全选和反选 */ var checkedAll = (0, _proutils.useRefFunction)(function(e) {
        if (e.target.checked) setAllSelectAction();
        else setAllSelectAction(false);
    });
    /** 重置项目 */ var clearClick = (0, _proutils.useRefFunction)(function() {
        var _counter$propsRef$cur3;
        clearPersistenceStorage === null || clearPersistenceStorage === void 0 || clearPersistenceStorage();
        setColumnsMap(((_counter$propsRef$cur3 = counter.propsRef.current) === null || _counter$propsRef$cur3 === void 0 || (_counter$propsRef$cur3 = _counter$propsRef$cur3.columnsState) === null || _counter$propsRef$cur3 === void 0 ? void 0 : _counter$propsRef$cur3.defaultValue) || columnRef.current || counter.defaultColumnKeyMap);
    });
    // 未选中的 key 列表
    var unCheckedKeys = Object.values(columnsMap).filter(function(value) {
        return !value || value.show === false;
    });
    // 是否已经选中
    var indeterminate = unCheckedKeys.length > 0 && unCheckedKeys.length !== localColumns.length;
    var intl = (0, _proprovider.useIntl)();
    var _useContext6 = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext), getPrefixCls = _useContext6.getPrefixCls;
    var className = getPrefixCls('pro-table-column-setting');
    var _useStyle = (0, _style.useStyle)(className), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
    return wrapSSR(/*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Popover, {
        arrow: false,
        title: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "".concat(className, "-title ").concat(hashId).trim(),
            children: [
                props.checkable === false ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {}) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Checkbox, {
                    indeterminate: indeterminate,
                    checked: unCheckedKeys.length === 0 && unCheckedKeys.length !== localColumns.length,
                    onChange: function onChange(e) {
                        checkedAll(e);
                    },
                    children: intl.getMessage('tableToolBar.columnDisplay', '列展示')
                }),
                checkedReset ? /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
                    onClick: clearClick,
                    className: "".concat(className, "-action-rest-button ").concat(hashId).trim(),
                    children: intl.getMessage('tableToolBar.reset', '重置')
                }) : null,
                props !== null && props !== void 0 && props.extra ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Space, {
                    size: 12,
                    align: "center",
                    children: props.extra
                }) : null
            ]
        }),
        overlayClassName: "".concat(className, "-overlay ").concat(hashId).trim(),
        trigger: "click",
        placement: "bottomRight",
        content: /*#__PURE__*/ (0, _jsxruntime.jsx)(GroupCheckboxList, {
            checkable: (_props$checkable = props.checkable) !== null && _props$checkable !== void 0 ? _props$checkable : true,
            draggable: (_props$draggable = props.draggable) !== null && _props$draggable !== void 0 ? _props$draggable : true,
            showListItemOption: (_props$showListItemOp = props.showListItemOption) !== null && _props$showListItemOp !== void 0 ? _props$showListItemOp : true,
            className: className,
            localColumns: localColumns,
            listsHeight: props.listsHeight
        }),
        children: props.children || /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Tooltip, {
            title: intl.getMessage('tableToolBar.columnSetting', '列设置'),
            children: (_props$settingIcon = props.settingIcon) !== null && _props$settingIcon !== void 0 ? _props$settingIcon : /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.SettingOutlined, {})
        })
    }));
}
var _default = ColumnSetting;

},
"node_modules/@ant-design/pro-table/es/components/ColumnSetting/style.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "useStyle", {
    enumerable: true,
    get: function() {
        return useStyle;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var genProStyle = function genProStyle(token) {
    return (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({}, token.componentCls, {
        width: 'auto',
        '&-title': {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'space-between',
            height: '32px'
        },
        '&-overlay': (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({}, "".concat(token.antCls, "-popover-inner-content"), {
            width: '200px',
            paddingBlock: 0,
            paddingInline: 0,
            paddingBlockEnd: 8
        }), "".concat(token.antCls, "-tree-node-content-wrapper:hover"), {
            backgroundColor: 'transparent'
        }), "".concat(token.antCls, "-tree-draggable-icon"), {
            cursor: 'grab'
        }), "".concat(token.antCls, "-tree-treenode"), (0, _defineProperty.default)((0, _defineProperty.default)({
            alignItems: 'center',
            '&:hover': (0, _defineProperty.default)({}, "".concat(token.componentCls, "-list-item-option"), {
                display: 'block'
            })
        }, "".concat(token.antCls, "-tree-checkbox"), {
            marginInlineEnd: '4px'
        }), "".concat(token.antCls, "-tree-title"), {
            width: '100%'
        }))
    }), "".concat(token.componentCls, "-action-rest-button"), {
        color: token.colorPrimary
    }), "".concat(token.componentCls, "-list"), (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({
        display: 'flex',
        flexDirection: 'column',
        width: '100%',
        paddingBlockStart: 8
    }, "&".concat(token.componentCls, "-list-group"), {
        paddingBlockStart: 0
    }), '&-title', {
        marginBlockStart: '6px',
        marginBlockEnd: '6px',
        paddingInlineStart: '24px',
        color: token.colorTextSecondary,
        fontSize: '12px'
    }), '&-item', {
        display: 'flex',
        alignItems: 'center',
        maxHeight: 24,
        justifyContent: 'space-between',
        '&-title': {
            flex: 1,
            maxWidth: 80,
            textOverflow: 'ellipsis',
            overflow: 'hidden',
            wordBreak: 'break-all',
            whiteSpace: 'nowrap'
        },
        '&-option': {
            display: 'none',
            float: 'right',
            cursor: 'pointer',
            '> span': {
                '> span.anticon': {
                    color: token.colorPrimary
                }
            },
            '> span + span': {
                marginInlineStart: 4
            }
        }
    }));
};
function useStyle(prefixCls) {
    return (0, _proprovider.useStyle)('ColumnSetting', function(token) {
        var proToken = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, token), {}, {
            componentCls: ".".concat(prefixCls)
        });
        return [
            genProStyle(proToken)
        ];
    });
}

},
"node_modules/@ant-design/pro-table/es/components/DragSortTable/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _regeneratorRuntime = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js"));
var _asyncToGenerator = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _slicedToArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/slicedToArray.js"));
var _objectWithoutProperties = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"));
var _icons = __mako_require__("node_modules/@ant-design/pro-table/node_modules/@ant-design/icons/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _useMergedState = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/rc-util/es/hooks/useMergedState.js"));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _Table = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/Table.js"));
var _useDragSort = __mako_require__("node_modules/@ant-design/pro-table/es/utils/useDragSort.js");
var _style = __mako_require__("node_modules/@ant-design/pro-table/es/components/DragSortTable/style.js");
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var _excluded = [
    "rowKey",
    "dragSortKey",
    "dragSortHandlerRender",
    "onDragSortEnd",
    "onDataSourceChange",
    "defaultData",
    "dataSource",
    "onLoad"
];
var _excluded2 = [
    "rowData",
    "index",
    "className"
];
function DragSortTable(props) {
    var _otherProps$columns;
    var rowKey = props.rowKey, dragSortKey = props.dragSortKey, dragSortHandlerRender = props.dragSortHandlerRender, onDragSortEnd = props.onDragSortEnd, onDataSourceChange = props.onDataSourceChange, defaultData = props.defaultData, originDataSource = props.dataSource, onLoad = props.onLoad, otherProps = (0, _objectWithoutProperties.default)(props, _excluded);
    var _useContext = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
    var _useMergedState1 = (0, _useMergedState.default)(function() {
        return defaultData || [];
    }, {
        value: originDataSource,
        onChange: onDataSourceChange
    }), _useMergedState2 = (0, _slicedToArray.default)(_useMergedState1, 2), dataSource = _useMergedState2[0], setDataSource = _useMergedState2[1];
    var _useStyle = (0, _style.useStyle)(getPrefixCls('pro-table-drag')), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
    // 默认拖拽把手
    var DragHandle = (0, _react.useMemo)(function() {
        return function(dragHandleProps) {
            var rowData = dragHandleProps.rowData, index = dragHandleProps.index, className = dragHandleProps.className, rest = (0, _objectWithoutProperties.default)(dragHandleProps, _excluded2);
            var defaultDom = /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.HolderOutlined, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, rest), {}, {
                className: "".concat(getPrefixCls('pro-table-drag-icon'), " ").concat(className || '', " ").concat(hashId || '').trim()
            }));
            var handel = dragSortHandlerRender ? dragSortHandlerRender(dragHandleProps === null || dragHandleProps === void 0 ? void 0 : dragHandleProps.rowData, dragHandleProps === null || dragHandleProps === void 0 ? void 0 : dragHandleProps.index) : defaultDom;
            return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", (0, _objectSpread2.default)((0, _objectSpread2.default)({}, rest), {}, {
                children: handel
            }));
        };
    }, [
        getPrefixCls
    ]);
    // 使用自定义hooks获取拖拽相关组件的components集合
    var _useDragSort1 = (0, _useDragSort.useDragSort)({
        dataSource: dataSource === null || dataSource === void 0 ? void 0 : dataSource.slice(),
        dragSortKey: dragSortKey,
        onDragSortEnd: onDragSortEnd,
        components: props.components,
        rowKey: rowKey,
        DragHandle: DragHandle
    }), components = _useDragSort1.components, DndContext = _useDragSort1.DndContext;
    var wrapOnload = /*#__PURE__*/ function() {
        var _ref = (0, _asyncToGenerator.default)(/*#__PURE__*/ (0, _regeneratorRuntime.default)().mark(function _callee(ds) {
            return (0, _regeneratorRuntime.default)().wrap(function _callee$(_context) {
                while(true)switch(_context.prev = _context.next){
                    case 0:
                        setDataSource(ds);
                        return _context.abrupt("return", onLoad === null || onLoad === void 0 ? void 0 : onLoad(ds));
                    case 2:
                    case "end":
                        return _context.stop();
                }
            }, _callee);
        }));
        return function wrapOnload(_x) {
            return _ref.apply(this, arguments);
        };
    }();
    return wrapSSR(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Table.default, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, otherProps), {}, {
        columns: (_otherProps$columns = otherProps.columns) === null || _otherProps$columns === void 0 ? void 0 : _otherProps$columns.map(function(item) {
            if (item.dataIndex == dragSortKey || item.key === dragSortKey) {
                if (!item.render) item.render = function() {
                    return null;
                };
            }
            return item;
        }),
        onLoad: wrapOnload,
        rowKey: rowKey,
        tableViewRender: function tableViewRender(_, defaultDom) {
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(DndContext, {
                children: defaultDom
            });
        },
        dataSource: dataSource,
        components: components,
        onDataSourceChange: onDataSourceChange
    })));
}
var _default = DragSortTable;

},
"node_modules/@ant-design/pro-table/es/components/DragSortTable/style.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "useStyle", {
    enumerable: true,
    get: function() {
        return useStyle;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var genProListStyle = function genProListStyle(token) {
    return (0, _defineProperty.default)({}, token.componentCls, {
        '&-icon': {
            marginInlineEnd: 8,
            color: token.colorTextSecondary,
            cursor: 'grab !important',
            padding: 4,
            fontSize: 12,
            borderRadius: token.borderRadius,
            '&:hover': {
                color: token.colorText,
                backgroundColor: token.colorInfoBg
            }
        }
    });
};
function useStyle(prefixCls) {
    return (0, _proprovider.useStyle)('DragSortTable', function(token) {
        var proListToken = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, token), {}, {
            componentCls: ".".concat(prefixCls)
        });
        return [
            genProListStyle(proListToken)
        ];
    });
}

},
"node_modules/@ant-design/pro-table/es/components/Dropdown/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _objectWithoutProperties = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _icons = __mako_require__("node_modules/@ant-design/pro-table/node_modules/@ant-design/icons/es/index.js");
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _classnames = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/classnames/index.js"));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var _excluded = [
    "key",
    "name"
];
/**
 * 一个简单的下拉菜单
 *
 * @param param0
 */ var DropdownButton = function DropdownButton(_ref) {
    var children = _ref.children, menus = _ref.menus, onSelect = _ref.onSelect, className = _ref.className, style = _ref.style;
    var _useContext = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
    var tempClassName = getPrefixCls('pro-table-dropdown');
    var dropdownProps = (0, _proutils.menuOverlayCompatible)({
        onClick: function onClick(params) {
            return onSelect && onSelect(params.key);
        },
        items: menus === null || menus === void 0 ? void 0 : menus.map(function(item) {
            return {
                label: item.name,
                key: item.key
            };
        })
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Dropdown, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, dropdownProps), {}, {
        className: (0, _classnames.default)(tempClassName, className),
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_antd.Button, {
            style: style,
            children: [
                children,
                " ",
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.DownOutlined, {})
            ]
        })
    }));
};
var TableDropdown = function TableDropdown(_ref2) {
    var propsClassName = _ref2.className, style = _ref2.style, onSelect = _ref2.onSelect, _ref2$menus = _ref2.menus, menus = _ref2$menus === void 0 ? [] : _ref2$menus, children = _ref2.children;
    var _useContext2 = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext), getPrefixCls = _useContext2.getPrefixCls;
    var className = getPrefixCls('pro-table-dropdown');
    var dropdownProps = (0, _proutils.menuOverlayCompatible)({
        onClick: function onClick(params) {
            onSelect === null || onSelect === void 0 || onSelect(params.key);
        },
        items: menus.map(function(_ref3) {
            var key = _ref3.key, name = _ref3.name, rest = (0, _objectWithoutProperties.default)(_ref3, _excluded);
            return (0, _objectSpread2.default)((0, _objectSpread2.default)({
                key: key
            }, rest), {}, {
                title: rest.title,
                label: name
            });
        })
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Dropdown, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, dropdownProps), {}, {
        className: (0, _classnames.default)(className, propsClassName),
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
            style: style,
            children: children || /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.EllipsisOutlined, {})
        })
    }));
};
TableDropdown.Button = DropdownButton;
var _default = TableDropdown;

},
"node_modules/@ant-design/pro-table/es/components/EditableTable/CellEditorTable.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "CellEditorTable", {
    enumerable: true,
    get: function() {
        return CellEditorTable;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _slicedToArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/slicedToArray.js"));
var _react = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/react/index.js"));
var _index = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/EditableTable/index.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
function CellEditorTable(props) {
    var _props$columns;
    var _React$useState = _react.default.useState([]), _React$useState2 = (0, _slicedToArray.default)(_React$useState, 2), editableKeys = _React$useState2[0], setEditableRowKeys = _React$useState2[1];
    var _React$useState3 = _react.default.useState([]), _React$useState4 = (0, _slicedToArray.default)(_React$useState3, 2), dataIndex = _React$useState4[0], setDataIndex = _React$useState4[1];
    var rowKey = props.rowKey || 'id';
    // ============================ RowKey ============================
    var getRowKey = _react.default.useMemo(function() {
        if (typeof rowKey === 'function') return rowKey;
        return function(record, index) {
            var _ref;
            if (index === -1) return record === null || record === void 0 ? void 0 : record[rowKey];
            // 如果 props 中有name 的话，用index 来做行号，这样方便转化为 index
            if (props.name) return index === null || index === void 0 ? void 0 : index.toString();
            return (_ref = record === null || record === void 0 ? void 0 : record[rowKey]) !== null && _ref !== void 0 ? _ref : index === null || index === void 0 ? void 0 : index.toString();
        };
    }, [
        props.name,
        rowKey
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, (0, _objectSpread2.default)((0, _objectSpread2.default)({
        bordered: true,
        pagination: false
    }, props), {}, {
        editable: (0, _objectSpread2.default)({
            editableKeys: editableKeys
        }, props.editable),
        columns: (props === null || props === void 0 || (_props$columns = props.columns) === null || _props$columns === void 0 ? void 0 : _props$columns.map(function(item) {
            return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, item), {}, {
                editable: dataIndex.flat(1).join('.') === [
                    item.dataIndex || item.key
                ].flat(1).join('.') ? undefined : false,
                onCell: function onCell(record, rowIndex) {
                    return {
                        onDoubleClick: function onDoubleClick() {
                            setEditableRowKeys([
                                getRowKey(record, rowIndex)
                            ]);
                            setDataIndex([
                                item.dataIndex || item.key
                            ]);
                        },
                        onBlur: function onBlur() {
                            setEditableRowKeys([]);
                        }
                    };
                }
            });
        })) || []
    }));
}

},
"node_modules/@ant-design/pro-table/es/components/EditableTable/RowEditorTable.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "RowEditorTable", {
    enumerable: true,
    get: function() {
        return RowEditorTable;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _slicedToArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/slicedToArray.js"));
var _react = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/react/index.js"));
var _index = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/EditableTable/index.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
function RowEditorTable(props) {
    var _props$columns;
    var _React$useState = _react.default.useState([]), _React$useState2 = (0, _slicedToArray.default)(_React$useState, 2), editableKeys = _React$useState2[0], setEditableRowKeys = _React$useState2[1];
    var rowKey = props.rowKey || 'id';
    // ============================ RowKey ============================
    var getRowKey = _react.default.useMemo(function() {
        if (typeof rowKey === 'function') return rowKey;
        return function(record, index) {
            var _ref;
            if (index === -1) return record === null || record === void 0 ? void 0 : record[rowKey];
            // 如果 props 中有name 的话，用index 来做行号，这样方便转化为 index
            if (props.name) return index === null || index === void 0 ? void 0 : index.toString();
            return (_ref = record === null || record === void 0 ? void 0 : record[rowKey]) !== null && _ref !== void 0 ? _ref : index === null || index === void 0 ? void 0 : index.toString();
        };
    }, [
        props.name,
        rowKey
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, (0, _objectSpread2.default)((0, _objectSpread2.default)({
        bordered: true,
        pagination: false
    }, props), {}, {
        editable: (0, _objectSpread2.default)({
            editableKeys: editableKeys
        }, props.editable),
        columns: (props === null || props === void 0 || (_props$columns = props.columns) === null || _props$columns === void 0 ? void 0 : _props$columns.map(function(item) {
            return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, item), {}, {
                onCell: function onCell(record, rowIndex) {
                    return {
                        onDoubleClick: function onDoubleClick() {
                            setEditableRowKeys([
                                getRowKey(record, rowIndex)
                            ]);
                        },
                        onBlur: function onBlur() {
                            setEditableRowKeys([]);
                        }
                    };
                }
            });
        })) || []
    }));
}

},
"node_modules/@ant-design/pro-table/es/components/EditableTable/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _slicedToArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/slicedToArray.js"));
var _objectWithoutProperties = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"));
var _regeneratorRuntime = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js"));
var _asyncToGenerator = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _icons = __mako_require__("node_modules/@ant-design/pro-table/node_modules/@ant-design/icons/es/index.js");
var _proform = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/@ant-design/pro-form/es/index.js"));
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _useMergedState = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/rc-util/es/hooks/useMergedState.js"));
var _get = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/rc-util/es/utils/get.js"));
var _set = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/rc-util/es/utils/set.js"));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _Table = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/Table.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var _excluded = [
    "onTableChange",
    "maxLength",
    "formItemProps",
    "recordCreatorProps",
    "rowKey",
    "controlled",
    "defaultValue",
    "onChange",
    "editableFormRef"
];
var _excluded2 = [
    "record",
    "position",
    "creatorButtonText",
    "newRecordType",
    "parentKey",
    "style"
];
var EditableTableActionContext = /*#__PURE__*/ _react.default.createContext(undefined);
/** 可编辑表格的按钮 */ function RecordCreator(props) {
    var children = props.children, record = props.record, position = props.position, newRecordType = props.newRecordType, parentKey = props.parentKey;
    var actionRef = (0, _react.useContext)(EditableTableActionContext);
    return /*#__PURE__*/ _react.default.cloneElement(children, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, children.props), {}, {
        onClick: function() {
            var _onClick = (0, _asyncToGenerator.default)(/*#__PURE__*/ (0, _regeneratorRuntime.default)().mark(function _callee(e) {
                var _children$props$onCli, _children$props, _actionRef$current;
                var isOk;
                return (0, _regeneratorRuntime.default)().wrap(function _callee$(_context) {
                    while(true)switch(_context.prev = _context.next){
                        case 0:
                            _context.next = 2;
                            return (_children$props$onCli = (_children$props = children.props).onClick) === null || _children$props$onCli === void 0 ? void 0 : _children$props$onCli.call(_children$props, e);
                        case 2:
                            isOk = _context.sent;
                            if (!(isOk === false)) {
                                _context.next = 5;
                                break;
                            }
                            return _context.abrupt("return");
                        case 5:
                            actionRef === null || actionRef === void 0 || (_actionRef$current = actionRef.current) === null || _actionRef$current === void 0 || _actionRef$current.addEditRecord(record, {
                                position: position,
                                newRecordType: newRecordType,
                                parentKey: parentKey
                            });
                        case 6:
                        case "end":
                            return _context.stop();
                    }
                }, _callee);
            }));
            function onClick(_x) {
                return _onClick.apply(this, arguments);
            }
            return onClick;
        }()
    }));
}
/**
 * 可以直接放到 Form 中的可编辑表格
 * A React component that is used to create a table.
 * @param props
 */ function EditableTable(props) {
    var _props$editable2, _props$editable4;
    var intl = (0, _proprovider.useIntl)();
    var onTableChange = props.onTableChange, maxLength = props.maxLength, formItemProps = props.formItemProps, recordCreatorProps = props.recordCreatorProps, rowKey = props.rowKey, controlled = props.controlled, defaultValue = props.defaultValue, onChange = props.onChange, editableFormRef = props.editableFormRef, rest = (0, _objectWithoutProperties.default)(props, _excluded);
    var preData = (0, _react.useRef)(undefined);
    var actionRef = (0, _react.useRef)();
    var formRef = (0, _react.useRef)();
    // 设置 ref
    (0, _react.useImperativeHandle)(rest.actionRef, function() {
        return actionRef.current;
    }, [
        actionRef.current
    ]);
    var _useMergedState1 = (0, _useMergedState.default)(function() {
        return props.value || defaultValue || [];
    }, {
        value: props.value,
        onChange: props.onChange
    }), _useMergedState2 = (0, _slicedToArray.default)(_useMergedState1, 2), value = _useMergedState2[0], setValue = _useMergedState2[1];
    var getRowKey = _react.default.useMemo(function() {
        if (typeof rowKey === 'function') return rowKey;
        return function(record, index) {
            return record[rowKey] || index;
        };
    }, [
        rowKey
    ]);
    /**
   * 根据不同的情况返回不同的 rowKey
   * @param finlayRowKey
   * @returns string | number
   */ var coverRowKey = (0, _proutils.useRefFunction)(function(finlayRowKey) {
        /**
     * 如果是 prop.name 的模式，就需要把行号转化成具体的rowKey。
     */ if (typeof finlayRowKey === 'number' && !props.name) {
            if (finlayRowKey >= value.length) return finlayRowKey;
            var rowData = value && value[finlayRowKey];
            return getRowKey === null || getRowKey === void 0 ? void 0 : getRowKey(rowData, finlayRowKey);
        }
        /**
     * 如果是 prop.name 的模式，就直接返回行号
     */ if ((typeof finlayRowKey === 'string' || finlayRowKey >= value.length) && props.name) {
            var _rowIndex = value.findIndex(function(item, index) {
                var _getRowKey;
                return (getRowKey === null || getRowKey === void 0 || (_getRowKey = getRowKey(item, index)) === null || _getRowKey === void 0 ? void 0 : _getRowKey.toString()) === (finlayRowKey === null || finlayRowKey === void 0 ? void 0 : finlayRowKey.toString());
            });
            if (_rowIndex !== -1) return _rowIndex;
        }
        return finlayRowKey;
    });
    // 设置 editableFormRef
    (0, _react.useImperativeHandle)(editableFormRef, function() {
        /**
     * 获取一行数据的
     * @param rowIndex
     * @returns T | undefined
     */ var getRowData = function getRowData(rowIndex) {
            var _finlayRowKey$toStrin, _formRef$current;
            if (rowIndex == undefined) throw new Error('rowIndex is required');
            var finlayRowKey = coverRowKey(rowIndex);
            var rowKeyName = [
                props.name,
                (_finlayRowKey$toStrin = finlayRowKey === null || finlayRowKey === void 0 ? void 0 : finlayRowKey.toString()) !== null && _finlayRowKey$toStrin !== void 0 ? _finlayRowKey$toStrin : ''
            ].flat(1).filter(Boolean);
            return (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.getFieldValue(rowKeyName);
        };
        /**
     * 获取整个 table 的数据
     * @returns T[] | undefined
     */ var getRowsData = function getRowsData() {
            var _formRef$current3;
            var rowKeyName = [
                props.name
            ].flat(1).filter(Boolean);
            if (Array.isArray(rowKeyName) && rowKeyName.length === 0) {
                var _formRef$current2;
                var rowData = (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.getFieldsValue();
                if (Array.isArray(rowData)) return rowData;
                return Object.keys(rowData).map(function(key) {
                    return rowData[key];
                });
            }
            return (_formRef$current3 = formRef.current) === null || _formRef$current3 === void 0 ? void 0 : _formRef$current3.getFieldValue(rowKeyName);
        };
        return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, formRef.current), {}, {
            getRowData: getRowData,
            getRowsData: getRowsData,
            /**
       * 设置一行的数据，会将数据进行简单的 merge
       * @param rowIndex
       * @param data
       * @returns void
       */ setRowData: function setRowData(rowIndex, data) {
                var _finlayRowKey$toStrin2, _formRef$current4;
                if (rowIndex == undefined) throw new Error('rowIndex is required');
                var finlayRowKey = coverRowKey(rowIndex);
                var rowKeyName = [
                    props.name,
                    (_finlayRowKey$toStrin2 = finlayRowKey === null || finlayRowKey === void 0 ? void 0 : finlayRowKey.toString()) !== null && _finlayRowKey$toStrin2 !== void 0 ? _finlayRowKey$toStrin2 : ''
                ].flat(1).filter(Boolean);
                var newRowData = Object.assign({}, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, getRowData(rowIndex)), data || {}));
                var updateValues = (0, _set.default)({}, rowKeyName, newRowData);
                (_formRef$current4 = formRef.current) === null || _formRef$current4 === void 0 || _formRef$current4.setFieldsValue(updateValues);
                return true;
            }
        });
    }, [
        coverRowKey,
        props.name,
        formRef.current
    ]);
    (0, _react.useEffect)(function() {
        if (!props.controlled) return;
        (value || []).forEach(function(current, index) {
            var _formRef$current5;
            (_formRef$current5 = formRef.current) === null || _formRef$current5 === void 0 || _formRef$current5.setFieldsValue((0, _defineProperty.default)({}, "".concat(getRowKey(current, index)), current));
        }, {});
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        (0, _proutils.stringify)(value),
        props.controlled
    ]);
    (0, _react.useEffect)(function() {
        if (props.name) {
            var _props$editable;
            formRef.current = props === null || props === void 0 || (_props$editable = props.editable) === null || _props$editable === void 0 ? void 0 : _props$editable.form;
        }
    }, [
        (_props$editable2 = props.editable) === null || _props$editable2 === void 0 ? void 0 : _props$editable2.form,
        props.name
    ]);
    var _ref = recordCreatorProps || {}, record = _ref.record, position = _ref.position, creatorButtonText = _ref.creatorButtonText, newRecordType = _ref.newRecordType, parentKey = _ref.parentKey, style = _ref.style, restButtonProps = (0, _objectWithoutProperties.default)(_ref, _excluded2);
    var isTop = position === 'top';
    var creatorButtonDom = (0, _react.useMemo)(function() {
        if (typeof maxLength === 'number' && maxLength <= (value === null || value === void 0 ? void 0 : value.length)) return false;
        return recordCreatorProps !== false && /*#__PURE__*/ (0, _jsxruntime.jsx)(RecordCreator, {
            record: (0, _proutils.runFunction)(record, value === null || value === void 0 ? void 0 : value.length, value) || {},
            position: position,
            parentKey: (0, _proutils.runFunction)(parentKey, value === null || value === void 0 ? void 0 : value.length, value),
            newRecordType: newRecordType,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Button, (0, _objectSpread2.default)((0, _objectSpread2.default)({
                type: "dashed",
                style: (0, _objectSpread2.default)({
                    display: 'block',
                    margin: '10px 0',
                    width: '100%'
                }, style),
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.PlusOutlined, {})
            }, restButtonProps), {}, {
                children: creatorButtonText || intl.getMessage('editableTable.action.add', '添加一行数据')
            }))
        });
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        recordCreatorProps,
        maxLength,
        value === null || value === void 0 ? void 0 : value.length
    ]);
    var buttonRenderProps = (0, _react.useMemo)(function() {
        if (!creatorButtonDom) return {};
        if (isTop) return {
            components: {
                header: {
                    wrapper: function wrapper(_ref2) {
                        var _rest$columns;
                        var className = _ref2.className, children = _ref2.children;
                        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("thead", {
                            className: className,
                            children: [
                                children,
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("tr", {
                                    style: {
                                        position: 'relative'
                                    },
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("td", {
                                            colSpan: 0,
                                            style: {
                                                visibility: 'hidden'
                                            },
                                            children: creatorButtonDom
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("td", {
                                            style: {
                                                position: 'absolute',
                                                left: 0,
                                                width: '100%'
                                            },
                                            colSpan: (_rest$columns = rest.columns) === null || _rest$columns === void 0 ? void 0 : _rest$columns.length,
                                            children: creatorButtonDom
                                        })
                                    ]
                                })
                            ]
                        });
                    }
                }
            }
        };
        return {
            tableViewRender: function tableViewRender(_, dom) {
                var _props$tableViewRende, _props$tableViewRende2;
                return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                    children: [
                        (_props$tableViewRende = (_props$tableViewRende2 = props.tableViewRender) === null || _props$tableViewRende2 === void 0 ? void 0 : _props$tableViewRende2.call(props, _, dom)) !== null && _props$tableViewRende !== void 0 ? _props$tableViewRende : dom,
                        creatorButtonDom
                    ]
                });
            }
        };
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        isTop,
        creatorButtonDom
    ]);
    var editableProps = (0, _objectSpread2.default)({}, props.editable);
    /**
   * 防止闭包的onchange
   *
   * >>>>>>为了性能好辛苦
   */ var newOnValueChange = (0, _proutils.useRefFunction)(function(r, dataSource) {
        var _props$editable3, _props$editable3$onVa, _props$onValuesChange;
        (_props$editable3 = props.editable) === null || _props$editable3 === void 0 || (_props$editable3$onVa = _props$editable3.onValuesChange) === null || _props$editable3$onVa === void 0 || _props$editable3$onVa.call(_props$editable3, r, dataSource);
        (_props$onValuesChange = props.onValuesChange) === null || _props$onValuesChange === void 0 || _props$onValuesChange.call(props, dataSource, r);
        if (props.controlled) {
            var _props$onChange;
            props === null || props === void 0 || (_props$onChange = props.onChange) === null || _props$onChange === void 0 || _props$onChange.call(props, dataSource);
        }
    });
    if (props !== null && props !== void 0 && props.onValuesChange || (_props$editable4 = props.editable) !== null && _props$editable4 !== void 0 && _props$editable4.onValuesChange || // 受控模式需要触发 onchange
    props.controlled && props !== null && props !== void 0 && props.onChange) editableProps.onValuesChange = newOnValueChange;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(EditableTableActionContext.Provider, {
                value: actionRef,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Table.default, (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({
                    search: false,
                    options: false,
                    pagination: false,
                    rowKey: rowKey,
                    revalidateOnFocus: false
                }, rest), buttonRenderProps), {}, {
                    tableLayout: "fixed",
                    actionRef: actionRef,
                    onChange: onTableChange,
                    editable: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, editableProps), {}, {
                        formProps: (0, _objectSpread2.default)({
                            formRef: formRef
                        }, editableProps.formProps)
                    }),
                    dataSource: value,
                    onDataSourceChange: function onDataSourceChange(dataSource) {
                        setValue(dataSource);
                        /**
           * 如果是top，需要重新设置一下 form，不然会导致 id 相同数据混淆
           */ if (props.name && position === 'top') {
                            var _formRef$current6;
                            var newValue = (0, _set.default)({}, [
                                props.name
                            ].flat(1).filter(Boolean), dataSource);
                            (_formRef$current6 = formRef.current) === null || _formRef$current6 === void 0 || _formRef$current6.setFieldsValue(newValue);
                        }
                    }
                }))
            }),
            props.name ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_proform.ProFormDependency, {
                name: [
                    props.name
                ],
                children: function children(changeValue) {
                    var _props$editable5, _props$editable5$onVa;
                    if (!preData.current) {
                        preData.current = value;
                        return null;
                    }
                    var list = (0, _get.default)(changeValue, [
                        props.name
                    ].flat(1));
                    var changeItem = list === null || list === void 0 ? void 0 : list.find(function(item, index) {
                        var _preData$current;
                        return !(0, _proutils.isDeepEqualReact)(item, (_preData$current = preData.current) === null || _preData$current === void 0 ? void 0 : _preData$current[index]);
                    });
                    preData.current = value;
                    if (!changeItem) return null;
                    // 如果不存在 preData 说明是初始化，此时不需要触发 onValuesChange
                    props === null || props === void 0 || (_props$editable5 = props.editable) === null || _props$editable5 === void 0 || (_props$editable5$onVa = _props$editable5.onValuesChange) === null || _props$editable5$onVa === void 0 || _props$editable5$onVa.call(_props$editable5, changeItem, list);
                    return null;
                }
            }) : null
        ]
    });
}
/**
 * 可以直接放到 Form 中的可编辑表格
 * A React component that is used to create a table.
 * @param props
 */ function FieldEditableTable(props) {
    var form = _proform.default.useFormInstance();
    if (!props.name) return /*#__PURE__*/ (0, _jsxruntime.jsx)(EditableTable, (0, _objectSpread2.default)({
        tableLayout: "fixed",
        scroll: {
            x: 'max-content'
        }
    }, props));
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Form.Item, (0, _objectSpread2.default)((0, _objectSpread2.default)({
        style: {
            maxWidth: '100%'
        },
        shouldUpdate: function shouldUpdate(prev, next) {
            var name = [
                props.name
            ].flat(1);
            try {
                return JSON.stringify((0, _get.default)(prev, name)) !== JSON.stringify((0, _get.default)(next, name));
            } catch (error) {
                return true;
            }
        }
    }, props === null || props === void 0 ? void 0 : props.formItemProps), {}, {
        name: props.name,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(EditableTable, (0, _objectSpread2.default)((0, _objectSpread2.default)({
            tableLayout: "fixed",
            scroll: {
                x: 'max-content'
            }
        }, props), {}, {
            editable: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, props.editable), {}, {
                form: form
            })
        }))
    }));
}
FieldEditableTable.RecordCreator = RecordCreator;
var _default = FieldEditableTable;

},
"node_modules/@ant-design/pro-table/es/components/Form/FormRender.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _typeof = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/typeof.js"));
var _regeneratorRuntime = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js"));
var _asyncToGenerator = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _proform = __mako_require__("node_modules/@ant-design/pro-form/es/index.js");
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _classnames = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/classnames/index.js"));
var _omit = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/rc-util/es/omit.js"));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
function toLowerLine(str) {
    var temp = str.replace(/[A-Z]/g, function(match) {
        return "-".concat(match.toLowerCase());
    });
    if (temp.startsWith('-')) // 如果首字母是大写，执行replace时会多一个_，这里需要去掉
    temp = temp.slice(1);
    return temp;
}
/**
 * 获取当前选择的 Form Layout 配置
 *
 * @param isForm
 * @param searchConfig
 * @returns LightFilter | QueryFilter | ProForm
 */ var getFormCompetent = function getFormCompetent(isForm, searchConfig) {
    if (!isForm && searchConfig !== false) {
        if ((searchConfig === null || searchConfig === void 0 ? void 0 : searchConfig.filterType) === 'light') return 'LightFilter';
        return 'QueryFilter';
    }
    return 'Form';
};
/**
 * 获取需要传给相应表单的props
 *
 * @param searchConfig
 * @param name
 */ var getFromProps = function getFromProps(isForm, searchConfig, name) {
    if (!isForm && name === 'LightFilter') // 传给 lightFilter 的问题
    return (0, _omit.default)((0, _objectSpread2.default)({}, searchConfig), [
        'labelWidth',
        'defaultCollapsed',
        'filterType'
    ]);
    if (!isForm) // 传给 QueryFilter 的配置
    return (0, _omit.default)((0, _objectSpread2.default)({
        labelWidth: searchConfig ? searchConfig === null || searchConfig === void 0 ? void 0 : searchConfig.labelWidth : undefined,
        defaultCollapsed: true
    }, searchConfig), [
        'filterType'
    ]);
    return {};
};
/**
 * 从formConfig中获取传给相应表单的配置
 *
 * @param isForm
 * @param formConfig
 */ var getFormConfigs = function getFormConfigs(isForm, formConfig) {
    if (isForm) // 传给Form的配置
    return (0, _omit.default)(formConfig, [
        'ignoreRules'
    ]);
    // 传给Filter的配置
    return (0, _objectSpread2.default)({
        ignoreRules: true
    }, formConfig);
};
/**
 * 这里会把 列配置转化为 form 表单
 *
 * @param param0
 * @returns
 */ var FormRender = function FormRender(_ref) {
    var onSubmit = _ref.onSubmit, formRef = _ref.formRef, _ref$dateFormatter = _ref.dateFormatter, dateFormatter = _ref$dateFormatter === void 0 ? 'string' : _ref$dateFormatter, type = _ref.type, columns = _ref.columns, action = _ref.action, ghost = _ref.ghost, manualRequest = _ref.manualRequest, _onReset = _ref.onReset, submitButtonLoading = _ref.submitButtonLoading, searchConfig = _ref.search, formConfig = _ref.form, bordered = _ref.bordered;
    var _useContext = (0, _react.useContext)(_proprovider.ProProvider), hashId = _useContext.hashId;
    var isForm = type === 'form';
    /** 提交表单，根据两种模式不同，方法不相同 */ var submit = /*#__PURE__*/ function() {
        var _ref2 = (0, _asyncToGenerator.default)(/*#__PURE__*/ (0, _regeneratorRuntime.default)().mark(function _callee(values, firstLoad) {
            return (0, _regeneratorRuntime.default)().wrap(function _callee$(_context) {
                while(true)switch(_context.prev = _context.next){
                    case 0:
                        if (onSubmit) onSubmit(values, firstLoad);
                    case 1:
                    case "end":
                        return _context.stop();
                }
            }, _callee);
        }));
        return function submit(_x, _x2) {
            return _ref2.apply(this, arguments);
        };
    }();
    var _useContext2 = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext), getPrefixCls = _useContext2.getPrefixCls;
    var columnsList = (0, _react.useMemo)(function() {
        return columns.filter(function(item) {
            if (item === _antd.Table.EXPAND_COLUMN || item === _antd.Table.SELECTION_COLUMN) return false;
            if ((item.hideInSearch || item.search === false) && type !== 'form') return false;
            if (type === 'form' && item.hideInForm) return false;
            return true;
        }).map(function(item) {
            var _item$dataIndex;
            var finalValueType = !item.valueType || [
                'textarea',
                'jsonCode',
                'code'
            ].includes(item === null || item === void 0 ? void 0 : item.valueType) && type === 'table' ? 'text' : item === null || item === void 0 ? void 0 : item.valueType;
            var columnKey = (item === null || item === void 0 ? void 0 : item.key) || (item === null || item === void 0 || (_item$dataIndex = item.dataIndex) === null || _item$dataIndex === void 0 ? void 0 : _item$dataIndex.toString());
            return (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, item), {}, {
                width: undefined
            }, item.search && (0, _typeof.default)(item.search) === 'object' ? item.search : {}), {}, {
                valueType: finalValueType,
                proFieldProps: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, item.proFieldProps), {}, {
                    proFieldKey: columnKey ? "table-field-".concat(columnKey) : undefined
                })
            });
        });
    }, [
        columns,
        type
    ]);
    var className = getPrefixCls('pro-table-search');
    var formClassName = getPrefixCls('pro-table-form');
    var competentName = (0, _react.useMemo)(function() {
        return getFormCompetent(isForm, searchConfig);
    }, [
        searchConfig,
        isForm
    ]);
    // 传给每个表单的配置，理论上大家都需要
    var loadingProps = (0, _react.useMemo)(function() {
        return {
            submitter: {
                submitButtonProps: {
                    loading: submitButtonLoading
                }
            }
        };
    }, [
        submitButtonLoading
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: (0, _classnames.default)(hashId, (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({}, getPrefixCls('pro-card'), true), "".concat(getPrefixCls('pro-card'), "-border"), !!bordered), "".concat(getPrefixCls('pro-card'), "-bordered"), !!bordered), "".concat(getPrefixCls('pro-card'), "-ghost"), !!ghost), className, true), formClassName, isForm), getPrefixCls("pro-table-search-".concat(toLowerLine(competentName))), true), "".concat(className, "-ghost"), ghost), searchConfig === null || searchConfig === void 0 ? void 0 : searchConfig.className, searchConfig !== false && (searchConfig === null || searchConfig === void 0 ? void 0 : searchConfig.className))),
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_proform.BetaSchemaForm, (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({
            layoutType: competentName,
            columns: columnsList,
            type: type
        }, loadingProps), getFromProps(isForm, searchConfig, competentName)), getFormConfigs(isForm, formConfig || {})), {}, {
            formRef: formRef,
            action: action,
            dateFormatter: dateFormatter,
            onInit: function onInit(values, form) {
                formRef.current = form;
                // 触发一个 submit，之所以这里触发是为了保证 value 都被 format了
                if (type !== 'form') {
                    var _action$current, _action$current2, _action$current2$setP;
                    // 修改 pageSize，变成从 url 中获取的
                    var pageInfo = (_action$current = action.current) === null || _action$current === void 0 ? void 0 : _action$current.pageInfo;
                    // 从 values 里获取是因为有时候要从 url中获取的 pageSize。
                    var _ref3 = values, _ref3$current = _ref3.current, current = _ref3$current === void 0 ? pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.current : _ref3$current, _ref3$pageSize = _ref3.pageSize, pageSize = _ref3$pageSize === void 0 ? pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.pageSize : _ref3$pageSize;
                    (_action$current2 = action.current) === null || _action$current2 === void 0 || (_action$current2$setP = _action$current2.setPageInfo) === null || _action$current2$setP === void 0 || _action$current2$setP.call(_action$current2, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, pageInfo), {}, {
                        current: parseInt(current, 10),
                        pageSize: parseInt(pageSize, 10)
                    }));
                    /** 如果是手动模式不需要提交 */ if (manualRequest) return;
                    submit(values, true);
                }
            },
            onReset: function onReset(values) {
                _onReset === null || _onReset === void 0 || _onReset(values);
            },
            onFinish: function onFinish(values) {
                submit(values, false);
            },
            initialValues: formConfig === null || formConfig === void 0 ? void 0 : formConfig.initialValues
        }))
    });
};
var _default = FormRender;

},
"node_modules/@ant-design/pro-table/es/components/Form/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _createClass = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/createClass.js"));
var _classCallCheck = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/classCallCheck.js"));
var _assertThisInitialized = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"));
var _inherits = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/inherits.js"));
var _createSuper = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/createSuper.js"));
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _omit = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/rc-util/es/omit.js"));
var _react = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/react/index.js"));
var _index = __mako_require__("node_modules/@ant-design/pro-table/es/utils/index.js");
var _FormRender = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/Form/FormRender.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var FormSearch = /*#__PURE__*/ function(_React$Component) {
    (0, _inherits.default)(FormSearch, _React$Component);
    var _super = (0, _createSuper.default)(FormSearch);
    function FormSearch() {
        var _this;
        (0, _classCallCheck.default)(this, FormSearch);
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _super.call.apply(_super, [
            this
        ].concat(args));
        /** 查询表单相关的配置 */ (0, _defineProperty.default)((0, _assertThisInitialized.default)(_this), "onSubmit", function(value, firstLoad) {
            var _this$props = _this.props, pagination = _this$props.pagination, _this$props$beforeSea = _this$props.beforeSearchSubmit, beforeSearchSubmit = _this$props$beforeSea === void 0 ? function(searchParams) {
                return searchParams;
            } : _this$props$beforeSea, action = _this$props.action, onSubmit = _this$props.onSubmit, onFormSearchSubmit = _this$props.onFormSearchSubmit;
            // 只传入 pagination 中的 current 和 pageSize 参数
            var pageInfo = pagination ? (0, _proutils.omitUndefined)({
                current: pagination.current,
                pageSize: pagination.pageSize
            }) : {};
            var submitParams = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, value), {}, {
                _timestamp: Date.now()
            }, pageInfo);
            var omitParams = (0, _omit.default)(beforeSearchSubmit(submitParams), Object.keys(pageInfo));
            onFormSearchSubmit(omitParams);
            if (!firstLoad) {
                var _action$current, _action$current$setPa;
                // back first page
                (_action$current = action.current) === null || _action$current === void 0 || (_action$current$setPa = _action$current.setPageInfo) === null || _action$current$setPa === void 0 || _action$current$setPa.call(_action$current, {
                    current: 1
                });
            }
            // 不是第一次提交就不触发，第一次提交是 js 触发的
            // 为了解决 https://github.com/ant-design/pro-components/issues/579
            if (onSubmit && !firstLoad) onSubmit === null || onSubmit === void 0 || onSubmit(value);
        });
        (0, _defineProperty.default)((0, _assertThisInitialized.default)(_this), "onReset", function(value) {
            var _action$current2, _action$current2$setP;
            var _this$props2 = _this.props, pagination = _this$props2.pagination, _this$props2$beforeSe = _this$props2.beforeSearchSubmit, beforeSearchSubmit = _this$props2$beforeSe === void 0 ? function(searchParams) {
                return searchParams;
            } : _this$props2$beforeSe, action = _this$props2.action, onFormSearchSubmit = _this$props2.onFormSearchSubmit, onReset = _this$props2.onReset;
            var pageInfo = pagination ? (0, _proutils.omitUndefined)({
                current: pagination.current,
                pageSize: pagination.pageSize
            }) : {};
            var omitParams = (0, _omit.default)(beforeSearchSubmit((0, _objectSpread2.default)((0, _objectSpread2.default)({}, value), pageInfo)), Object.keys(pageInfo));
            onFormSearchSubmit(omitParams);
            // back first page
            (_action$current2 = action.current) === null || _action$current2 === void 0 || (_action$current2$setP = _action$current2.setPageInfo) === null || _action$current2$setP === void 0 || _action$current2$setP.call(_action$current2, {
                current: 1
            });
            onReset === null || onReset === void 0 || onReset();
        });
        /**
     * 只 Diff 需要用的 props，能减少 5 次左右的render
     *
     * @param next
     * @see 因为 hooks 每次的 setFormSearch 都是新的，所以每次都触发 render
     * @see action 也是同样的原因
     * @returns
     */ (0, _defineProperty.default)((0, _assertThisInitialized.default)(_this), "isEqual", function(next) {
            var _this$props3 = _this.props, columns = _this$props3.columns, loading = _this$props3.loading, formRef = _this$props3.formRef, type = _this$props3.type, cardBordered = _this$props3.cardBordered, dateFormatter = _this$props3.dateFormatter, form = _this$props3.form, search = _this$props3.search, manualRequest = _this$props3.manualRequest;
            var diffProps = {
                columns: columns,
                loading: loading,
                formRef: formRef,
                type: type,
                cardBordered: cardBordered,
                dateFormatter: dateFormatter,
                form: form,
                search: search,
                manualRequest: manualRequest
            };
            return !(0, _proutils.isDeepEqualReact)(diffProps, {
                columns: next.columns,
                formRef: next.formRef,
                loading: next.loading,
                type: next.type,
                cardBordered: next.cardBordered,
                dateFormatter: next.dateFormatter,
                form: next.form,
                search: next.search,
                manualRequest: next.manualRequest
            });
        });
        (0, _defineProperty.default)((0, _assertThisInitialized.default)(_this), "shouldComponentUpdate", function(next) {
            return _this.isEqual(next);
        });
        (0, _defineProperty.default)((0, _assertThisInitialized.default)(_this), "render", function() {
            var _this$props4 = _this.props, columns = _this$props4.columns, loading = _this$props4.loading, formRef = _this$props4.formRef, type = _this$props4.type, action = _this$props4.action, cardBordered = _this$props4.cardBordered, dateFormatter = _this$props4.dateFormatter, form = _this$props4.form, search = _this$props4.search, pagination = _this$props4.pagination, ghost = _this$props4.ghost, manualRequest = _this$props4.manualRequest;
            var pageInfo = pagination ? (0, _proutils.omitUndefined)({
                current: pagination.current,
                pageSize: pagination.pageSize
            }) : {};
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_FormRender.default, {
                submitButtonLoading: loading,
                columns: columns,
                type: type,
                ghost: ghost,
                formRef: formRef,
                onSubmit: _this.onSubmit,
                manualRequest: manualRequest,
                onReset: _this.onReset,
                dateFormatter: dateFormatter,
                search: search,
                form: (0, _objectSpread2.default)((0, _objectSpread2.default)({
                    autoFocusFirstInput: false
                }, form), {}, {
                    extraUrlParams: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, pageInfo), form === null || form === void 0 ? void 0 : form.extraUrlParams)
                }),
                action: action,
                bordered: (0, _index.isBordered)('search', cardBordered)
            });
        });
        return _this;
    }
    return (0, _createClass.default)(FormSearch);
}(_react.default.Component);
var _default = FormSearch;

},
"node_modules/@ant-design/pro-table/es/components/ListToolBar/HeaderMenu.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _slicedToArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/slicedToArray.js"));
var _icons = __mako_require__("node_modules/@ant-design/pro-table/node_modules/@ant-design/icons/es/index.js");
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _classnames = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/classnames/index.js"));
var _useMergedState = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/rc-util/es/hooks/useMergedState.js"));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var HeaderMenu = function HeaderMenu(props) {
    var _useContext = (0, _react.useContext)(_proprovider.ProProvider), hashId = _useContext.hashId;
    var _props$items = props.items, items = _props$items === void 0 ? [] : _props$items, _props$type = props.type, type = _props$type === void 0 ? 'inline' : _props$type, prefixCls = props.prefixCls, propActiveKey = props.activeKey, defaultActiveKey = props.defaultActiveKey;
    var _useMergedState1 = (0, _useMergedState.default)(propActiveKey || defaultActiveKey, {
        value: propActiveKey,
        onChange: props.onChange
    }), _useMergedState2 = (0, _slicedToArray.default)(_useMergedState1, 2), activeKey = _useMergedState2[0], setActiveKey = _useMergedState2[1];
    if (items.length < 1) return null;
    var activeItem = items.find(function(item) {
        return item.key === activeKey;
    }) || items[0];
    if (type === 'inline') return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: (0, _classnames.default)("".concat(prefixCls, "-menu"), "".concat(prefixCls, "-inline-menu"), hashId),
        children: items.map(function(item, index) {
            return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                onClick: function onClick() {
                    setActiveKey(item.key);
                },
                className: (0, _classnames.default)("".concat(prefixCls, "-inline-menu-item"), activeItem.key === item.key ? "".concat(prefixCls, "-inline-menu-item-active") : undefined, hashId),
                children: item.label
            }, item.key || index);
        })
    });
    if (type === 'tab') return /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Tabs, {
        items: items.map(function(item) {
            var _item$key;
            return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, item), {}, {
                key: (_item$key = item.key) === null || _item$key === void 0 ? void 0 : _item$key.toString()
            });
        }),
        activeKey: activeItem.key,
        onTabClick: function onTabClick(key) {
            return setActiveKey(key);
        },
        children: (0, _proutils.compareVersions)(_antd.version, '4.23.0') < 0 ? items === null || items === void 0 ? void 0 : items.map(function(item, index) {
            /* 如果版本低于 4.23.0，不支持 items */ return /*#__PURE__*/ (0, _react.createElement)(_antd.Tabs.TabPane, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, item), {}, {
                key: item.key || index,
                tab: item.label
            }));
        }) : null
    });
    var dropdownProps = (0, _proutils.menuOverlayCompatible)({
        selectedKeys: [
            activeItem.key
        ],
        onClick: function onClick(item) {
            setActiveKey(item.key);
        },
        items: items.map(function(item, index) {
            return {
                key: item.key || index,
                disabled: item.disabled,
                label: item.label
            };
        })
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: (0, _classnames.default)("".concat(prefixCls, "-menu"), "".concat(prefixCls, "-dropdownmenu")),
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Dropdown, (0, _objectSpread2.default)((0, _objectSpread2.default)({
            trigger: [
                'click'
            ]
        }, dropdownProps), {}, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_antd.Space, {
                className: "".concat(prefixCls, "-dropdownmenu-label"),
                children: [
                    activeItem.label,
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.DownOutlined, {})
                ]
            })
        }))
    });
};
var _default = HeaderMenu;

},
"node_modules/@ant-design/pro-table/es/components/ListToolBar/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _regeneratorRuntime = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js"));
var _asyncToGenerator = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"));
var _slicedToArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/slicedToArray.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _classnames = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/classnames/index.js"));
var _rcresizeobserver = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/rc-resize-observer/es/index.js"));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _HeaderMenu = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/ListToolBar/HeaderMenu.js"));
var _style = __mako_require__("node_modules/@ant-design/pro-table/es/components/ListToolBar/style.js");
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
/**
 * 获取配置区域 DOM Item
 *
 * @param setting 配置项
 */ function getSettingItem(setting) {
    if (/*#__PURE__*/ _react.default.isValidElement(setting)) return setting;
    if (setting) {
        var settingConfig = setting;
        var icon = settingConfig.icon, tooltip = settingConfig.tooltip, _onClick = settingConfig.onClick, _key = settingConfig.key;
        if (icon && tooltip) return /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Tooltip, {
            title: tooltip,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                onClick: function onClick() {
                    if (_onClick) _onClick(_key);
                },
                children: icon
            }, _key)
        });
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
            onClick: function onClick() {
                if (_onClick) _onClick(_key);
            },
            children: icon
        }, _key);
    }
    return null;
}
var ListToolBarTabBar = function ListToolBarTabBar(_ref) {
    var _tabs$items;
    var prefixCls = _ref.prefixCls, tabs = _ref.tabs, multipleLine = _ref.multipleLine, filtersNode = _ref.filtersNode;
    if (!multipleLine) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: "".concat(prefixCls, "-extra-line"),
        children: tabs !== null && tabs !== void 0 && tabs.items && tabs !== null && tabs !== void 0 && tabs.items.length ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Tabs, {
            style: {
                width: '100%'
            },
            defaultActiveKey: tabs.defaultActiveKey,
            activeKey: tabs.activeKey,
            items: tabs.items.map(function(item, index) {
                var _item$key;
                return (0, _objectSpread2.default)((0, _objectSpread2.default)({
                    label: item.tab
                }, item), {}, {
                    key: ((_item$key = item.key) === null || _item$key === void 0 ? void 0 : _item$key.toString()) || (index === null || index === void 0 ? void 0 : index.toString())
                });
            }),
            onChange: tabs.onChange,
            tabBarExtraContent: filtersNode,
            children: (_tabs$items = tabs.items) === null || _tabs$items === void 0 ? void 0 : _tabs$items.map(function(item, index) {
                return (0, _proutils.compareVersions)(_antd.version, '4.23.0') < 0 ? /*#__PURE__*/ (0, _react.createElement)(_antd.Tabs.TabPane, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, item), {}, {
                    key: item.key || index,
                    tab: item.tab
                })) : null;
            })
        }) : filtersNode
    });
};
var ListToolBar = function ListToolBar(_ref2) {
    var customizePrefixCls = _ref2.prefixCls, title = _ref2.title, subTitle = _ref2.subTitle, tooltip = _ref2.tooltip, className = _ref2.className, style = _ref2.style, search = _ref2.search, onSearch = _ref2.onSearch, _ref2$multipleLine = _ref2.multipleLine, multipleLine = _ref2$multipleLine === void 0 ? false : _ref2$multipleLine, filter = _ref2.filter, _ref2$actions = _ref2.actions, actions = _ref2$actions === void 0 ? [] : _ref2$actions, _ref2$settings = _ref2.settings, settings = _ref2$settings === void 0 ? [] : _ref2$settings, tabs = _ref2.tabs, menu = _ref2.menu;
    var _useContext = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
    var _proTheme$useToken = _proprovider.proTheme.useToken(), token = _proTheme$useToken.token;
    var prefixCls = getPrefixCls('pro-table-list-toolbar', customizePrefixCls);
    var _useStyle = (0, _style.useStyle)(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
    var intl = (0, _proprovider.useIntl)();
    var _useState = (0, _react.useState)(false), _useState2 = (0, _slicedToArray.default)(_useState, 2), isMobile = _useState2[0], setIsMobile = _useState2[1];
    var placeholder = intl.getMessage('tableForm.inputPlaceholder', '请输入');
    /**
   * 获取搜索栏 DOM
   *
   * @param search 搜索框相关配置
   */ var searchNode = (0, _react.useMemo)(function() {
        if (!search) return null;
        if (/*#__PURE__*/ _react.default.isValidElement(search)) return search;
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Input.Search, (0, _objectSpread2.default)((0, _objectSpread2.default)({
            style: {
                width: 200
            },
            placeholder: placeholder
        }, search), {}, {
            onSearch: /*#__PURE__*/ (0, _asyncToGenerator.default)(/*#__PURE__*/ (0, _regeneratorRuntime.default)().mark(function _callee() {
                var _onSearch, _ref4;
                var _len, restParams, _key2, success, _args = arguments;
                return (0, _regeneratorRuntime.default)().wrap(function _callee$(_context) {
                    while(true)switch(_context.prev = _context.next){
                        case 0:
                            for(_len = _args.length, restParams = new Array(_len), _key2 = 0; _key2 < _len; _key2++)restParams[_key2] = _args[_key2];
                            _context.next = 3;
                            return (_onSearch = (_ref4 = search).onSearch) === null || _onSearch === void 0 ? void 0 : _onSearch.call.apply(_onSearch, [
                                _ref4
                            ].concat(restParams));
                        case 3:
                            success = _context.sent;
                            if (success !== false) onSearch === null || onSearch === void 0 || onSearch(restParams === null || restParams === void 0 ? void 0 : restParams[0]);
                        case 5:
                        case "end":
                            return _context.stop();
                    }
                }, _callee);
            }))
        }));
    }, [
        placeholder,
        onSearch,
        search
    ]);
    /** 轻量筛选组件 */ var filtersNode = (0, _react.useMemo)(function() {
        if (filter) return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "".concat(prefixCls, "-filter ").concat(hashId).trim(),
            children: filter
        });
        return null;
    }, [
        filter,
        hashId,
        prefixCls
    ]);
    /** 有没有 title，需要结合多个场景判断 */ var hasTitle = (0, _react.useMemo)(function() {
        return menu || title || subTitle || tooltip;
    }, [
        menu,
        subTitle,
        title,
        tooltip
    ]);
    /** 没有 key 的时候帮忙加一下 key 不加的话很烦人 */ var actionDom = (0, _react.useMemo)(function() {
        if (!Array.isArray(actions)) return actions;
        if (actions.length < 1) return null;
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            style: {
                display: 'flex',
                alignItems: 'center',
                gap: token.marginXS
            },
            children: actions.map(function(action, index) {
                if (!/*#__PURE__*/ _react.default.isValidElement(action)) // eslint-disable-next-line react/no-array-index-key
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.default.Fragment, {
                    children: action
                }, index);
                return /*#__PURE__*/ _react.default.cloneElement(action, (0, _objectSpread2.default)({
                    // eslint-disable-next-line react/no-array-index-key
                    key: index
                }, action === null || action === void 0 ? void 0 : action.props));
            })
        });
    }, [
        actions
    ]);
    var hasRight = (0, _react.useMemo)(function() {
        return !!(hasTitle && searchNode || !multipleLine && filtersNode || actionDom || settings !== null && settings !== void 0 && settings.length);
    }, [
        actionDom,
        filtersNode,
        hasTitle,
        multipleLine,
        searchNode,
        settings === null || settings === void 0 ? void 0 : settings.length
    ]);
    var hasLeft = (0, _react.useMemo)(function() {
        return tooltip || title || subTitle || menu || !hasTitle && searchNode;
    }, [
        hasTitle,
        menu,
        searchNode,
        subTitle,
        title,
        tooltip
    ]);
    var leftTitleDom = (0, _react.useMemo)(function() {
        // 保留dom是为了占位，不然 right 就变到左边了
        if (!hasLeft && hasRight) return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "".concat(prefixCls, "-left ").concat(hashId).trim()
        });
        // 减少 space 的dom，渲染的时候能节省点性能
        if (!menu && (hasTitle || !searchNode)) return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "".concat(prefixCls, "-left ").concat(hashId).trim(),
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "".concat(prefixCls, "-title ").concat(hashId).trim(),
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_proutils.LabelIconTip, {
                    tooltip: tooltip,
                    label: title,
                    subTitle: subTitle
                })
            })
        });
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: (0, _classnames.default)("".concat(prefixCls, "-left"), hashId, (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({}, "".concat(prefixCls, "-left-has-tabs"), (menu === null || menu === void 0 ? void 0 : menu.type) === 'tab'), "".concat(prefixCls, "-left-has-dropdown"), (menu === null || menu === void 0 ? void 0 : menu.type) === 'dropdown'), "".concat(prefixCls, "-left-has-inline-menu"), (menu === null || menu === void 0 ? void 0 : menu.type) === 'inline')),
            children: [
                hasTitle && !menu && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "".concat(prefixCls, "-title ").concat(hashId).trim(),
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_proutils.LabelIconTip, {
                        tooltip: tooltip,
                        label: title,
                        subTitle: subTitle
                    })
                }),
                menu && /*#__PURE__*/ // 这里面实现了 tabs 的逻辑
                (0, _jsxruntime.jsx)(_HeaderMenu.default, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, menu), {}, {
                    prefixCls: prefixCls
                })),
                !hasTitle && searchNode ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "".concat(prefixCls, "-search ").concat(hashId).trim(),
                    children: searchNode
                }) : null
            ]
        });
    }, [
        hasLeft,
        hasRight,
        hasTitle,
        hashId,
        menu,
        prefixCls,
        searchNode,
        subTitle,
        title,
        tooltip
    ]);
    var rightTitleDom = (0, _react.useMemo)(function() {
        if (!hasRight) return null;
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "".concat(prefixCls, "-right ").concat(hashId).trim(),
            style: isMobile ? {} : {
                alignItems: 'center'
            },
            children: [
                !multipleLine ? filtersNode : null,
                hasTitle && searchNode ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "".concat(prefixCls, "-search ").concat(hashId).trim(),
                    children: searchNode
                }) : null,
                actionDom,
                settings !== null && settings !== void 0 && settings.length ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "".concat(prefixCls, "-setting-items ").concat(hashId).trim(),
                    children: settings.map(function(setting, index) {
                        var settingItem = getSettingItem(setting);
                        return(/*#__PURE__*/ // eslint-disable-next-line react/no-array-index-key
                        (0, _jsxruntime.jsx)("div", {
                            className: "".concat(prefixCls, "-setting-item ").concat(hashId).trim(),
                            children: settingItem
                        }, index));
                    })
                }) : null
            ]
        });
    }, [
        hasRight,
        prefixCls,
        hashId,
        isMobile,
        hasTitle,
        searchNode,
        multipleLine,
        filtersNode,
        actionDom,
        settings
    ]);
    var titleNode = (0, _react.useMemo)(function() {
        if (!hasRight && !hasLeft) return null;
        var containerClassName = (0, _classnames.default)("".concat(prefixCls, "-container"), hashId, (0, _defineProperty.default)({}, "".concat(prefixCls, "-container-mobile"), isMobile));
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: containerClassName,
            children: [
                leftTitleDom,
                rightTitleDom
            ]
        });
    }, [
        hasLeft,
        hasRight,
        hashId,
        isMobile,
        leftTitleDom,
        prefixCls,
        rightTitleDom
    ]);
    return wrapSSR(/*#__PURE__*/ (0, _jsxruntime.jsx)(_rcresizeobserver.default, {
        onResize: function onResize(size) {
            if (size.width < 375 !== isMobile) setIsMobile(size.width < 375);
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            style: style,
            className: (0, _classnames.default)(prefixCls, hashId, className),
            children: [
                titleNode,
                /*#__PURE__*/ (0, _jsxruntime.jsx)(ListToolBarTabBar, {
                    filtersNode: filtersNode,
                    prefixCls: prefixCls,
                    tabs: tabs,
                    multipleLine: multipleLine
                })
            ]
        })
    }));
};
var _default = ListToolBar;

},
"node_modules/@ant-design/pro-table/es/components/ListToolBar/style.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "useStyle", {
    enumerable: true,
    get: function() {
        return useStyle;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var genProListStyle = function genProListStyle(token) {
    return (0, _defineProperty.default)({}, token.componentCls, (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({
        lineHeight: '1',
        '&-container': {
            display: 'flex',
            justifyContent: 'space-between',
            paddingBlock: token.padding,
            paddingInline: 0,
            '&-mobile': {
                flexDirection: 'column'
            }
        },
        '&-title': {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'flex-start',
            color: token.colorTextHeading,
            fontWeight: '500',
            fontSize: token.fontSizeLG
        },
        '&-search:not(:last-child)': {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'flex-start'
        },
        '&-setting-item': {
            marginBlock: 0,
            marginInline: 4,
            color: token.colorIconHover,
            fontSize: token.fontSizeLG,
            cursor: 'pointer',
            '> span': {
                display: 'block',
                width: '100%',
                height: '100%'
            },
            '&:hover': {
                color: token.colorPrimary
            }
        },
        '&-left': (0, _defineProperty.default)((0, _defineProperty.default)({
            display: 'flex',
            flexWrap: 'wrap',
            alignItems: 'center',
            gap: token.marginXS,
            justifyContent: 'flex-start',
            maxWidth: 'calc(100% - 200px)'
        }, "".concat(token.antCls, "-tabs"), {
            width: '100%'
        }), '&-has-tabs', {
            overflow: 'hidden'
        }),
        '&-right': {
            flex: 1,
            display: 'flex',
            flexWrap: 'wrap',
            justifyContent: 'flex-end',
            gap: token.marginXS
        },
        '&-extra-line': {
            marginBlockEnd: token.margin
        },
        '&-setting-items': {
            display: 'flex',
            gap: token.marginXS,
            lineHeight: '32px',
            alignItems: 'center'
        },
        '&-filter': (0, _defineProperty.default)({
            '&:not(:last-child)': {
                marginInlineEnd: token.margin
            },
            display: 'flex',
            alignItems: 'center'
        }, "div$".concat(token.antCls, "-pro-table-search"), {
            marginBlock: 0,
            marginInline: 0,
            paddingBlock: 0,
            paddingInline: 0
        }),
        '&-inline-menu-item': {
            display: 'inline-block',
            marginInlineEnd: token.marginLG,
            cursor: 'pointer',
            opacity: '0.75',
            '&-active': {
                fontWeight: 'bold',
                opacity: '1'
            }
        }
    }, "".concat(token.antCls, "-tabs-top > ").concat(token.antCls, "-tabs-nav"), (0, _defineProperty.default)({
        marginBlockEnd: 0,
        '&::before': {
            borderBlockEnd: 0
        }
    }, "".concat(token.antCls, "-tabs-nav-list"), {
        marginBlockStart: 0,
        '${token.antCls}-tabs-tab': {
            paddingBlockStart: 0
        }
    })), '&-dropdownmenu-label', {
        fontWeight: 'bold',
        fontSize: token.fontSizeIcon,
        textAlign: 'center',
        cursor: 'pointer'
    }), '@media (max-width: 768px)', (0, _defineProperty.default)({}, token.componentCls, {
        '&-container': {
            display: 'flex',
            flexWrap: 'wrap',
            flexDirection: 'column'
        },
        '&-left': {
            marginBlockEnd: '16px',
            maxWidth: '100%'
        }
    })));
};
function useStyle(prefixCls) {
    return (0, _proprovider.useStyle)('ProTableListToolBar', function(token) {
        var proListToken = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, token), {}, {
            componentCls: ".".concat(prefixCls)
        });
        return [
            genProListStyle(proListToken)
        ];
    });
}

},
"node_modules/@ant-design/pro-table/es/components/ToolBar/DensityIcon.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _icons = __mako_require__("node_modules/@ant-design/pro-table/node_modules/@ant-design/icons/es/index.js");
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _Provide = __mako_require__("node_modules/@ant-design/pro-table/es/Store/Provide.js");
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var DensityIcon = function DensityIcon(props) {
    var _props$icon = props.icon, icon = _props$icon === void 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ColumnHeightOutlined, {}) : _props$icon;
    var counter = (0, _react.useContext)(_Provide.TableContext);
    var intl = (0, _proprovider.useIntl)();
    var dropdownProps = (0, _proutils.menuOverlayCompatible)({
        selectedKeys: [
            counter.tableSize
        ],
        onClick: function onClick(_ref) {
            var _counter$setTableSize;
            var key = _ref.key;
            (_counter$setTableSize = counter.setTableSize) === null || _counter$setTableSize === void 0 || _counter$setTableSize.call(counter, key);
        },
        style: {
            width: 80
        },
        items: [
            {
                key: 'large',
                label: intl.getMessage('tableToolBar.densityLarger', '宽松')
            },
            {
                key: 'middle',
                label: intl.getMessage('tableToolBar.densityMiddle', '中等')
            },
            {
                key: 'small',
                label: intl.getMessage('tableToolBar.densitySmall', '紧凑')
            }
        ]
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Dropdown, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, dropdownProps), {}, {
        trigger: [
            'click'
        ],
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Tooltip, {
            title: intl.getMessage('tableToolBar.density', '表格密度'),
            children: icon
        })
    }));
};
var _default = /*#__PURE__*/ _react.default.memo(DensityIcon);

},
"node_modules/@ant-design/pro-table/es/components/ToolBar/FullscreenIcon.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _slicedToArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/slicedToArray.js"));
var _icons = __mako_require__("node_modules/@ant-design/pro-table/node_modules/@ant-design/icons/es/index.js");
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var FullScreenIcon = function FullScreenIcon() {
    var intl = (0, _proprovider.useIntl)();
    var _useState = (0, _react.useState)(false), _useState2 = (0, _slicedToArray.default)(_useState, 2), fullscreen = _useState2[0], setFullscreen = _useState2[1];
    (0, _react.useEffect)(function() {
        if (!(0, _proutils.isBrowser)()) return;
        document.onfullscreenchange = function() {
            setFullscreen(!!document.fullscreenElement);
        };
    }, []);
    return fullscreen ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Tooltip, {
        title: intl.getMessage('tableToolBar.exitFullScreen', '全屏'),
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.FullscreenExitOutlined, {})
    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Tooltip, {
        title: intl.getMessage('tableToolBar.fullScreen', '全屏'),
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.FullscreenOutlined, {})
    });
};
var _default = /*#__PURE__*/ _react.default.memo(FullScreenIcon);

},
"node_modules/@ant-design/pro-table/es/components/ToolBar/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _createClass = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/createClass.js"));
var _classCallCheck = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/classCallCheck.js"));
var _assertThisInitialized = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"));
var _inherits = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/inherits.js"));
var _createSuper = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/createSuper.js"));
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _objectWithoutProperties = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _icons = __mako_require__("node_modules/@ant-design/pro-table/node_modules/@ant-design/icons/es/index.js");
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _Provide = __mako_require__("node_modules/@ant-design/pro-table/es/Store/Provide.js");
var _ColumnSetting = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/ColumnSetting/index.js"));
var _ListToolBar = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/ListToolBar/index.js"));
var _DensityIcon = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/ToolBar/DensityIcon.js"));
var _FullscreenIcon = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/ToolBar/FullscreenIcon.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var _excluded = [
    "headerTitle",
    "tooltip",
    "toolBarRender",
    "action",
    "options",
    "selectedRowKeys",
    "selectedRows",
    "toolbar",
    "onSearch",
    "columns",
    "optionsRender"
];
function getButtonText(_ref, options) {
    var _options$reloadIcon;
    var intl = _ref.intl;
    return {
        reload: {
            text: intl.getMessage('tableToolBar.reload', '刷新'),
            icon: (_options$reloadIcon = options.reloadIcon) !== null && _options$reloadIcon !== void 0 ? _options$reloadIcon : /*#__PURE__*/ (0, _jsxruntime.jsx)(_icons.ReloadOutlined, {})
        },
        density: {
            text: intl.getMessage('tableToolBar.density', '表格密度'),
            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_DensityIcon.default, {
                icon: options.densityIcon
            })
        },
        fullScreen: {
            text: intl.getMessage('tableToolBar.fullScreen', '全屏'),
            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_FullscreenIcon.default, {})
        }
    };
}
/**
 * 渲染默认的 工具栏
 *
 * @param options
 * @param className
 */ function renderDefaultOption(options, defaultOptions, actions, columns) {
    return Object.keys(options).filter(function(item) {
        return item;
    }).map(function(key) {
        var value = options[key];
        if (!value) return null;
        var onClick = value === true ? defaultOptions[key] : function(event) {
            value === null || value === void 0 || value(event, actions.current);
        };
        if (typeof onClick !== 'function') onClick = function onClick() {};
        if (key === 'setting') return /*#__PURE__*/ (0, _react.createElement)(_ColumnSetting.default, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, options[key]), {}, {
            columns: columns,
            key: key
        }));
        if (key === 'fullScreen') return /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
            onClick: onClick,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_FullscreenIcon.default, {})
        }, key);
        var optionItem = getButtonText(defaultOptions, options)[key];
        if (optionItem) return /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
            onClick: onClick,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Tooltip, {
                title: optionItem.text,
                children: optionItem.icon
            })
        }, key);
        return null;
    }).filter(function(item) {
        return item;
    });
}
function ToolBar(_ref2) {
    var headerTitle = _ref2.headerTitle, tooltip = _ref2.tooltip, toolBarRender = _ref2.toolBarRender, action = _ref2.action, propsOptions = _ref2.options, selectedRowKeys = _ref2.selectedRowKeys, selectedRows = _ref2.selectedRows, toolbar = _ref2.toolbar, onSearch = _ref2.onSearch, columns = _ref2.columns, optionsRender = _ref2.optionsRender, rest = (0, _objectWithoutProperties.default)(_ref2, _excluded);
    var counter = (0, _react.useContext)(_Provide.TableContext);
    var intl = (0, _proprovider.useIntl)();
    var optionDom = (0, _react.useMemo)(function() {
        var defaultOptions = {
            reload: function reload() {
                var _action$current;
                return action === null || action === void 0 || (_action$current = action.current) === null || _action$current === void 0 ? void 0 : _action$current.reload();
            },
            density: true,
            setting: true,
            search: false,
            fullScreen: function fullScreen() {
                var _action$current2, _action$current2$full;
                return action === null || action === void 0 || (_action$current2 = action.current) === null || _action$current2 === void 0 || (_action$current2$full = _action$current2.fullScreen) === null || _action$current2$full === void 0 ? void 0 : _action$current2$full.call(_action$current2);
            }
        };
        if (propsOptions === false) return [];
        var options = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, defaultOptions), {}, {
            fullScreen: false
        }, propsOptions);
        var settings = renderDefaultOption(options, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, defaultOptions), {}, {
            intl: intl
        }), action, columns);
        if (optionsRender) return optionsRender((0, _objectSpread2.default)({
            headerTitle: headerTitle,
            tooltip: tooltip,
            toolBarRender: toolBarRender,
            action: action,
            options: propsOptions,
            selectedRowKeys: selectedRowKeys,
            selectedRows: selectedRows,
            toolbar: toolbar,
            onSearch: onSearch,
            columns: columns,
            optionsRender: optionsRender
        }, rest), settings);
        return settings;
    }, [
        action,
        columns,
        headerTitle,
        intl,
        onSearch,
        optionsRender,
        propsOptions,
        rest,
        selectedRowKeys,
        selectedRows,
        toolBarRender,
        toolbar,
        tooltip
    ]);
    // 操作列表
    var actions = toolBarRender ? toolBarRender(action === null || action === void 0 ? void 0 : action.current, {
        selectedRowKeys: selectedRowKeys,
        selectedRows: selectedRows
    }) : [];
    var searchConfig = (0, _react.useMemo)(function() {
        if (!propsOptions) return false;
        if (!propsOptions.search) return false;
        /** 受控的value 和 onChange */ var defaultSearchConfig = {
            value: counter.keyWords,
            onChange: function onChange(e) {
                return counter.setKeyWords(e.target.value);
            }
        };
        if (propsOptions.search === true) return defaultSearchConfig;
        return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, defaultSearchConfig), propsOptions.search);
    }, [
        counter,
        propsOptions
    ]);
    (0, _react.useEffect)(function() {
        if (counter.keyWords === undefined) onSearch === null || onSearch === void 0 || onSearch('');
    }, [
        counter.keyWords,
        onSearch
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_ListToolBar.default, (0, _objectSpread2.default)({
        title: headerTitle,
        tooltip: tooltip || rest.tip,
        search: searchConfig,
        onSearch: onSearch,
        actions: actions,
        settings: optionDom
    }, toolbar));
}
/** 这里负责与table交互，并且减少 render次数 */ var ToolbarRender = /*#__PURE__*/ function(_React$Component) {
    (0, _inherits.default)(ToolbarRender, _React$Component);
    var _super = (0, _createSuper.default)(ToolbarRender);
    function ToolbarRender() {
        var _this;
        (0, _classCallCheck.default)(this, ToolbarRender);
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _super.call.apply(_super, [
            this
        ].concat(args));
        (0, _defineProperty.default)((0, _assertThisInitialized.default)(_this), "onSearch", function(keyword) {
            var _options$search, _options$search$onSea, _actionRef$current, _actionRef$current$se;
            var _this$props = _this.props, options = _this$props.options, onFormSearchSubmit = _this$props.onFormSearchSubmit, actionRef = _this$props.actionRef;
            if (!options || !options.search) return;
            var _ref3 = options.search === true ? {} : options.search, _ref3$name = _ref3.name, name = _ref3$name === void 0 ? 'keyword' : _ref3$name;
            /** 如果传入的 onSearch 返回值为 false，应该直接拦截请求 */ var success = (_options$search = options.search) === null || _options$search === void 0 || (_options$search$onSea = _options$search.onSearch) === null || _options$search$onSea === void 0 ? void 0 : _options$search$onSea.call(_options$search, keyword);
            if (success === false) return;
            // 查询的时候的回到第一页
            actionRef === null || actionRef === void 0 || (_actionRef$current = actionRef.current) === null || _actionRef$current === void 0 || (_actionRef$current$se = _actionRef$current.setPageInfo) === null || _actionRef$current$se === void 0 || _actionRef$current$se.call(_actionRef$current, {
                current: 1
            });
            onFormSearchSubmit((0, _proutils.omitUndefined)((0, _defineProperty.default)({
                _timestamp: Date.now()
            }, name, keyword)));
        });
        (0, _defineProperty.default)((0, _assertThisInitialized.default)(_this), "isEquals", function(next) {
            var _this$props2 = _this.props, hideToolbar = _this$props2.hideToolbar, tableColumn = _this$props2.tableColumn, options = _this$props2.options, tooltip = _this$props2.tooltip, toolbar = _this$props2.toolbar, selectedRows = _this$props2.selectedRows, selectedRowKeys = _this$props2.selectedRowKeys, headerTitle = _this$props2.headerTitle, actionRef = _this$props2.actionRef, toolBarRender = _this$props2.toolBarRender;
            return (0, _proutils.isDeepEqualReact)({
                hideToolbar: hideToolbar,
                tableColumn: tableColumn,
                options: options,
                tooltip: tooltip,
                toolbar: toolbar,
                selectedRows: selectedRows,
                selectedRowKeys: selectedRowKeys,
                headerTitle: headerTitle,
                actionRef: actionRef,
                toolBarRender: toolBarRender
            }, {
                hideToolbar: next.hideToolbar,
                tableColumn: next.tableColumn,
                options: next.options,
                tooltip: next.tooltip,
                toolbar: next.toolbar,
                selectedRows: next.selectedRows,
                selectedRowKeys: next.selectedRowKeys,
                headerTitle: next.headerTitle,
                actionRef: next.actionRef,
                toolBarRender: next.toolBarRender
            }, [
                'render',
                'renderFormItem'
            ]);
        });
        (0, _defineProperty.default)((0, _assertThisInitialized.default)(_this), "shouldComponentUpdate", function(next) {
            if (next.searchNode) return true;
            return !_this.isEquals(next);
        });
        (0, _defineProperty.default)((0, _assertThisInitialized.default)(_this), "render", function() {
            var _this$props3 = _this.props, hideToolbar = _this$props3.hideToolbar, tableColumn = _this$props3.tableColumn, options = _this$props3.options, searchNode = _this$props3.searchNode, tooltip = _this$props3.tooltip, toolbar = _this$props3.toolbar, selectedRows = _this$props3.selectedRows, selectedRowKeys = _this$props3.selectedRowKeys, headerTitle = _this$props3.headerTitle, actionRef = _this$props3.actionRef, toolBarRender = _this$props3.toolBarRender, optionsRender = _this$props3.optionsRender;
            // 不展示 toolbar
            if (hideToolbar) return null;
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(ToolBar, {
                tooltip: tooltip,
                columns: tableColumn,
                options: options,
                headerTitle: headerTitle,
                action: actionRef,
                onSearch: _this.onSearch,
                selectedRows: selectedRows,
                selectedRowKeys: selectedRowKeys,
                toolBarRender: toolBarRender,
                toolbar: (0, _objectSpread2.default)({
                    filter: searchNode
                }, toolbar),
                optionsRender: optionsRender
            });
        });
        return _this;
    }
    return (0, _createClass.default)(ToolbarRender);
}(_react.default.Component);
var _default = ToolbarRender;

},
"node_modules/@ant-design/pro-table/es/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    CellEditorTable: function() {
        return _CellEditorTable.CellEditorTable;
    },
    ConfigConsumer: function() {
        return _proprovider.ConfigConsumer;
    },
    DragSortTable: function() {
        return _DragSortTable.default;
    },
    EditableProTable: function() {
        return _EditableTable.default;
    },
    IndexColumn: function() {
        return _profield.FieldIndexColumn;
    },
    IntlConsumer: function() {
        return _proprovider.ConfigConsumer;
    },
    ListToolBar: function() {
        return _ListToolBar.default;
    },
    ProTable: function() {
        return _Table.default;
    },
    RowEditorTable: function() {
        return _RowEditorTable.RowEditorTable;
    },
    Search: function() {
        return _Form.default;
    },
    TableDropdown: function() {
        return _Dropdown.default;
    },
    TableStatus: function() {
        return _profield.FieldStatus;
    },
    arEGIntl: function() {
        return _proprovider.arEGIntl;
    },
    caESIntl: function() {
        return _proprovider.caESIntl;
    },
    createIntl: function() {
        return _proprovider.createIntl;
    },
    default: function() {
        return _default;
    },
    enUSIntl: function() {
        return _proprovider.enUSIntl;
    },
    esESIntl: function() {
        return _proprovider.esESIntl;
    },
    frFRIntl: function() {
        return _proprovider.frFRIntl;
    },
    itITIntl: function() {
        return _proprovider.itITIntl;
    },
    jaJPIntl: function() {
        return _proprovider.jaJPIntl;
    },
    msMYIntl: function() {
        return _proprovider.msMYIntl;
    },
    ptBRIntl: function() {
        return _proprovider.ptBRIntl;
    },
    ruRUIntl: function() {
        return _proprovider.ruRUIntl;
    },
    thTHIntl: function() {
        return _proprovider.thTHIntl;
    },
    viVNIntl: function() {
        return _proprovider.viVNIntl;
    },
    zhCNIntl: function() {
        return _proprovider.zhCNIntl;
    },
    zhTWIntl: function() {
        return _proprovider.zhTWIntl;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _profield = __mako_require__("node_modules/@ant-design/pro-field/es/index.js");
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var _Table = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/Table.js"));
var _DragSortTable = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/DragSortTable/index.js"));
var _Dropdown = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/Dropdown/index.js"));
var _EditableTable = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/EditableTable/index.js"));
var _CellEditorTable = __mako_require__("node_modules/@ant-design/pro-table/es/components/EditableTable/CellEditorTable.js");
var _RowEditorTable = __mako_require__("node_modules/@ant-design/pro-table/es/components/EditableTable/RowEditorTable.js");
var _Form = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/Form/index.js"));
var _ListToolBar = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/components/ListToolBar/index.js"));
var _default = _Table.default;

},
"node_modules/@ant-design/pro-table/es/style/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    turn: function() {
        return turn;
    },
    useStyle: function() {
        return useStyle;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _defineProperty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/defineProperty.js"));
var _cssinjs = __mako_require__("node_modules/@ant-design/cssinjs/es/index.js");
var _proprovider = __mako_require__("node_modules/@ant-design/pro-provider/es/index.js");
var turn = new _cssinjs.Keyframes('turn', {
    '0%': {
        transform: 'rotate(0deg)'
    },
    '25%': {
        transform: 'rotate(90deg)'
    },
    '50%': {
        transform: 'rotate(180deg)'
    },
    '75%': {
        transform: 'rotate(270deg)'
    },
    '100%': {
        transform: 'rotate(360deg)'
    }
});
var genProListStyle = function genProListStyle(token) {
    return (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({}, token.componentCls, (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({
        zIndex: 1
    }, "".concat(token.antCls, "-table-wrapper ").concat(token.antCls, "-table-pagination").concat(token.antCls, "-pagination"), {
        marginBlockEnd: 0
    }), '&:not(:root):fullscreen', {
        minHeight: '100vh',
        overflow: 'auto',
        background: token.colorBgContainer
    }), '&-extra', {
        marginBlockEnd: 16
    }), '&-polling', (0, _defineProperty.default)({}, "".concat(token.componentCls, "-list-toolbar-setting-item"), {
        '.anticon.anticon-reload': {
            transform: 'rotate(0deg)',
            animationName: turn,
            animationDuration: '1s',
            animationTimingFunction: 'linear',
            animationIterationCount: 'infinite'
        }
    })), "td".concat(token.antCls, "-table-cell"), {
        '>a': {
            fontSize: token.fontSize
        }
    }), "".concat(token.antCls, "-table").concat(token.antCls, "-table-tbody").concat(token.antCls, "-table-wrapper:only-child").concat(token.antCls, "-table"), {
        marginBlock: 0,
        marginInline: 0
    }), "".concat(token.antCls, "-table").concat(token.antCls, "-table-middle ").concat(token.componentCls), (0, _defineProperty.default)({
        marginBlock: 0,
        marginInline: -8
    }, "".concat(token.proComponentsCls, "-card"), {
        backgroundColor: 'initial'
    })), '& &-search', (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({
        marginBlockEnd: '16px',
        background: token.colorBgContainer,
        '&-ghost': {
            background: 'transparent'
        }
    }, "&".concat(token.componentCls, "-form"), {
        marginBlock: 0,
        marginInline: 0,
        paddingBlock: 0,
        paddingInline: 16,
        overflow: 'unset'
    }), '&-light-filter', {
        marginBlockEnd: 0,
        paddingBlock: 0,
        paddingInline: 0
    }), '&-form-option', (0, _defineProperty.default)((0, _defineProperty.default)((0, _defineProperty.default)({}, "".concat(token.antCls, "-form-item"), {}), "".concat(token.antCls, "-form-item-label"), {}), "".concat(token.antCls, "-form-item-control-input"), {})), '@media (max-width: 575px)', (0, _defineProperty.default)({}, token.componentCls, (0, _defineProperty.default)({
        height: 'auto !important',
        paddingBlockEnd: '24px'
    }, "".concat(token.antCls, "-form-item-label"), {
        minWidth: '80px',
        textAlign: 'start'
    })))), '&-toolbar', {
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'space-between',
        height: '64px',
        paddingInline: 24,
        paddingBlock: 0,
        '&-option': {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'flex-end'
        },
        '&-title': {
            flex: '1',
            color: token.colorTextLabel,
            fontWeight: '500',
            fontSize: '16px',
            lineHeight: '24px',
            opacity: '0.85'
        }
    })), "@media (max-width: ".concat(token.screenXS, ")px"), (0, _defineProperty.default)({}, token.componentCls, (0, _defineProperty.default)({}, "".concat(token.antCls, "-table"), {
        width: '100%',
        overflowX: 'auto',
        '&-thead > tr,&-tbody > tr': {
            '> th,> td': {
                whiteSpace: 'pre',
                '>span': {
                    display: 'block'
                }
            }
        }
    }))), '@media (max-width: 575px)', (0, _defineProperty.default)({}, "".concat(token.componentCls, "-toolbar"), {
        flexDirection: 'column',
        alignItems: 'flex-start',
        justifyContent: 'flex-start',
        height: 'auto',
        marginBlockEnd: '16px',
        marginInlineStart: '16px',
        paddingBlock: 8,
        paddingInline: 8,
        paddingBlockStart: '16px',
        lineHeight: 'normal',
        '&-title': {
            marginBlockEnd: 16
        },
        '&-option': {
            display: 'flex',
            justifyContent: 'space-between',
            width: '100%'
        },
        '&-default-option': {
            display: 'flex',
            flex: '1',
            alignItems: 'center',
            justifyContent: 'flex-end'
        }
    }));
};
function useStyle(prefixCls) {
    return (0, _proprovider.useStyle)('ProTable', function(token) {
        var proListToken = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, token), {}, {
            componentCls: ".".concat(prefixCls)
        });
        return [
            genProListStyle(proListToken)
        ];
    });
}

},
"node_modules/@ant-design/pro-table/es/useFetchData.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _toConsumableArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"));
var _regeneratorRuntime = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js"));
var _objectWithoutProperties = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"));
var _asyncToGenerator = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _typeof = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/typeof.js"));
var _slicedToArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/slicedToArray.js"));
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _react = __mako_require__("node_modules/react/index.js");
var _reactdom = __mako_require__("node_modules/react-dom/index.js");
var _index = __mako_require__("node_modules/@ant-design/pro-table/es/utils/index.js");
var _excluded = [
    "data",
    "success",
    "total"
];
/**
 * 组合用户的配置和默认值
 *
 * @param param0
 */ var mergeOptionAndPageInfo = function mergeOptionAndPageInfo(_ref) {
    var pageInfo = _ref.pageInfo;
    if (pageInfo) {
        var current = pageInfo.current, defaultCurrent = pageInfo.defaultCurrent, pageSize = pageInfo.pageSize, defaultPageSize = pageInfo.defaultPageSize;
        return {
            current: current || defaultCurrent || 1,
            total: 0,
            pageSize: pageSize || defaultPageSize || 20
        };
    }
    return {
        current: 1,
        total: 0,
        pageSize: 20
    };
};
/**
 * useFetchData hook 用来获取数据并控制数据的状态和分页
 * @template T
 * @param {(undefined | ((params?: { pageSize: number; current: number }) => Promise<DataSource>))} getData - 获取数据的函数，参数为分页参数，
 * 返回一个 Promise 类型的 T 类型的数据
 * @param {(undefined | any[])} defaultData - 默认的数据
 * @param {UseFetchProps} options - 配置项，包括了默认的分页参数、格式化数据的函数等
 * @returns {UseFetchDataAction} 返回一个对象，包含当前的数据列表、loading 状态、error、以及可控制的分页参数等
 */ var useFetchData = function useFetchData(getData, defaultData, options) {
    var _options$loading;
    /**
   * 用于保存组件是否被卸载的状态的引用
   * @type {React.MutableRefObject<boolean>}
   */ var umountRef = (0, _react.useRef)(false);
    /**
   * 用于保存 AbortController 实例的引用，方便需要时进行请求的取消操作
   * @type {React.MutableRefObject<AbortController | null>}
   */ var abortRef = (0, _react.useRef)(null);
    /**
   * useFetchData 钩子的配置项
   * @typedef {object} UseFetchProps
   * @property {boolean} [onLoad=false] 是否在页面加载时执行请求，默认为 false
   * @property {boolean} [manual=false] 是否手动触发请求，默认为 false
   * @property {number | boolean} [polling=false] 是否开启轮询，可以为数字表示轮询的时间间隔，也可以为 true 表示开启默认时间为 1s 的轮询
   * @property {function} [onRequestError] 请求错误的回调函数
   * @property {number} [debounceTime=20] 防抖时间，单位为毫秒，默认为 20ms
   */ var _ref2 = options || {}, onLoad = _ref2.onLoad, manual = _ref2.manual, polling = _ref2.polling, onRequestError = _ref2.onRequestError, _ref2$debounceTime = _ref2.debounceTime, debounceTime = _ref2$debounceTime === void 0 ? 20 : _ref2$debounceTime, _ref2$effects = _ref2.effects, effects = _ref2$effects === void 0 ? [] : _ref2$effects;
    /** 是否首次加载的指示器 */ var manualRequestRef = (0, _react.useRef)(manual);
    /** 轮询的setTime ID 存储 */ var pollingSetTimeRef = (0, _react.useRef)();
    /**
   * 用于存储最新的数据，这样可以在切换的时候保持数据的一致性
   */ var _useMountMergeState = (0, _proutils.useMountMergeState)(defaultData, {
        value: options === null || options === void 0 ? void 0 : options.dataSource,
        onChange: options === null || options === void 0 ? void 0 : options.onDataSourceChange
    }), _useMountMergeState2 = (0, _slicedToArray.default)(_useMountMergeState, 2), tableDataList = _useMountMergeState2[0], setTableDataList = _useMountMergeState2[1];
    /**
   * 表格的加载状态
   */ var _useMountMergeState3 = (0, _proutils.useMountMergeState)(false, {
        value: (0, _typeof.default)(options === null || options === void 0 ? void 0 : options.loading) === 'object' ? options === null || options === void 0 || (_options$loading = options.loading) === null || _options$loading === void 0 ? void 0 : _options$loading.spinning : options === null || options === void 0 ? void 0 : options.loading,
        onChange: options === null || options === void 0 ? void 0 : options.onLoadingChange
    }), _useMountMergeState4 = (0, _slicedToArray.default)(_useMountMergeState3, 2), tableLoading = _useMountMergeState4[0], setTableLoading = _useMountMergeState4[1];
    /**
   * 表示页面信息的类型  useMountMergeState 钩子的初始值和参数
   * @typedef {object} PageInfo
   * @property {number} current 当前页码
   * @property {number} pageSize 页面大小
   * @property {number} total 数据总量
   * @type {[PageInfo, React.Dispatch<React.SetStateAction<PageInfo>>]}
   */ var _useMountMergeState5 = (0, _proutils.useMountMergeState)(function() {
        return mergeOptionAndPageInfo(options);
    }, {
        onChange: options === null || options === void 0 ? void 0 : options.onPageInfoChange
    }), _useMountMergeState6 = (0, _slicedToArray.default)(_useMountMergeState5, 2), pageInfo = _useMountMergeState6[0], setPageInfoState = _useMountMergeState6[1];
    /**
   * 用于比较并设置页面信息和回调函数的引用更新
   * @type {React.MutableRefObject<(changePageInfo: PageInfo) => void>}
   */ var _setPageInfo = (0, _proutils.useRefFunction)(function(changePageInfo) {
        if (changePageInfo.current !== pageInfo.current || changePageInfo.pageSize !== pageInfo.pageSize || changePageInfo.total !== pageInfo.total) setPageInfoState(changePageInfo);
    });
    var _useMountMergeState7 = (0, _proutils.useMountMergeState)(false), _useMountMergeState8 = (0, _slicedToArray.default)(_useMountMergeState7, 2), pollingLoading = _useMountMergeState8[0], setPollingLoading = _useMountMergeState8[1];
    // Batching update  https://github.com/facebook/react/issues/14259
    var setDataAndLoading = function setDataAndLoading(newData, dataTotal) {
        (0, _reactdom.unstable_batchedUpdates)(function() {
            setTableDataList(newData);
            if ((pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.total) !== dataTotal) _setPageInfo((0, _objectSpread2.default)((0, _objectSpread2.default)({}, pageInfo), {}, {
                total: dataTotal || newData.length
            }));
        });
    };
    /**
   * 上一页的页码
   * @type {number}
   */ var prePage = (0, _proutils.usePrevious)(pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.current);
    /**
   * 上一页的页面大小
   * @type {number}
   */ var prePageSize = (0, _proutils.usePrevious)(pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.pageSize);
    /**
   * 上一页的轮询时间
   * @type {number|boolean}
   */ var prePolling = (0, _proutils.usePrevious)(polling);
    /**
   * 不这样做会导致状态不更新
   * https://github.com/ant-design/pro-components/issues/4390
   */ var requestFinally = (0, _proutils.useRefFunction)(function() {
        (0, _reactdom.unstable_batchedUpdates)(function() {
            setTableLoading(false);
            setPollingLoading(false);
        });
    });
    /** 请求数据 */ var fetchList = /*#__PURE__*/ function() {
        var _ref3 = (0, _asyncToGenerator.default)(/*#__PURE__*/ (0, _regeneratorRuntime.default)().mark(function _callee(isPolling) {
            var _ref4, pageSize, current, pageParams, _ref5, _ref5$data, data, success, _ref5$total, total, rest, responseData;
            return (0, _regeneratorRuntime.default)().wrap(function _callee$(_context) {
                while(true)switch(_context.prev = _context.next){
                    case 0:
                        if (!manualRequestRef.current) {
                            _context.next = 3;
                            break;
                        }
                        manualRequestRef.current = false;
                        return _context.abrupt("return");
                    case 3:
                        if (!isPolling) setTableLoading(true);
                        else setPollingLoading(true);
                        _ref4 = pageInfo || {}, pageSize = _ref4.pageSize, current = _ref4.current;
                        _context.prev = 5;
                        pageParams = (options === null || options === void 0 ? void 0 : options.pageInfo) !== false ? {
                            current: current,
                            pageSize: pageSize
                        } : undefined;
                        _context.next = 9;
                        return getData === null || getData === void 0 ? void 0 : getData(pageParams);
                    case 9:
                        _context.t0 = _context.sent;
                        if (_context.t0) {
                            _context.next = 12;
                            break;
                        }
                        _context.t0 = {};
                    case 12:
                        _ref5 = _context.t0;
                        _ref5$data = _ref5.data;
                        data = _ref5$data === void 0 ? [] : _ref5$data;
                        success = _ref5.success;
                        _ref5$total = _ref5.total;
                        total = _ref5$total === void 0 ? 0 : _ref5$total;
                        rest = (0, _objectWithoutProperties.default)(_ref5, _excluded);
                        if (!(success === false)) {
                            _context.next = 21;
                            break;
                        }
                        return _context.abrupt("return", []);
                    case 21:
                        responseData = (0, _index.postDataPipeline)(data, [
                            options.postData
                        ].filter(function(item) {
                            return item;
                        })); // 设置表格数据
                        setDataAndLoading(responseData, total);
                        onLoad === null || onLoad === void 0 || onLoad(responseData, rest);
                        return _context.abrupt("return", responseData);
                    case 27:
                        _context.prev = 27;
                        _context.t1 = _context["catch"](5);
                        if (!(onRequestError === undefined)) {
                            _context.next = 31;
                            break;
                        }
                        throw new Error(_context.t1);
                    case 31:
                        if (tableDataList === undefined) setTableDataList([]);
                        onRequestError(_context.t1);
                    case 33:
                        _context.prev = 33;
                        requestFinally();
                        return _context.finish(33);
                    case 36:
                        return _context.abrupt("return", []);
                    case 37:
                    case "end":
                        return _context.stop();
                }
            }, _callee, null, [
                [
                    5,
                    27,
                    33,
                    36
                ]
            ]);
        }));
        return function fetchList(_x) {
            return _ref3.apply(this, arguments);
        };
    }();
    /**
   * 该函数用于进行数据请求，可以用于轮询或单次请求。
   * 通过使用 AbortController 取消之前的请求，避免出现请求堆积。
   * 若需要轮询，则在一定时间后再次调用该函数，最小时间为 200ms，避免一直处于 loading 状态。
   * 如果请求被取消，则返回空。
   */ var fetchListDebounce = (0, _proutils.useDebounceFn)(/*#__PURE__*/ function() {
        var _ref6 = (0, _asyncToGenerator.default)(/*#__PURE__*/ (0, _regeneratorRuntime.default)().mark(function _callee2(isPolling) {
            var abort, msg, needPolling;
            return (0, _regeneratorRuntime.default)().wrap(function _callee2$(_context2) {
                while(true)switch(_context2.prev = _context2.next){
                    case 0:
                        if (pollingSetTimeRef.current) clearTimeout(pollingSetTimeRef.current);
                        if (getData) {
                            _context2.next = 3;
                            break;
                        }
                        return _context2.abrupt("return");
                    case 3:
                        abort = new AbortController();
                        abortRef.current = abort;
                        _context2.prev = 5;
                        _context2.next = 8;
                        return Promise.race([
                            fetchList(isPolling),
                            new Promise(function(_, reject) {
                                var _abortRef$current, _abortRef$current$add;
                                (_abortRef$current = abortRef.current) === null || _abortRef$current === void 0 || (_abortRef$current = _abortRef$current.signal) === null || _abortRef$current === void 0 || (_abortRef$current$add = _abortRef$current.addEventListener) === null || _abortRef$current$add === void 0 || _abortRef$current$add.call(_abortRef$current, 'abort', function() {
                                    reject('aborted');
                                    // 结束请求，并且清空loading控制
                                    fetchListDebounce.cancel();
                                    requestFinally();
                                });
                            })
                        ]);
                    case 8:
                        msg = _context2.sent;
                        if (!abort.signal.aborted) {
                            _context2.next = 11;
                            break;
                        }
                        return _context2.abrupt("return");
                    case 11:
                        // 放到请求前面会导致数据是上一次的
                        needPolling = (0, _proutils.runFunction)(polling, msg);
                        /*
             * 这段代码是用于控制轮询的。其中，needPolling 参数表明当前是否需要进行轮询，umountRef 是一个 ref，用来记录组件是否被卸载。
             * 如果需要轮询并且组件没有被卸载，就会调用 setTimeout，等待一定的时间，然后再次调用 fetchListDebounce 函数，并传入需要轮询的时间参数。
             * 其中 Math.max(needPolling, 2000) 用于确定最小的轮询时间为 2000ms，避免频繁请求导致一直处于 loading 状态。
             */ if (needPolling && !umountRef.current) pollingSetTimeRef.current = setTimeout(function() {
                            fetchListDebounce.run(needPolling);
                        // 这里判断最小要2000ms，不然一直loading
                        }, Math.max(needPolling, 2000));
                        return _context2.abrupt("return", msg);
                    case 16:
                        _context2.prev = 16;
                        _context2.t0 = _context2["catch"](5);
                        if (!(_context2.t0 === 'aborted')) {
                            _context2.next = 20;
                            break;
                        }
                        return _context2.abrupt("return");
                    case 20:
                        throw _context2.t0;
                    case 21:
                    case "end":
                        return _context2.stop();
                }
            }, _callee2, null, [
                [
                    5,
                    16
                ]
            ]);
        }));
        return function(_x2) {
            return _ref6.apply(this, arguments);
        };
    }(), debounceTime || 30);
    /**
   * 取消请求
   */ var abortFetch = function abortFetch() {
        var _abortRef$current2;
        (_abortRef$current2 = abortRef.current) === null || _abortRef$current2 === void 0 || _abortRef$current2.abort();
        fetchListDebounce.cancel();
        requestFinally();
    };
    // 如果轮询结束了，直接销毁定时器
    (0, _react.useEffect)(function() {
        if (!polling) clearTimeout(pollingSetTimeRef.current);
        if (!prePolling && polling) fetchListDebounce.run(true);
        return function() {
            clearTimeout(pollingSetTimeRef.current);
        };
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        polling
    ]);
    (0, _react.useEffect)(function() {
        umountRef.current = false;
        return function() {
            umountRef.current = true;
        };
    }, []);
    /** PageIndex 改变的时候自动刷新 */ (0, _react.useEffect)(function() {
        var _ref7 = pageInfo || {}, current = _ref7.current, pageSize = _ref7.pageSize;
        // 如果上次的页码为空或者两次页码等于是没必要查询的
        // 如果 pageSize 发生变化是需要查询的，所以又加了 prePageSize
        if ((!prePage || prePage === current) && (!prePageSize || prePageSize === pageSize)) return;
        if (options.pageInfo && tableDataList && (tableDataList === null || tableDataList === void 0 ? void 0 : tableDataList.length) > pageSize || 0) return;
        // 如果 list 的长度大于 pageSize 的长度
        // 说明是一个假分页
        // (pageIndex - 1 || 1) 至少要第一页
        // 在第一页大于 10
        // 第二页也应该是大于 10
        if (current !== undefined && tableDataList && tableDataList.length <= pageSize) {
            abortFetch();
            fetchListDebounce.run(false);
        }
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.current
    ]);
    // pageSize 修改后返回第一页
    (0, _react.useEffect)(function() {
        if (!prePageSize) return;
        abortFetch();
        fetchListDebounce.run(false);
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.pageSize
    ]);
    /**
   * 检查是否有正在进行的请求需要被中止。如果是，则使用 abortRef 中的方法来中止请求。
   * 接下来，使用名为 fetchListDebounce 的防抖函数并传入 false 参数。这个函数可以防止请求过于频繁地发出，通过延迟执行传递给它的函数来实现。
   * 最后，检查是否有正在进行的请求，如果有，则中止它。
   */ (0, _proutils.useDeepCompareEffect)(function() {
        abortFetch();
        fetchListDebounce.run(false);
        if (!manual) // 如果 manual 标志未设置，则将 manualRequestRef 设置为 false。
        // 用于跟踪当前的请求是否是手动发起的。
        manualRequestRef.current = false;
        return function() {
            abortFetch();
        };
    }, [].concat((0, _toConsumableArray.default)(effects), [
        manual
    ]));
    return {
        /**
     * 表格的数据列表。
     * @type {DataSource[]}
     */ dataSource: tableDataList,
        /**
     * 用于设置表格数据列表的 setter 函数。
     * @type {function}
     * @param {DataSource[]} list - 更新后的表格数据列表。
     */ setDataSource: setTableDataList,
        /**
     * 表示表格是否正在加载数据的标志。
     * @type {boolean}
     */ loading: (0, _typeof.default)(options === null || options === void 0 ? void 0 : options.loading) === 'object' ? (0, _objectSpread2.default)((0, _objectSpread2.default)({}, options === null || options === void 0 ? void 0 : options.loading), {}, {
            spinning: tableLoading
        }) : tableLoading,
        /**
     * 重新加载表格数据的函数。
     * @type {function}
     * @async
     * @returns {Promise<boolean>} - 数据重新加载完成后解决为 true 的 Promise。
     */ reload: function() {
            var _reload = (0, _asyncToGenerator.default)(/*#__PURE__*/ (0, _regeneratorRuntime.default)().mark(function _callee3() {
                return (0, _regeneratorRuntime.default)().wrap(function _callee3$(_context3) {
                    while(true)switch(_context3.prev = _context3.next){
                        case 0:
                            abortFetch();
                            return _context3.abrupt("return", fetchListDebounce.run(false));
                        case 2:
                        case "end":
                            return _context3.stop();
                    }
                }, _callee3);
            }));
            function reload() {
                return _reload.apply(this, arguments);
            }
            return reload;
        }(),
        /**
     * 当前的分页信息。
     * @type {Object}
     * @prop {number} current - 当前页码。
     * @prop {number} total - 总数据数量。
     * @prop {number} pageSize - 每页数据数量。
     */ pageInfo: pageInfo,
        /**
     * 表示表格是否正在进行轮询请求的标志。
     * @type {boolean}
     */ pollingLoading: pollingLoading,
        /**
     * 重置分页信息为其初始值的函数。
     * @type {function}
     * @async
     * @returns {Promise<void>} - 重置完成后解决的 Promise。
     */ reset: function() {
            var _reset = (0, _asyncToGenerator.default)(/*#__PURE__*/ (0, _regeneratorRuntime.default)().mark(function _callee4() {
                var _ref8, optionPageInfo, _ref9, _ref9$defaultCurrent, defaultCurrent, _ref9$defaultPageSize, defaultPageSize, initialPageInfo;
                return (0, _regeneratorRuntime.default)().wrap(function _callee4$(_context4) {
                    while(true)switch(_context4.prev = _context4.next){
                        case 0:
                            _ref8 = options || {}, optionPageInfo = _ref8.pageInfo;
                            _ref9 = optionPageInfo || {}, _ref9$defaultCurrent = _ref9.defaultCurrent, defaultCurrent = _ref9$defaultCurrent === void 0 ? 1 : _ref9$defaultCurrent, _ref9$defaultPageSize = _ref9.defaultPageSize, defaultPageSize = _ref9$defaultPageSize === void 0 ? 20 : _ref9$defaultPageSize;
                            initialPageInfo = {
                                current: defaultCurrent,
                                total: 0,
                                pageSize: defaultPageSize
                            };
                            _setPageInfo(initialPageInfo);
                        case 4:
                        case "end":
                            return _context4.stop();
                    }
                }, _callee4);
            }));
            function reset() {
                return _reset.apply(this, arguments);
            }
            return reset;
        }(),
        /**
     * 更新分页信息的函数。
     * @type {function}
     * @async
     * @param {Object} info - 新的分页信息。
     * @prop {number} [current] - 新的当前页码。
     * @prop {number} [total] - 新的总数据数量。
     * @prop {number} [pageSize] - 新的每页数据数量。
     * @returns {Promise<void>} - 更新完成后解决的 Promise。
     */ setPageInfo: function() {
            var _setPageInfo2 = (0, _asyncToGenerator.default)(/*#__PURE__*/ (0, _regeneratorRuntime.default)().mark(function _callee5(info) {
                return (0, _regeneratorRuntime.default)().wrap(function _callee5$(_context5) {
                    while(true)switch(_context5.prev = _context5.next){
                        case 0:
                            _setPageInfo((0, _objectSpread2.default)((0, _objectSpread2.default)({}, pageInfo), info));
                        case 1:
                        case "end":
                            return _context5.stop();
                    }
                }, _callee5);
            }));
            function setPageInfo(_x3) {
                return _setPageInfo2.apply(this, arguments);
            }
            return setPageInfo;
        }()
    };
};
var _default = useFetchData;

},
"node_modules/@ant-design/pro-table/es/utils/cellRenderToFromItem.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    default: function() {
        return _default;
    },
    spellNamePath: function() {
        return spellNamePath;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _toConsumableArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"));
var _objectWithoutProperties = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _slicedToArray = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/slicedToArray.js"));
var _proform = __mako_require__("node_modules/@ant-design/pro-form/es/index.js");
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _get = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/rc-util/es/utils/get.js"));
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var _excluded = [
    "children"
];
var SHOW_EMPTY_TEXT_LIST = [
    '',
    null,
    undefined
];
var spellNamePath = function spellNamePath() {
    for(var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++)rest[_key] = arguments[_key];
    return rest.filter(function(index) {
        return index !== undefined;
    }).map(function(item) {
        if (typeof item === 'number') return item.toString();
        return item;
    }).flat(1);
};
var CellRenderFromItem = function CellRenderFromItem(props) {
    var formContext = (0, _react.useContext)(_proform.FieldContext);
    var columnProps = props.columnProps, prefixName = props.prefixName, text = props.text, counter = props.counter, rowData = props.rowData, index = props.index, recordKey = props.recordKey, subName = props.subName, proFieldProps = props.proFieldProps, editableUtils = props.editableUtils;
    var editableForm = _proform.ProForm.useFormInstance();
    var key = recordKey || index;
    var realIndex = (0, _react.useMemo)(function() {
        var _editableUtils$getRea, _editableUtils$getRea2;
        return (_editableUtils$getRea = editableUtils === null || editableUtils === void 0 || (_editableUtils$getRea2 = editableUtils.getRealIndex) === null || _editableUtils$getRea2 === void 0 ? void 0 : _editableUtils$getRea2.call(editableUtils, rowData)) !== null && _editableUtils$getRea !== void 0 ? _editableUtils$getRea : index;
    }, [
        editableUtils,
        index,
        rowData
    ]);
    var _useState = (0, _react.useState)(function() {
        var _ref, _columnProps$key;
        return spellNamePath(prefixName, prefixName ? subName : [], prefixName ? realIndex : key, (_ref = (_columnProps$key = columnProps === null || columnProps === void 0 ? void 0 : columnProps.key) !== null && _columnProps$key !== void 0 ? _columnProps$key : columnProps === null || columnProps === void 0 ? void 0 : columnProps.dataIndex) !== null && _ref !== void 0 ? _ref : index);
    }), _useState2 = (0, _slicedToArray.default)(_useState, 2), formItemName = _useState2[0], setName = _useState2[1];
    var rowName = (0, _react.useMemo)(function() {
        return formItemName.slice(0, -1);
    }, [
        formItemName
    ]);
    (0, _react.useEffect)(function() {
        var _ref2, _columnProps$key2;
        var value = spellNamePath(prefixName, prefixName ? subName : [], prefixName ? realIndex : key, (_ref2 = (_columnProps$key2 = columnProps === null || columnProps === void 0 ? void 0 : columnProps.key) !== null && _columnProps$key2 !== void 0 ? _columnProps$key2 : columnProps === null || columnProps === void 0 ? void 0 : columnProps.dataIndex) !== null && _ref2 !== void 0 ? _ref2 : index);
        if (value.join('-') !== formItemName.join('-')) setName(value);
    }, [
        columnProps === null || columnProps === void 0 ? void 0 : columnProps.dataIndex,
        columnProps === null || columnProps === void 0 ? void 0 : columnProps.key,
        index,
        recordKey,
        prefixName,
        key,
        subName,
        formItemName,
        realIndex
    ]);
    var needProps = (0, _react.useMemo)(function() {
        return [
            editableForm,
            (0, _objectSpread2.default)((0, _objectSpread2.default)({}, columnProps), {}, {
                rowKey: rowName,
                rowIndex: index,
                isEditable: true
            })
        ];
    }, [
        columnProps,
        editableForm,
        index,
        rowName
    ]);
    var InlineItem = (0, _react.useCallback)(function(_ref3) {
        var children = _ref3.children, restProps = (0, _objectWithoutProperties.default)(_ref3, _excluded);
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_proutils.InlineErrorFormItem, (0, _objectSpread2.default)((0, _objectSpread2.default)({
            popoverProps: {
                getPopupContainer: formContext.getPopupContainer || function() {
                    return counter.rootDomRef.current || document.body;
                }
            },
            errorType: "popover",
            name: formItemName
        }, restProps), {}, {
            children: children
        }), key);
    }, // eslint-disable-next-line react-hooks/exhaustive-deps
    [
        key,
        formItemName
    ]);
    var generateFormItem = (0, _react.useCallback)(function() {
        var _ref4, _ref5;
        var formItemProps = (0, _objectSpread2.default)({}, _proutils.getFieldPropsOrFormItemProps.apply(void 0, [
            columnProps === null || columnProps === void 0 ? void 0 : columnProps.formItemProps
        ].concat((0, _toConsumableArray.default)(needProps))));
        formItemProps.messageVariables = (0, _objectSpread2.default)({
            label: (columnProps === null || columnProps === void 0 ? void 0 : columnProps.title) || '此项',
            type: (columnProps === null || columnProps === void 0 ? void 0 : columnProps.valueType) || '文本'
        }, formItemProps === null || formItemProps === void 0 ? void 0 : formItemProps.messageVariables);
        formItemProps.initialValue = (_ref4 = (_ref5 = prefixName ? null : text) !== null && _ref5 !== void 0 ? _ref5 : formItemProps === null || formItemProps === void 0 ? void 0 : formItemProps.initialValue) !== null && _ref4 !== void 0 ? _ref4 : columnProps === null || columnProps === void 0 ? void 0 : columnProps.initialValue;
        var fieldDom = /*#__PURE__*/ (0, _jsxruntime.jsx)(_proform.ProFormField, (0, _objectSpread2.default)({
            cacheForSwr: true,
            name: formItemName,
            proFormFieldKey: key,
            ignoreFormItem: true,
            fieldProps: _proutils.getFieldPropsOrFormItemProps.apply(void 0, [
                columnProps === null || columnProps === void 0 ? void 0 : columnProps.fieldProps
            ].concat((0, _toConsumableArray.default)(needProps)))
        }, proFieldProps), formItemName.join('-'));
        /**
     * 如果没有自定义直接返回
     */ if (columnProps !== null && columnProps !== void 0 && columnProps.renderFormItem) {
            fieldDom = columnProps.renderFormItem((0, _objectSpread2.default)((0, _objectSpread2.default)({}, columnProps), {}, {
                index: index,
                isEditable: true,
                type: 'table'
            }), {
                defaultRender: function defaultRender() {
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
                        children: fieldDom
                    });
                },
                type: 'form',
                recordKey: recordKey,
                record: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, rowData), editableForm === null || editableForm === void 0 ? void 0 : editableForm.getFieldValue([
                    key
                ])),
                isEditable: true
            }, editableForm, props.editableUtils);
            // 如果需要完全自定义可以不要name
            if (columnProps.ignoreFormItem) return /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
                children: fieldDom
            });
        }
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(InlineItem, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, formItemProps), {}, {
            children: fieldDom
        }), formItemName.join('-'));
    }, [
        columnProps,
        needProps,
        prefixName,
        text,
        key,
        formItemName,
        proFieldProps,
        InlineItem,
        index,
        recordKey,
        rowData,
        editableForm,
        props.editableUtils
    ]);
    if (formItemName.length === 0) return null;
    if (typeof (columnProps === null || columnProps === void 0 ? void 0 : columnProps.renderFormItem) === 'function' || typeof (columnProps === null || columnProps === void 0 ? void 0 : columnProps.fieldProps) === 'function' || typeof (columnProps === null || columnProps === void 0 ? void 0 : columnProps.formItemProps) === 'function') return /*#__PURE__*/ (0, _jsxruntime.jsx)(_antd.Form.Item, {
        noStyle: true,
        shouldUpdate: function shouldUpdate(pre, next) {
            if (pre === next) return false;
            var shouldName = [
                rowName
            ].flat(1);
            try {
                return JSON.stringify((0, _get.default)(pre, shouldName)) !== JSON.stringify((0, _get.default)(next, shouldName));
            } catch (error) {
                return true;
            }
        },
        children: function children() {
            return generateFormItem();
        }
    });
    return generateFormItem();
};
/**
 * 根据不同的类型来转化数值
 *
 * @param text
 * @param valueType
 */ function cellRenderToFromItem(config) {
    var _columnProps$dataInde, _config$recordKey;
    var text = config.text, valueType = config.valueType, rowData = config.rowData, columnProps = config.columnProps, index = config.index;
    // 如果 valueType === text ，没必要多走一次 render
    if ((!valueType || [
        'textarea',
        'text'
    ].includes(valueType.toString())) && // valueEnum 存在说明是个select
    !(columnProps !== null && columnProps !== void 0 && columnProps.valueEnum) && config.mode === 'read') // 如果是''、null、undefined 显示columnEmptyText
    return SHOW_EMPTY_TEXT_LIST.includes(text) ? config.columnEmptyText : text;
    if (typeof valueType === 'function' && rowData) // 防止valueType是函数,并且text是''、null、undefined跳过显式设置的columnEmptyText
    return cellRenderToFromItem((0, _objectSpread2.default)((0, _objectSpread2.default)({}, config), {}, {
        valueType: valueType(rowData, config.type) || 'text'
    }));
    var columnKey = (columnProps === null || columnProps === void 0 ? void 0 : columnProps.key) || (columnProps === null || columnProps === void 0 || (_columnProps$dataInde = columnProps.dataIndex) === null || _columnProps$dataInde === void 0 ? void 0 : _columnProps$dataInde.toString());
    var dependencies = columnProps !== null && columnProps !== void 0 && columnProps.dependencies ? [
        config.prefixName,
        config.prefixName ? index === null || index === void 0 ? void 0 : index.toString() : (_config$recordKey = config.recordKey) === null || _config$recordKey === void 0 ? void 0 : _config$recordKey.toString(),
        columnProps === null || columnProps === void 0 ? void 0 : columnProps.dependencies
    ].filter(Boolean).flat(1) : [];
    /**
   * 生成公用的 proField dom 配置
   */ var proFieldProps = {
        valueEnum: (0, _proutils.runFunction)(columnProps === null || columnProps === void 0 ? void 0 : columnProps.valueEnum, rowData),
        request: columnProps === null || columnProps === void 0 ? void 0 : columnProps.request,
        dependencies: columnProps !== null && columnProps !== void 0 && columnProps.dependencies ? [
            dependencies
        ] : undefined,
        originDependencies: columnProps !== null && columnProps !== void 0 && columnProps.dependencies ? [
            columnProps === null || columnProps === void 0 ? void 0 : columnProps.dependencies
        ] : undefined,
        params: (0, _proutils.runFunction)(columnProps === null || columnProps === void 0 ? void 0 : columnProps.params, rowData, columnProps),
        readonly: columnProps === null || columnProps === void 0 ? void 0 : columnProps.readonly,
        text: valueType === 'index' || valueType === 'indexBorder' ? config.index : text,
        mode: config.mode,
        renderFormItem: undefined,
        valueType: valueType,
        // @ts-ignore
        record: rowData,
        proFieldProps: {
            emptyText: config.columnEmptyText,
            proFieldKey: columnKey ? "table-field-".concat(columnKey) : undefined
        }
    };
    /** 只读模式直接返回就好了，不需要处理 formItem */ if (config.mode !== 'edit') return /*#__PURE__*/ (0, _jsxruntime.jsx)(_proform.ProFormField, (0, _objectSpread2.default)({
        mode: "read",
        ignoreFormItem: true,
        fieldProps: (0, _proutils.getFieldPropsOrFormItemProps)(columnProps === null || columnProps === void 0 ? void 0 : columnProps.fieldProps, null, columnProps)
    }, proFieldProps));
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(CellRenderFromItem, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, config), {}, {
        proFieldProps: proFieldProps
    }), config.recordKey);
}
var _default = cellRenderToFromItem;

},
"node_modules/@ant-design/pro-table/es/utils/columnRender.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    columnRender: function() {
        return columnRender;
    },
    defaultOnFilter: function() {
        return defaultOnFilter;
    },
    renderColumnsTitle: function() {
        return renderColumnsTitle;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _typeof = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/typeof.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _get = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/rc-util/es/utils/get.js"));
var _react = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/react/index.js"));
var _ = __mako_require__("node_modules/@ant-design/pro-table/es/utils/index.js");
var _cellRenderToFromItem = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/es/utils/cellRenderToFromItem.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var renderColumnsTitle = function renderColumnsTitle(item) {
    var _item$ellipsis;
    var title = item.title;
    var ellipsis = typeof (item === null || item === void 0 ? void 0 : item.ellipsis) === 'boolean' ? item === null || item === void 0 ? void 0 : item.ellipsis : item === null || item === void 0 || (_item$ellipsis = item.ellipsis) === null || _item$ellipsis === void 0 ? void 0 : _item$ellipsis.showTitle;
    if (title && typeof title === 'function') return title(item, 'table', /*#__PURE__*/ (0, _jsxruntime.jsx)(_proutils.LabelIconTip, {
        label: null,
        tooltip: item.tooltip || item.tip
    }));
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_proutils.LabelIconTip, {
        label: title,
        tooltip: item.tooltip || item.tip,
        ellipsis: ellipsis
    });
};
/** 判断是否为不可编辑的单元格 */ function isNotEditableCell(text, rowData, index, editable) {
    if (typeof editable === 'boolean') return editable === false;
    return (editable === null || editable === void 0 ? void 0 : editable(text, rowData, index)) === false;
}
var defaultOnFilter = function defaultOnFilter(value, record, dataIndex) {
    var recordElement = Array.isArray(dataIndex) ? (0, _get.default)(record, dataIndex) : record[dataIndex];
    var itemValue = String(recordElement);
    return String(itemValue) === String(value);
};
function columnRender(_ref) {
    var columnProps = _ref.columnProps, text = _ref.text, rowData = _ref.rowData, index = _ref.index, columnEmptyText = _ref.columnEmptyText, counter = _ref.counter, type = _ref.type, subName = _ref.subName, marginSM = _ref.marginSM, editableUtils = _ref.editableUtils;
    var action = counter.action, prefixName = counter.prefixName;
    var _editableUtils$isEdit = editableUtils.isEditable((0, _objectSpread2.default)((0, _objectSpread2.default)({}, rowData), {}, {
        index: index
    })), isEditable = _editableUtils$isEdit.isEditable, recordKey = _editableUtils$isEdit.recordKey;
    var _columnProps$renderTe = columnProps.renderText, renderText = _columnProps$renderTe === void 0 ? function(val) {
        return val;
    } : _columnProps$renderTe;
    var renderTextStr = renderText(text, rowData, index, action);
    var mode = isEditable && !isNotEditableCell(text, rowData, index, columnProps === null || columnProps === void 0 ? void 0 : columnProps.editable) ? 'edit' : 'read';
    var textDom = (0, _cellRenderToFromItem.default)({
        text: renderTextStr,
        valueType: columnProps.valueType || 'text',
        index: index,
        rowData: rowData,
        subName: subName,
        columnProps: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, columnProps), {}, {
            // 为了兼容性，原来写了个错别字
            // @ts-ignore
            entry: rowData,
            entity: rowData
        }),
        counter: counter,
        columnEmptyText: columnEmptyText,
        type: type,
        recordKey: recordKey,
        mode: mode,
        prefixName: prefixName,
        editableUtils: editableUtils
    });
    var dom = mode === 'edit' ? textDom : (0, _proutils.genCopyable)(textDom, columnProps, renderTextStr);
    /** 如果是编辑模式，并且 renderFormItem 存在直接走 renderFormItem */ if (mode === 'edit') {
        if (columnProps.valueType === 'option') return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            style: {
                display: 'flex',
                alignItems: 'center',
                gap: marginSM,
                justifyContent: columnProps.align === 'center' ? 'center' : 'flex-start'
            },
            children: editableUtils.actionRender((0, _objectSpread2.default)((0, _objectSpread2.default)({}, rowData), {}, {
                index: columnProps.index || index
            }))
        });
        return dom;
    }
    if (!columnProps.render) {
        var isReactRenderNode = /*#__PURE__*/ _react.default.isValidElement(dom) || [
            'string',
            'number'
        ].includes((0, _typeof.default)(dom));
        return !(0, _proutils.isNil)(dom) && isReactRenderNode ? dom : null;
    }
    var renderDom = columnProps.render(dom, rowData, index, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, action), editableUtils), (0, _objectSpread2.default)((0, _objectSpread2.default)({}, columnProps), {}, {
        isEditable: isEditable,
        type: 'table'
    }));
    // 如果是合并单元格的，直接返回对象
    if ((0, _.isMergeCell)(renderDom)) return renderDom;
    if (renderDom && columnProps.valueType === 'option' && Array.isArray(renderDom)) return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        style: {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'flex-start',
            gap: 8
        },
        children: renderDom
    });
    return renderDom;
}

},
"node_modules/@ant-design/pro-table/es/utils/columnSort.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "columnSort", {
    enumerable: true,
    get: function() {
        return columnSort;
    }
});
var columnSort = function columnSort(columnsMap) {
    return function(a, b) {
        var _columnsMap$aKey, _columnsMap$bKey;
        var aFixed = a.fixed, aIndex = a.index;
        var bFixed = b.fixed, bIndex = b.index;
        if (aFixed === 'left' && bFixed !== 'left' || bFixed === 'right' && aFixed !== 'right') return -2;
        if (bFixed === 'left' && aFixed !== 'left' || aFixed === 'right' && bFixed !== 'right') return 2;
        // 如果没有index，在 dataIndex 或者 key 不存在的时候他会报错
        var aKey = a.key || "".concat(aIndex);
        var bKey = b.key || "".concat(bIndex);
        if ((_columnsMap$aKey = columnsMap[aKey]) !== null && _columnsMap$aKey !== void 0 && _columnsMap$aKey.order || (_columnsMap$bKey = columnsMap[bKey]) !== null && _columnsMap$bKey !== void 0 && _columnsMap$bKey.order) {
            var _columnsMap$aKey2, _columnsMap$bKey2;
            return (((_columnsMap$aKey2 = columnsMap[aKey]) === null || _columnsMap$aKey2 === void 0 ? void 0 : _columnsMap$aKey2.order) || 0) - (((_columnsMap$bKey2 = columnsMap[bKey]) === null || _columnsMap$bKey2 === void 0 ? void 0 : _columnsMap$bKey2.order) || 0);
        }
        return (a.index || 0) - (b.index || 0);
    };
};

},
"node_modules/@ant-design/pro-table/es/utils/genProColumnToColumn.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "genProColumnToColumn", {
    enumerable: true,
    get: function() {
        return genProColumnToColumn;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _typeof = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/typeof.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _profield = __mako_require__("node_modules/@ant-design/pro-field/es/index.js");
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _antd = __mako_require__("node_modules/antd/es/index.js");
var _columnRender = __mako_require__("node_modules/@ant-design/pro-table/es/utils/columnRender.js");
var _index = __mako_require__("node_modules/@ant-design/pro-table/es/utils/index.js");
function genProColumnToColumn(params, parents) {
    var _columns$map;
    var columns = params.columns, counter = params.counter, columnEmptyText = params.columnEmptyText, type = params.type, editableUtils = params.editableUtils, marginSM = params.marginSM, _params$rowKey = params.rowKey, rowKey = _params$rowKey === void 0 ? 'id' : _params$rowKey, _params$childrenColum = params.childrenColumnName, childrenColumnName = _params$childrenColum === void 0 ? 'children' : _params$childrenColum;
    var subNameRecord = new Map();
    return columns === null || columns === void 0 || (_columns$map = columns.map(function(columnProps, columnsIndex) {
        if (columnProps === _antd.Table.EXPAND_COLUMN) return columnProps;
        if (columnProps === _antd.Table.SELECTION_COLUMN) return columnProps;
        var _ref = columnProps, key = _ref.key, dataIndex = _ref.dataIndex, valueEnum = _ref.valueEnum, _ref$valueType = _ref.valueType, valueType = _ref$valueType === void 0 ? 'text' : _ref$valueType, children = _ref.children, onFilter = _ref.onFilter, _ref$filters = _ref.filters, filters = _ref$filters === void 0 ? [] : _ref$filters;
        var columnKey = (0, _index.genColumnKey)(key || (dataIndex === null || dataIndex === void 0 ? void 0 : dataIndex.toString()), [
            parents === null || parents === void 0 ? void 0 : parents.key,
            columnsIndex
        ].filter(Boolean).join('-'));
        // 这些都没有，说明是普通的表格不需要 pro 管理
        var noNeedPro = !valueEnum && !valueType && !children;
        if (noNeedPro) return (0, _objectSpread2.default)({
            index: columnsIndex
        }, columnProps);
        var config = counter.columnsMap[columnKey] || {
            fixed: columnProps.fixed
        };
        var genOnFilter = function genOnFilter() {
            if (onFilter === true) return function(value, row) {
                return (0, _columnRender.defaultOnFilter)(value, row, dataIndex);
            };
            return (0, _proutils.omitBoolean)(onFilter);
        };
        var keyName = rowKey;
        var tempColumns = (0, _objectSpread2.default)((0, _objectSpread2.default)({
            index: columnsIndex,
            key: columnKey
        }, columnProps), {}, {
            title: (0, _columnRender.renderColumnsTitle)(columnProps),
            valueEnum: valueEnum,
            filters: filters === true ? (0, _profield.proFieldParsingValueEnumToArray)((0, _proutils.runFunction)(valueEnum, undefined)).filter(function(valueItem) {
                return valueItem && valueItem.value !== 'all';
            }) : filters,
            onFilter: genOnFilter(),
            fixed: config.fixed,
            width: columnProps.width || (columnProps.fixed ? 200 : undefined),
            children: columnProps.children ? genProColumnToColumn((0, _objectSpread2.default)((0, _objectSpread2.default)({}, params), {}, {
                columns: (columnProps === null || columnProps === void 0 ? void 0 : columnProps.children) || []
            }), (0, _objectSpread2.default)((0, _objectSpread2.default)({}, columnProps), {}, {
                key: columnKey
            })) : undefined,
            render: function render(text, rowData, index) {
                if (typeof rowKey === 'function') keyName = rowKey(rowData, index);
                var uniqueKey;
                if ((0, _typeof.default)(rowData) === 'object' && rowData !== null && Reflect.has(rowData, keyName)) {
                    var _childrenColumnName;
                    uniqueKey = rowData[keyName];
                    var parentInfo = subNameRecord.get(uniqueKey) || [];
                    (_childrenColumnName = rowData[childrenColumnName]) === null || _childrenColumnName === void 0 || _childrenColumnName.forEach(function(item) {
                        var itemUniqueKey = item[keyName];
                        if (!subNameRecord.has(itemUniqueKey)) subNameRecord.set(itemUniqueKey, parentInfo.concat([
                            index,
                            childrenColumnName
                        ]));
                    });
                }
                var renderProps = {
                    columnProps: columnProps,
                    text: text,
                    rowData: rowData,
                    index: index,
                    columnEmptyText: columnEmptyText,
                    counter: counter,
                    type: type,
                    marginSM: marginSM,
                    subName: subNameRecord.get(uniqueKey),
                    editableUtils: editableUtils
                };
                return (0, _columnRender.columnRender)(renderProps);
            }
        });
        return (0, _proutils.omitUndefinedAndEmptyArr)(tempColumns);
    })) === null || _columns$map === void 0 ? void 0 : _columns$map.filter(function(item) {
        return !item.hideInTable;
    });
}

},
"node_modules/@ant-design/pro-table/es/utils/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    checkUndefinedOrNull: function() {
        return checkUndefinedOrNull;
    },
    genColumnKey: function() {
        return genColumnKey;
    },
    isBordered: function() {
        return isBordered;
    },
    isMergeCell: function() {
        return isMergeCell;
    },
    mergePagination: function() {
        return mergePagination;
    },
    parseDefaultColumnConfig: function() {
        return parseDefaultColumnConfig;
    },
    postDataPipeline: function() {
        return postDataPipeline;
    },
    useActionType: function() {
        return useActionType;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _regeneratorRuntime = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js"));
var _asyncToGenerator = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _typeof = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/typeof.js"));
var checkUndefinedOrNull = function checkUndefinedOrNull(value) {
    return value !== undefined && value !== null;
};
function mergePagination(pagination, pageInfo, intl) {
    var _pagination$current, _pagination$pageSize;
    if (pagination === false) return false;
    var total = pageInfo.total, current = pageInfo.current, pageSize = pageInfo.pageSize, setPageInfo = pageInfo.setPageInfo;
    var defaultPagination = (0, _typeof.default)(pagination) === 'object' ? pagination : {};
    return (0, _objectSpread2.default)((0, _objectSpread2.default)({
        showTotal: function showTotal(all, range) {
            return "".concat(intl.getMessage('pagination.total.range', '第'), " ").concat(range[0], "-").concat(range[1], " ").concat(intl.getMessage('pagination.total.total', '条/总共'), " ").concat(all, " ").concat(intl.getMessage('pagination.total.item', '条'));
        },
        total: total
    }, defaultPagination), {}, {
        current: pagination !== true && pagination ? (_pagination$current = pagination.current) !== null && _pagination$current !== void 0 ? _pagination$current : current : current,
        pageSize: pagination !== true && pagination ? (_pagination$pageSize = pagination.pageSize) !== null && _pagination$pageSize !== void 0 ? _pagination$pageSize : pageSize : pageSize,
        onChange: function onChange(page, newPageSize) {
            var _ref = pagination, onChange = _ref.onChange;
            onChange === null || onChange === void 0 || onChange(page, newPageSize || 20);
            // pageSize 改变之后就没必要切换页码
            if (newPageSize !== pageSize || current !== page) setPageInfo({
                pageSize: newPageSize,
                current: page
            });
        }
    });
}
function useActionType(ref, action, props) {
    /** 这里生成action的映射，保证 action 总是使用的最新 只需要渲染一次即可 */ var userAction = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, props.editableUtils), {}, {
        pageInfo: action.pageInfo,
        reload: function() {
            var _reload = (0, _asyncToGenerator.default)(/*#__PURE__*/ (0, _regeneratorRuntime.default)().mark(function _callee(resetPageIndex) {
                return (0, _regeneratorRuntime.default)().wrap(function _callee$(_context) {
                    while(true)switch(_context.prev = _context.next){
                        case 0:
                            if (!resetPageIndex) {
                                _context.next = 3;
                                break;
                            }
                            _context.next = 3;
                            return action.setPageInfo({
                                current: 1
                            });
                        case 3:
                            _context.next = 5;
                            return action === null || action === void 0 ? void 0 : action.reload();
                        case 5:
                        case "end":
                            return _context.stop();
                    }
                }, _callee);
            }));
            function reload(_x) {
                return _reload.apply(this, arguments);
            }
            return reload;
        }(),
        reloadAndRest: function() {
            var _reloadAndRest = (0, _asyncToGenerator.default)(/*#__PURE__*/ (0, _regeneratorRuntime.default)().mark(function _callee2() {
                return (0, _regeneratorRuntime.default)().wrap(function _callee2$(_context2) {
                    while(true)switch(_context2.prev = _context2.next){
                        case 0:
                            // reload 之后大概率会切换数据，清空一下选择。
                            props.onCleanSelected();
                            _context2.next = 3;
                            return action.setPageInfo({
                                current: 1
                            });
                        case 3:
                            _context2.next = 5;
                            return action === null || action === void 0 ? void 0 : action.reload();
                        case 5:
                        case "end":
                            return _context2.stop();
                    }
                }, _callee2);
            }));
            function reloadAndRest() {
                return _reloadAndRest.apply(this, arguments);
            }
            return reloadAndRest;
        }(),
        reset: function() {
            var _reset = (0, _asyncToGenerator.default)(/*#__PURE__*/ (0, _regeneratorRuntime.default)().mark(function _callee3() {
                var _action$reset;
                return (0, _regeneratorRuntime.default)().wrap(function _callee3$(_context3) {
                    while(true)switch(_context3.prev = _context3.next){
                        case 0:
                            _context3.next = 2;
                            return props.resetAll();
                        case 2:
                            _context3.next = 4;
                            return action === null || action === void 0 || (_action$reset = action.reset) === null || _action$reset === void 0 ? void 0 : _action$reset.call(action);
                        case 4:
                            _context3.next = 6;
                            return action === null || action === void 0 ? void 0 : action.reload();
                        case 6:
                        case "end":
                            return _context3.stop();
                    }
                }, _callee3);
            }));
            function reset() {
                return _reset.apply(this, arguments);
            }
            return reset;
        }(),
        fullScreen: function fullScreen() {
            return props.fullScreen();
        },
        clearSelected: function clearSelected() {
            return props.onCleanSelected();
        },
        setPageInfo: function setPageInfo(rest) {
            return action.setPageInfo(rest);
        }
    });
    // eslint-disable-next-line no-param-reassign
    ref.current = userAction;
}
function postDataPipeline(data, pipeline) {
    if (pipeline.filter(function(item) {
        return item;
    }).length < 1) return data;
    return pipeline.reduce(function(pre, postData) {
        return postData(pre);
    }, data);
}
var isBordered = function isBordered(borderType, border) {
    if (border === undefined) return false;
    if (typeof border === 'boolean') return border;
    return border[borderType];
};
var isMergeCell = function isMergeCell(dom // 如果是合并单元格的，直接返回对象
) {
    var _dom$props;
    return dom && (0, _typeof.default)(dom) === 'object' && (dom === null || dom === void 0 || (_dom$props = dom.props) === null || _dom$props === void 0 ? void 0 : _dom$props.colSpan);
};
var genColumnKey = function genColumnKey(key, index) {
    if (key) return Array.isArray(key) ? key.join('-') : key.toString();
    return "".concat(index);
};
/**
 * 将 ProTable - column - dataIndex 转为字符串形式
 *
 * @param dataIndex Column 中的 dataIndex
 */ function parseDataIndex(dataIndex) {
    if (Array.isArray(dataIndex)) return dataIndex.join(',');
    return dataIndex === null || dataIndex === void 0 ? void 0 : dataIndex.toString();
}
function parseDefaultColumnConfig(columns) {
    var filter = {};
    var sort = {};
    columns.forEach(function(column) {
        // 转换 dataIndex
        var dataIndex = parseDataIndex(column.dataIndex);
        if (!dataIndex) return;
        // 当 column 启用 filters 功能时，取出默认的筛选值
        if (column.filters) {
            var defaultFilteredValue = column.defaultFilteredValue;
            if (defaultFilteredValue === undefined) filter[dataIndex] = null;
            else filter[dataIndex] = column.defaultFilteredValue;
        }
        // 当 column 启用 sorter 功能时，取出默认的排序值
        if (column.sorter && column.defaultSortOrder) sort[dataIndex] = column.defaultSortOrder;
    });
    return {
        sort: sort,
        filter: filter
    };
}

},
"node_modules/@ant-design/pro-table/es/utils/useDragSort.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "useDragSort", {
    enumerable: true,
    get: function() {
        return useDragSort;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _objectDestructuringEmpty = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"));
var _objectWithoutProperties = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"));
var _objectSpread2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@babel/runtime/helpers/esm/objectSpread2.js"));
var _proutils = __mako_require__("node_modules/@ant-design/pro-utils/es/index.js");
var _core = __mako_require__("node_modules/@dnd-kit/core/dist/core.esm.js");
var _modifiers = __mako_require__("node_modules/@dnd-kit/modifiers/dist/modifiers.esm.js");
var _sortable = __mako_require__("node_modules/@dnd-kit/sortable/dist/sortable.esm.js");
var _utilities = __mako_require__("node_modules/@dnd-kit/utilities/dist/utilities.esm.js");
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _jsxruntime = __mako_require__("node_modules/react/jsx-runtime.js");
var _excluded = [
    "DragHandle",
    "dragSortKey"
];
var _excluded2 = [
    "dragSortKey"
];
var SortableItemContextValue = /*#__PURE__*/ (0, _react.createContext)({
    handle: null
});
/**
 * 拖拽排序表格的行，
 * 如果有 DragHandle 回给 dragSortKey 所在的行注入 provide 和 handle
 * 如果没有整个行都支持拖拽
 * @param props
 * @returns
 */ var SortableRow = function SortableRow(props) {
    var _useSortable = (0, _sortable.useSortable)({
        id: props.id
    }), attributes = _useSortable.attributes, listeners = _useSortable.listeners, setNodeRef = _useSortable.setNodeRef, transform = _useSortable.transform, transition = _useSortable.transition;
    var style = (0, _objectSpread2.default)({
        transform: _utilities.CSS.Transform.toString(transform),
        transition: transition
    }, props === null || props === void 0 ? void 0 : props.style);
    var DragHandle = props.DragHandle, dragSortKey = props.dragSortKey, rest = (0, _objectWithoutProperties.default)(props, _excluded);
    if (dragSortKey) {
        var doms = [];
        _react.default.Children.forEach(rest.children, function(child, index) {
            if (child.key === dragSortKey) {
                var _child$props, _child$props2;
                doms.push(/*#__PURE__*/ (0, _jsxruntime.jsx)(SortableItemContextValue.Provider, {
                    value: {
                        handle: /*#__PURE__*/ (0, _jsxruntime.jsx)(DragHandle, (0, _objectSpread2.default)((0, _objectSpread2.default)({
                            rowData: child === null || child === void 0 || (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.record,
                            index: child === null || child === void 0 || (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.index
                        }, listeners), attributes))
                    },
                    children: child
                }, child.key || index));
                return;
            }
            doms.push(child);
        });
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("tr", (0, _objectSpread2.default)((0, _objectSpread2.default)({}, rest), {}, {
            ref: setNodeRef,
            style: style,
            children: doms
        }));
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("tr", (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, rest), {}, {
        ref: setNodeRef,
        style: style
    }, attributes), listeners));
};
/**
 * 拖拽排序表格的 cell，用与判断要不要展示 handle
 */ var SortableItemCell = /*#__PURE__*/ _react.default.memo(function(props) {
    var dragSortKey = props.dragSortKey, rest = (0, _objectWithoutProperties.default)(props, _excluded2);
    var _useContext = (0, _react.useContext)(SortableItemContextValue), handle = _useContext.handle;
    if (handle) return /*#__PURE__*/ (0, _jsxruntime.jsx)("td", (0, _objectSpread2.default)((0, _objectSpread2.default)({}, rest), {}, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            style: {
                display: 'flex',
                alignItems: 'center'
            },
            children: [
                handle,
                " ",
                rest.children
            ]
        })
    }));
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("td", (0, _objectSpread2.default)({}, rest));
});
var SortContainer = function SortContainer(p) {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("tbody", (0, _objectSpread2.default)({}, p));
};
function useDragSort(props) {
    var _props$dataSource = props.dataSource, dataSource = _props$dataSource === void 0 ? [] : _props$dataSource, onDragSortEnd = props.onDragSortEnd, DragHandle = props.DragHandle, dragSortKey = props.dragSortKey;
    var sensors = (0, _core.useSensors)((0, _core.useSensor)(_core.PointerSensor), (0, _core.useSensor)(_core.MouseSensor));
    var handleDragEnd = (0, _react.useCallback)(function(event) {
        var _over$id;
        var active = event.active, over = event.over;
        if (over !== null && over !== void 0 && (_over$id = over.id) !== null && _over$id !== void 0 && _over$id.toString() && active.id !== (over === null || over === void 0 ? void 0 : over.id)) {
            var newData = (0, _sortable.arrayMove)(dataSource || [], parseInt(active.id), parseInt(over.id));
            onDragSortEnd === null || onDragSortEnd === void 0 || onDragSortEnd(parseInt(active.id), parseInt(over.id), newData || []);
        }
    }, [
        dataSource,
        onDragSortEnd
    ]);
    var DraggableContainer = (0, _proutils.useRefFunction)(function(p) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_sortable.SortableContext, {
            items: dataSource.map(function(_, index) {
                return index === null || index === void 0 ? void 0 : index.toString();
            }),
            strategy: _sortable.verticalListSortingStrategy,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(SortContainer, (0, _objectSpread2.default)({}, p))
        });
    });
    var DraggableBodyRow = (0, _proutils.useRefFunction)(function(p) {
        var _dataSource$findIndex;
        var restProps = Object.assign({}, ((0, _objectDestructuringEmpty.default)(p), p));
        // function findIndex base on Table rowKey props and should always be a right array index
        var index = (_dataSource$findIndex = dataSource.findIndex(function(item) {
            var _props$rowKey;
            return item[(_props$rowKey = props.rowKey) !== null && _props$rowKey !== void 0 ? _props$rowKey : 'index'] === restProps['data-row-key'];
        })) === null || _dataSource$findIndex === void 0 ? void 0 : _dataSource$findIndex.toString();
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(SortableRow, (0, _objectSpread2.default)({
            id: index,
            dragSortKey: dragSortKey,
            DragHandle: DragHandle
        }, restProps), index);
    });
    var components = props.components || {};
    if (dragSortKey) {
        var _props$components;
        components.body = (0, _objectSpread2.default)({
            wrapper: DraggableContainer,
            row: DraggableBodyRow,
            cell: SortableItemCell
        }, ((_props$components = props.components) === null || _props$components === void 0 ? void 0 : _props$components.body) || {});
    }
    var memoDndContext = (0, _react.useMemo)(function() {
        return function(contextProps) {
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_core.DndContext, {
                modifiers: [
                    _modifiers.restrictToVerticalAxis
                ],
                sensors: sensors,
                collisionDetection: _core.closestCenter,
                onDragEnd: handleDragEnd,
                children: contextProps.children
            });
        };
    }, [
        handleDragEnd,
        sensors
    ]);
    return {
        DndContext: memoDndContext,
        components: components
    };
}

},
"node_modules/@ant-design/pro-table/node_modules/@ant-design/colors/es/generate.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return generate;
    }
});
var _fastcolor = __mako_require__("node_modules/@ant-design/fast-color/es/index.js");
var hueStep = 2; // 色相阶梯
var saturationStep = 0.16; // 饱和度阶梯，浅色部分
var saturationStep2 = 0.05; // 饱和度阶梯，深色部分
var brightnessStep1 = 0.05; // 亮度阶梯，浅色部分
var brightnessStep2 = 0.15; // 亮度阶梯，深色部分
var lightColorCount = 5; // 浅色数量，主色上
var darkColorCount = 4; // 深色数量，主色下
// 暗色主题颜色映射关系表
var darkColorMap = [
    {
        index: 7,
        amount: 15
    },
    {
        index: 6,
        amount: 25
    },
    {
        index: 5,
        amount: 30
    },
    {
        index: 5,
        amount: 45
    },
    {
        index: 5,
        amount: 65
    },
    {
        index: 5,
        amount: 85
    },
    {
        index: 4,
        amount: 90
    },
    {
        index: 3,
        amount: 95
    },
    {
        index: 2,
        amount: 97
    },
    {
        index: 1,
        amount: 98
    }
];
function getHue(hsv, i, light) {
    var hue;
    // 根据色相不同，色相转向不同
    if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;
    else hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;
    if (hue < 0) hue += 360;
    else if (hue >= 360) hue -= 360;
    return hue;
}
function getSaturation(hsv, i, light) {
    // grey color don't change saturation
    if (hsv.h === 0 && hsv.s === 0) return hsv.s;
    var saturation;
    if (light) saturation = hsv.s - saturationStep * i;
    else if (i === darkColorCount) saturation = hsv.s + saturationStep;
    else saturation = hsv.s + saturationStep2 * i;
    // 边界值修正
    if (saturation > 1) saturation = 1;
    // 第一格的 s 限制在 0.06-0.1 之间
    if (light && i === lightColorCount && saturation > 0.1) saturation = 0.1;
    if (saturation < 0.06) saturation = 0.06;
    return Math.round(saturation * 100) / 100;
}
function getValue(hsv, i, light) {
    var value;
    if (light) value = hsv.v + brightnessStep1 * i;
    else value = hsv.v - brightnessStep2 * i;
    // Clamp value between 0 and 1
    value = Math.max(0, Math.min(1, value));
    return Math.round(value * 100) / 100;
}
function generate(color) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var patterns = [];
    var pColor = new _fastcolor.FastColor(color);
    var hsv = pColor.toHsv();
    for(var i = lightColorCount; i > 0; i -= 1){
        var c = new _fastcolor.FastColor({
            h: getHue(hsv, i, true),
            s: getSaturation(hsv, i, true),
            v: getValue(hsv, i, true)
        });
        patterns.push(c);
    }
    patterns.push(pColor);
    for(var _i = 1; _i <= darkColorCount; _i += 1){
        var _c = new _fastcolor.FastColor({
            h: getHue(hsv, _i),
            s: getSaturation(hsv, _i),
            v: getValue(hsv, _i)
        });
        patterns.push(_c);
    }
    // dark theme patterns
    if (opts.theme === 'dark') return darkColorMap.map(function(_ref) {
        var index = _ref.index, amount = _ref.amount;
        return new _fastcolor.FastColor(opts.backgroundColor || '#141414').mix(patterns[index], amount).toHexString();
    });
    return patterns.map(function(c) {
        return c.toHexString();
    });
}

},
"node_modules/@ant-design/pro-table/node_modules/@ant-design/colors/es/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "generate", {
    enumerable: true,
    get: function() {
        return _generate.default;
    }
});
var _export_star = __mako_require__("@swc/helpers/_/_export_star");
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _generate = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-table/node_modules/@ant-design/colors/es/generate.js"));
_export_star._(__mako_require__("node_modules/@ant-design/pro-table/node_modules/@ant-design/colors/es/presets.js"), exports);
_export_star._(__mako_require__("node_modules/@ant-design/pro-table/node_modules/@ant-design/colors/es/types.js"), exports);

},
"node_modules/@ant-design/pro-table/node_modules/@ant-design/colors/es/presets.js": function (module, exports, __mako_require__){
// Generated by script. Do NOT modify!
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    blue: function() {
        return blue;
    },
    blueDark: function() {
        return blueDark;
    },
    cyan: function() {
        return cyan;
    },
    cyanDark: function() {
        return cyanDark;
    },
    geekblue: function() {
        return geekblue;
    },
    geekblueDark: function() {
        return geekblueDark;
    },
    gold: function() {
        return gold;
    },
    goldDark: function() {
        return goldDark;
    },
    gray: function() {
        return gray;
    },
    green: function() {
        return green;
    },
    greenDark: function() {
        return greenDark;
    },
    grey: function() {
        return grey;
    },
    greyDark: function() {
        return greyDark;
    },
    lime: function() {
        return lime;
    },
    limeDark: function() {
        return limeDark;
    },
    magenta: function() {
        return magenta;
    },
    magentaDark: function() {
        return magentaDark;
    },
    orange: function() {
        return orange;
    },
    orangeDark: function() {
        return orangeDark;
    },
    presetDarkPalettes: function() {
        return presetDarkPalettes;
    },
    presetPalettes: function() {
        return presetPalettes;
    },
    presetPrimaryColors: function() {
        return presetPrimaryColors;
    },
    purple: function() {
        return purple;
    },
    purpleDark: function() {
        return purpleDark;
    },
    red: function() {
        return red;
    },
    redDark: function() {
        return redDark;
    },
    volcano: function() {
        return volcano;
    },
    volcanoDark: function() {
        return volcanoDark;
    },
    yellow: function() {
        return yellow;
    },
    yellowDark: function() {
        return yellowDark;
    }
});
var presetPrimaryColors = {
    "red": "#F5222D",
    "volcano": "#FA541C",
    "orange": "#FA8C16",
    "gold": "#FAAD14",
    "yellow": "#FADB14",
    "lime": "#A0D911",
    "green": "#52C41A",
    "cyan": "#13C2C2",
    "blue": "#1677FF",
    "geekblue": "#2F54EB",
    "purple": "#722ED1",
    "magenta": "#EB2F96",
    "grey": "#666666"
};
var red = [
    "#fff1f0",
    "#ffccc7",
    "#ffa39e",
    "#ff7875",
    "#ff4d4f",
    "#f5222d",
    "#cf1322",
    "#a8071a",
    "#820014",
    "#5c0011"
];
red.primary = red[5];
var volcano = [
    "#fff2e8",
    "#ffd8bf",
    "#ffbb96",
    "#ff9c6e",
    "#ff7a45",
    "#fa541c",
    "#d4380d",
    "#ad2102",
    "#871400",
    "#610b00"
];
volcano.primary = volcano[5];
var orange = [
    "#fff7e6",
    "#ffe7ba",
    "#ffd591",
    "#ffc069",
    "#ffa940",
    "#fa8c16",
    "#d46b08",
    "#ad4e00",
    "#873800",
    "#612500"
];
orange.primary = orange[5];
var gold = [
    "#fffbe6",
    "#fff1b8",
    "#ffe58f",
    "#ffd666",
    "#ffc53d",
    "#faad14",
    "#d48806",
    "#ad6800",
    "#874d00",
    "#613400"
];
gold.primary = gold[5];
var yellow = [
    "#feffe6",
    "#ffffb8",
    "#fffb8f",
    "#fff566",
    "#ffec3d",
    "#fadb14",
    "#d4b106",
    "#ad8b00",
    "#876800",
    "#614700"
];
yellow.primary = yellow[5];
var lime = [
    "#fcffe6",
    "#f4ffb8",
    "#eaff8f",
    "#d3f261",
    "#bae637",
    "#a0d911",
    "#7cb305",
    "#5b8c00",
    "#3f6600",
    "#254000"
];
lime.primary = lime[5];
var green = [
    "#f6ffed",
    "#d9f7be",
    "#b7eb8f",
    "#95de64",
    "#73d13d",
    "#52c41a",
    "#389e0d",
    "#237804",
    "#135200",
    "#092b00"
];
green.primary = green[5];
var cyan = [
    "#e6fffb",
    "#b5f5ec",
    "#87e8de",
    "#5cdbd3",
    "#36cfc9",
    "#13c2c2",
    "#08979c",
    "#006d75",
    "#00474f",
    "#002329"
];
cyan.primary = cyan[5];
var blue = [
    "#e6f4ff",
    "#bae0ff",
    "#91caff",
    "#69b1ff",
    "#4096ff",
    "#1677ff",
    "#0958d9",
    "#003eb3",
    "#002c8c",
    "#001d66"
];
blue.primary = blue[5];
var geekblue = [
    "#f0f5ff",
    "#d6e4ff",
    "#adc6ff",
    "#85a5ff",
    "#597ef7",
    "#2f54eb",
    "#1d39c4",
    "#10239e",
    "#061178",
    "#030852"
];
geekblue.primary = geekblue[5];
var purple = [
    "#f9f0ff",
    "#efdbff",
    "#d3adf7",
    "#b37feb",
    "#9254de",
    "#722ed1",
    "#531dab",
    "#391085",
    "#22075e",
    "#120338"
];
purple.primary = purple[5];
var magenta = [
    "#fff0f6",
    "#ffd6e7",
    "#ffadd2",
    "#ff85c0",
    "#f759ab",
    "#eb2f96",
    "#c41d7f",
    "#9e1068",
    "#780650",
    "#520339"
];
magenta.primary = magenta[5];
var grey = [
    "#a6a6a6",
    "#999999",
    "#8c8c8c",
    "#808080",
    "#737373",
    "#666666",
    "#404040",
    "#1a1a1a",
    "#000000",
    "#000000"
];
grey.primary = grey[5];
var gray = grey;
var presetPalettes = {
    red: red,
    volcano: volcano,
    orange: orange,
    gold: gold,
    yellow: yellow,
    lime: lime,
    green: green,
    cyan: cyan,
    blue: blue,
    geekblue: geekblue,
    purple: purple,
    magenta: magenta,
    grey: grey
};
var redDark = [
    "#2a1215",
    "#431418",
    "#58181c",
    "#791a1f",
    "#a61d24",
    "#d32029",
    "#e84749",
    "#f37370",
    "#f89f9a",
    "#fac8c3"
];
redDark.primary = redDark[5];
var volcanoDark = [
    "#2b1611",
    "#441d12",
    "#592716",
    "#7c3118",
    "#aa3e19",
    "#d84a1b",
    "#e87040",
    "#f3956a",
    "#f8b692",
    "#fad4bc"
];
volcanoDark.primary = volcanoDark[5];
var orangeDark = [
    "#2b1d11",
    "#442a11",
    "#593815",
    "#7c4a15",
    "#aa6215",
    "#d87a16",
    "#e89a3c",
    "#f3b765",
    "#f8cf8d",
    "#fae3b7"
];
orangeDark.primary = orangeDark[5];
var goldDark = [
    "#2b2111",
    "#443111",
    "#594214",
    "#7c5914",
    "#aa7714",
    "#d89614",
    "#e8b339",
    "#f3cc62",
    "#f8df8b",
    "#faedb5"
];
goldDark.primary = goldDark[5];
var yellowDark = [
    "#2b2611",
    "#443b11",
    "#595014",
    "#7c6e14",
    "#aa9514",
    "#d8bd14",
    "#e8d639",
    "#f3ea62",
    "#f8f48b",
    "#fafab5"
];
yellowDark.primary = yellowDark[5];
var limeDark = [
    "#1f2611",
    "#2e3c10",
    "#3e4f13",
    "#536d13",
    "#6f9412",
    "#8bbb11",
    "#a9d134",
    "#c9e75d",
    "#e4f88b",
    "#f0fab5"
];
limeDark.primary = limeDark[5];
var greenDark = [
    "#162312",
    "#1d3712",
    "#274916",
    "#306317",
    "#3c8618",
    "#49aa19",
    "#6abe39",
    "#8fd460",
    "#b2e58b",
    "#d5f2bb"
];
greenDark.primary = greenDark[5];
var cyanDark = [
    "#112123",
    "#113536",
    "#144848",
    "#146262",
    "#138585",
    "#13a8a8",
    "#33bcb7",
    "#58d1c9",
    "#84e2d8",
    "#b2f1e8"
];
cyanDark.primary = cyanDark[5];
var blueDark = [
    "#111a2c",
    "#112545",
    "#15325b",
    "#15417e",
    "#1554ad",
    "#1668dc",
    "#3c89e8",
    "#65a9f3",
    "#8dc5f8",
    "#b7dcfa"
];
blueDark.primary = blueDark[5];
var geekblueDark = [
    "#131629",
    "#161d40",
    "#1c2755",
    "#203175",
    "#263ea0",
    "#2b4acb",
    "#5273e0",
    "#7f9ef3",
    "#a8c1f8",
    "#d2e0fa"
];
geekblueDark.primary = geekblueDark[5];
var purpleDark = [
    "#1a1325",
    "#24163a",
    "#301c4d",
    "#3e2069",
    "#51258f",
    "#642ab5",
    "#854eca",
    "#ab7ae0",
    "#cda8f0",
    "#ebd7fa"
];
purpleDark.primary = purpleDark[5];
var magentaDark = [
    "#291321",
    "#40162f",
    "#551c3b",
    "#75204f",
    "#a02669",
    "#cb2b83",
    "#e0529c",
    "#f37fb7",
    "#f8a8cc",
    "#fad2e3"
];
magentaDark.primary = magentaDark[5];
var greyDark = [
    "#151515",
    "#1f1f1f",
    "#2d2d2d",
    "#393939",
    "#494949",
    "#5a5a5a",
    "#6a6a6a",
    "#7b7b7b",
    "#888888",
    "#969696"
];
greyDark.primary = greyDark[5];
var presetDarkPalettes = {
    red: redDark,
    volcano: volcanoDark,
    orange: orangeDark,
    gold: goldDark,
    yellow: yellowDark,
    lime: limeDark,
    green: greenDark,
    cyan: cyanDark,
    blue: blueDark,
    geekblue: geekblueDark,
    purple: purpleDark,
    magenta: magentaDark,
    grey: greyDark
};

},
"node_modules/@ant-design/pro-table/node_modules/@ant-design/colors/es/types.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});

},
"node_modules/@ant-design/pro-utils/node_modules/@ant-design/colors/es/generate.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return generate;
    }
});
var _fastcolor = __mako_require__("node_modules/@ant-design/fast-color/es/index.js");
var hueStep = 2; // 色相阶梯
var saturationStep = 0.16; // 饱和度阶梯，浅色部分
var saturationStep2 = 0.05; // 饱和度阶梯，深色部分
var brightnessStep1 = 0.05; // 亮度阶梯，浅色部分
var brightnessStep2 = 0.15; // 亮度阶梯，深色部分
var lightColorCount = 5; // 浅色数量，主色上
var darkColorCount = 4; // 深色数量，主色下
// 暗色主题颜色映射关系表
var darkColorMap = [
    {
        index: 7,
        amount: 15
    },
    {
        index: 6,
        amount: 25
    },
    {
        index: 5,
        amount: 30
    },
    {
        index: 5,
        amount: 45
    },
    {
        index: 5,
        amount: 65
    },
    {
        index: 5,
        amount: 85
    },
    {
        index: 4,
        amount: 90
    },
    {
        index: 3,
        amount: 95
    },
    {
        index: 2,
        amount: 97
    },
    {
        index: 1,
        amount: 98
    }
];
function getHue(hsv, i, light) {
    var hue;
    // 根据色相不同，色相转向不同
    if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;
    else hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;
    if (hue < 0) hue += 360;
    else if (hue >= 360) hue -= 360;
    return hue;
}
function getSaturation(hsv, i, light) {
    // grey color don't change saturation
    if (hsv.h === 0 && hsv.s === 0) return hsv.s;
    var saturation;
    if (light) saturation = hsv.s - saturationStep * i;
    else if (i === darkColorCount) saturation = hsv.s + saturationStep;
    else saturation = hsv.s + saturationStep2 * i;
    // 边界值修正
    if (saturation > 1) saturation = 1;
    // 第一格的 s 限制在 0.06-0.1 之间
    if (light && i === lightColorCount && saturation > 0.1) saturation = 0.1;
    if (saturation < 0.06) saturation = 0.06;
    return Math.round(saturation * 100) / 100;
}
function getValue(hsv, i, light) {
    var value;
    if (light) value = hsv.v + brightnessStep1 * i;
    else value = hsv.v - brightnessStep2 * i;
    // Clamp value between 0 and 1
    value = Math.max(0, Math.min(1, value));
    return Math.round(value * 100) / 100;
}
function generate(color) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var patterns = [];
    var pColor = new _fastcolor.FastColor(color);
    var hsv = pColor.toHsv();
    for(var i = lightColorCount; i > 0; i -= 1){
        var c = new _fastcolor.FastColor({
            h: getHue(hsv, i, true),
            s: getSaturation(hsv, i, true),
            v: getValue(hsv, i, true)
        });
        patterns.push(c);
    }
    patterns.push(pColor);
    for(var _i = 1; _i <= darkColorCount; _i += 1){
        var _c = new _fastcolor.FastColor({
            h: getHue(hsv, _i),
            s: getSaturation(hsv, _i),
            v: getValue(hsv, _i)
        });
        patterns.push(_c);
    }
    // dark theme patterns
    if (opts.theme === 'dark') return darkColorMap.map(function(_ref) {
        var index = _ref.index, amount = _ref.amount;
        return new _fastcolor.FastColor(opts.backgroundColor || '#141414').mix(patterns[index], amount).toHexString();
    });
    return patterns.map(function(c) {
        return c.toHexString();
    });
}

},
"node_modules/@ant-design/pro-utils/node_modules/@ant-design/colors/es/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "generate", {
    enumerable: true,
    get: function() {
        return _generate.default;
    }
});
var _export_star = __mako_require__("@swc/helpers/_/_export_star");
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _generate = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@ant-design/pro-utils/node_modules/@ant-design/colors/es/generate.js"));
_export_star._(__mako_require__("node_modules/@ant-design/pro-utils/node_modules/@ant-design/colors/es/presets.js"), exports);
_export_star._(__mako_require__("node_modules/@ant-design/pro-utils/node_modules/@ant-design/colors/es/types.js"), exports);

},
"node_modules/@ant-design/pro-utils/node_modules/@ant-design/colors/es/presets.js": function (module, exports, __mako_require__){
// Generated by script. Do NOT modify!
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    blue: function() {
        return blue;
    },
    blueDark: function() {
        return blueDark;
    },
    cyan: function() {
        return cyan;
    },
    cyanDark: function() {
        return cyanDark;
    },
    geekblue: function() {
        return geekblue;
    },
    geekblueDark: function() {
        return geekblueDark;
    },
    gold: function() {
        return gold;
    },
    goldDark: function() {
        return goldDark;
    },
    gray: function() {
        return gray;
    },
    green: function() {
        return green;
    },
    greenDark: function() {
        return greenDark;
    },
    grey: function() {
        return grey;
    },
    greyDark: function() {
        return greyDark;
    },
    lime: function() {
        return lime;
    },
    limeDark: function() {
        return limeDark;
    },
    magenta: function() {
        return magenta;
    },
    magentaDark: function() {
        return magentaDark;
    },
    orange: function() {
        return orange;
    },
    orangeDark: function() {
        return orangeDark;
    },
    presetDarkPalettes: function() {
        return presetDarkPalettes;
    },
    presetPalettes: function() {
        return presetPalettes;
    },
    presetPrimaryColors: function() {
        return presetPrimaryColors;
    },
    purple: function() {
        return purple;
    },
    purpleDark: function() {
        return purpleDark;
    },
    red: function() {
        return red;
    },
    redDark: function() {
        return redDark;
    },
    volcano: function() {
        return volcano;
    },
    volcanoDark: function() {
        return volcanoDark;
    },
    yellow: function() {
        return yellow;
    },
    yellowDark: function() {
        return yellowDark;
    }
});
var presetPrimaryColors = {
    "red": "#F5222D",
    "volcano": "#FA541C",
    "orange": "#FA8C16",
    "gold": "#FAAD14",
    "yellow": "#FADB14",
    "lime": "#A0D911",
    "green": "#52C41A",
    "cyan": "#13C2C2",
    "blue": "#1677FF",
    "geekblue": "#2F54EB",
    "purple": "#722ED1",
    "magenta": "#EB2F96",
    "grey": "#666666"
};
var red = [
    "#fff1f0",
    "#ffccc7",
    "#ffa39e",
    "#ff7875",
    "#ff4d4f",
    "#f5222d",
    "#cf1322",
    "#a8071a",
    "#820014",
    "#5c0011"
];
red.primary = red[5];
var volcano = [
    "#fff2e8",
    "#ffd8bf",
    "#ffbb96",
    "#ff9c6e",
    "#ff7a45",
    "#fa541c",
    "#d4380d",
    "#ad2102",
    "#871400",
    "#610b00"
];
volcano.primary = volcano[5];
var orange = [
    "#fff7e6",
    "#ffe7ba",
    "#ffd591",
    "#ffc069",
    "#ffa940",
    "#fa8c16",
    "#d46b08",
    "#ad4e00",
    "#873800",
    "#612500"
];
orange.primary = orange[5];
var gold = [
    "#fffbe6",
    "#fff1b8",
    "#ffe58f",
    "#ffd666",
    "#ffc53d",
    "#faad14",
    "#d48806",
    "#ad6800",
    "#874d00",
    "#613400"
];
gold.primary = gold[5];
var yellow = [
    "#feffe6",
    "#ffffb8",
    "#fffb8f",
    "#fff566",
    "#ffec3d",
    "#fadb14",
    "#d4b106",
    "#ad8b00",
    "#876800",
    "#614700"
];
yellow.primary = yellow[5];
var lime = [
    "#fcffe6",
    "#f4ffb8",
    "#eaff8f",
    "#d3f261",
    "#bae637",
    "#a0d911",
    "#7cb305",
    "#5b8c00",
    "#3f6600",
    "#254000"
];
lime.primary = lime[5];
var green = [
    "#f6ffed",
    "#d9f7be",
    "#b7eb8f",
    "#95de64",
    "#73d13d",
    "#52c41a",
    "#389e0d",
    "#237804",
    "#135200",
    "#092b00"
];
green.primary = green[5];
var cyan = [
    "#e6fffb",
    "#b5f5ec",
    "#87e8de",
    "#5cdbd3",
    "#36cfc9",
    "#13c2c2",
    "#08979c",
    "#006d75",
    "#00474f",
    "#002329"
];
cyan.primary = cyan[5];
var blue = [
    "#e6f4ff",
    "#bae0ff",
    "#91caff",
    "#69b1ff",
    "#4096ff",
    "#1677ff",
    "#0958d9",
    "#003eb3",
    "#002c8c",
    "#001d66"
];
blue.primary = blue[5];
var geekblue = [
    "#f0f5ff",
    "#d6e4ff",
    "#adc6ff",
    "#85a5ff",
    "#597ef7",
    "#2f54eb",
    "#1d39c4",
    "#10239e",
    "#061178",
    "#030852"
];
geekblue.primary = geekblue[5];
var purple = [
    "#f9f0ff",
    "#efdbff",
    "#d3adf7",
    "#b37feb",
    "#9254de",
    "#722ed1",
    "#531dab",
    "#391085",
    "#22075e",
    "#120338"
];
purple.primary = purple[5];
var magenta = [
    "#fff0f6",
    "#ffd6e7",
    "#ffadd2",
    "#ff85c0",
    "#f759ab",
    "#eb2f96",
    "#c41d7f",
    "#9e1068",
    "#780650",
    "#520339"
];
magenta.primary = magenta[5];
var grey = [
    "#a6a6a6",
    "#999999",
    "#8c8c8c",
    "#808080",
    "#737373",
    "#666666",
    "#404040",
    "#1a1a1a",
    "#000000",
    "#000000"
];
grey.primary = grey[5];
var gray = grey;
var presetPalettes = {
    red: red,
    volcano: volcano,
    orange: orange,
    gold: gold,
    yellow: yellow,
    lime: lime,
    green: green,
    cyan: cyan,
    blue: blue,
    geekblue: geekblue,
    purple: purple,
    magenta: magenta,
    grey: grey
};
var redDark = [
    "#2a1215",
    "#431418",
    "#58181c",
    "#791a1f",
    "#a61d24",
    "#d32029",
    "#e84749",
    "#f37370",
    "#f89f9a",
    "#fac8c3"
];
redDark.primary = redDark[5];
var volcanoDark = [
    "#2b1611",
    "#441d12",
    "#592716",
    "#7c3118",
    "#aa3e19",
    "#d84a1b",
    "#e87040",
    "#f3956a",
    "#f8b692",
    "#fad4bc"
];
volcanoDark.primary = volcanoDark[5];
var orangeDark = [
    "#2b1d11",
    "#442a11",
    "#593815",
    "#7c4a15",
    "#aa6215",
    "#d87a16",
    "#e89a3c",
    "#f3b765",
    "#f8cf8d",
    "#fae3b7"
];
orangeDark.primary = orangeDark[5];
var goldDark = [
    "#2b2111",
    "#443111",
    "#594214",
    "#7c5914",
    "#aa7714",
    "#d89614",
    "#e8b339",
    "#f3cc62",
    "#f8df8b",
    "#faedb5"
];
goldDark.primary = goldDark[5];
var yellowDark = [
    "#2b2611",
    "#443b11",
    "#595014",
    "#7c6e14",
    "#aa9514",
    "#d8bd14",
    "#e8d639",
    "#f3ea62",
    "#f8f48b",
    "#fafab5"
];
yellowDark.primary = yellowDark[5];
var limeDark = [
    "#1f2611",
    "#2e3c10",
    "#3e4f13",
    "#536d13",
    "#6f9412",
    "#8bbb11",
    "#a9d134",
    "#c9e75d",
    "#e4f88b",
    "#f0fab5"
];
limeDark.primary = limeDark[5];
var greenDark = [
    "#162312",
    "#1d3712",
    "#274916",
    "#306317",
    "#3c8618",
    "#49aa19",
    "#6abe39",
    "#8fd460",
    "#b2e58b",
    "#d5f2bb"
];
greenDark.primary = greenDark[5];
var cyanDark = [
    "#112123",
    "#113536",
    "#144848",
    "#146262",
    "#138585",
    "#13a8a8",
    "#33bcb7",
    "#58d1c9",
    "#84e2d8",
    "#b2f1e8"
];
cyanDark.primary = cyanDark[5];
var blueDark = [
    "#111a2c",
    "#112545",
    "#15325b",
    "#15417e",
    "#1554ad",
    "#1668dc",
    "#3c89e8",
    "#65a9f3",
    "#8dc5f8",
    "#b7dcfa"
];
blueDark.primary = blueDark[5];
var geekblueDark = [
    "#131629",
    "#161d40",
    "#1c2755",
    "#203175",
    "#263ea0",
    "#2b4acb",
    "#5273e0",
    "#7f9ef3",
    "#a8c1f8",
    "#d2e0fa"
];
geekblueDark.primary = geekblueDark[5];
var purpleDark = [
    "#1a1325",
    "#24163a",
    "#301c4d",
    "#3e2069",
    "#51258f",
    "#642ab5",
    "#854eca",
    "#ab7ae0",
    "#cda8f0",
    "#ebd7fa"
];
purpleDark.primary = purpleDark[5];
var magentaDark = [
    "#291321",
    "#40162f",
    "#551c3b",
    "#75204f",
    "#a02669",
    "#cb2b83",
    "#e0529c",
    "#f37fb7",
    "#f8a8cc",
    "#fad2e3"
];
magentaDark.primary = magentaDark[5];
var greyDark = [
    "#151515",
    "#1f1f1f",
    "#2d2d2d",
    "#393939",
    "#494949",
    "#5a5a5a",
    "#6a6a6a",
    "#7b7b7b",
    "#888888",
    "#969696"
];
greyDark.primary = greyDark[5];
var presetDarkPalettes = {
    red: redDark,
    volcano: volcanoDark,
    orange: orangeDark,
    gold: goldDark,
    yellow: yellowDark,
    lime: limeDark,
    green: greenDark,
    cyan: cyanDark,
    blue: blueDark,
    geekblue: geekblueDark,
    purple: purpleDark,
    magenta: magentaDark,
    grey: greyDark
};

},
"node_modules/@ant-design/pro-utils/node_modules/@ant-design/colors/es/types.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});

},
"node_modules/@antv/g6-pc/node_modules/@ant-design/colors/dist/index.esm.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    blue: function() {
        return blue;
    },
    cyan: function() {
        return cyan;
    },
    geekblue: function() {
        return geekblue;
    },
    generate: function() {
        return generate;
    },
    gold: function() {
        return gold;
    },
    green: function() {
        return green;
    },
    grey: function() {
        return grey;
    },
    lime: function() {
        return lime;
    },
    magenta: function() {
        return magenta;
    },
    orange: function() {
        return orange;
    },
    presetDarkPalettes: function() {
        return presetDarkPalettes;
    },
    presetPalettes: function() {
        return presetPalettes;
    },
    presetPrimaryColors: function() {
        return presetPrimaryColors;
    },
    purple: function() {
        return purple;
    },
    red: function() {
        return red;
    },
    volcano: function() {
        return volcano;
    },
    yellow: function() {
        return yellow;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _tinycolor2 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/tinycolor2/esm/tinycolor.js"));
var hueStep = 2; // 色相阶梯
var saturationStep = 0.16; // 饱和度阶梯，浅色部分
var saturationStep2 = 0.05; // 饱和度阶梯，深色部分
var brightnessStep1 = 0.05; // 亮度阶梯，浅色部分
var brightnessStep2 = 0.15; // 亮度阶梯，深色部分
var lightColorCount = 5; // 浅色数量，主色上
var darkColorCount = 4; // 深色数量，主色下
// 暗色主题颜色映射关系表
var darkColorMap = [
    {
        index: 7,
        opacity: 0.15
    },
    {
        index: 6,
        opacity: 0.25
    },
    {
        index: 5,
        opacity: 0.3
    },
    {
        index: 5,
        opacity: 0.45
    },
    {
        index: 5,
        opacity: 0.65
    },
    {
        index: 5,
        opacity: 0.85
    },
    {
        index: 4,
        opacity: 0.9
    },
    {
        index: 3,
        opacity: 0.95
    },
    {
        index: 2,
        opacity: 0.97
    },
    {
        index: 1,
        opacity: 0.98
    }
];
function getHue(hsv, i, light) {
    var hue; // 根据色相不同，色相转向不同
    if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;
    else hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;
    if (hue < 0) hue += 360;
    else if (hue >= 360) hue -= 360;
    return hue;
}
function getSaturation(hsv, i, light) {
    // grey color don't change saturation
    if (hsv.h === 0 && hsv.s === 0) return hsv.s;
    var saturation;
    if (light) saturation = hsv.s - saturationStep * i;
    else if (i === darkColorCount) saturation = hsv.s + saturationStep;
    else saturation = hsv.s + saturationStep2 * i;
     // 边界值修正
    if (saturation > 1) saturation = 1;
     // 第一格的 s 限制在 0.06-0.1 之间
    if (light && i === lightColorCount && saturation > 0.1) saturation = 0.1;
    if (saturation < 0.06) saturation = 0.06;
    return Number(saturation.toFixed(2));
}
function getValue(hsv, i, light) {
    var value;
    if (light) value = hsv.v + brightnessStep1 * i;
    else value = hsv.v - brightnessStep2 * i;
    if (value > 1) value = 1;
    return Number(value.toFixed(2));
}
function generate(color) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var patterns = [];
    var pColor = (0, _tinycolor2.default)(color);
    for(var i = lightColorCount; i > 0; i -= 1){
        var hsv = pColor.toHsv();
        var colorString = (0, _tinycolor2.default)({
            h: getHue(hsv, i, true),
            s: getSaturation(hsv, i, true),
            v: getValue(hsv, i, true)
        }).toHexString();
        patterns.push(colorString);
    }
    patterns.push(pColor.toHexString());
    for(var _i = 1; _i <= darkColorCount; _i += 1){
        var _hsv = pColor.toHsv();
        var _colorString = (0, _tinycolor2.default)({
            h: getHue(_hsv, _i),
            s: getSaturation(_hsv, _i),
            v: getValue(_hsv, _i)
        }).toHexString();
        patterns.push(_colorString);
    } // dark theme patterns
    if (opts.theme === 'dark') return darkColorMap.map(function(_ref) {
        var index = _ref.index, opacity = _ref.opacity;
        var darkColorString = _tinycolor2.default.mix(opts.backgroundColor || '#141414', patterns[index], opacity * 100).toHexString();
        return darkColorString;
    });
    return patterns;
}
var presetPrimaryColors = {
    red: '#F5222D',
    volcano: '#FA541C',
    orange: '#FA8C16',
    gold: '#FAAD14',
    yellow: '#FADB14',
    lime: '#A0D911',
    green: '#52C41A',
    cyan: '#13C2C2',
    blue: '#1890FF',
    geekblue: '#2F54EB',
    purple: '#722ED1',
    magenta: '#EB2F96',
    grey: '#666666'
};
var presetPalettes = {};
var presetDarkPalettes = {};
Object.keys(presetPrimaryColors).forEach(function(key) {
    presetPalettes[key] = generate(presetPrimaryColors[key]);
    presetPalettes[key].primary = presetPalettes[key][5]; // dark presetPalettes
    presetDarkPalettes[key] = generate(presetPrimaryColors[key], {
        theme: 'dark',
        backgroundColor: '#141414'
    });
    presetDarkPalettes[key].primary = presetDarkPalettes[key][5];
});
var red = presetPalettes.red;
var volcano = presetPalettes.volcano;
var gold = presetPalettes.gold;
var orange = presetPalettes.orange;
var yellow = presetPalettes.yellow;
var lime = presetPalettes.lime;
var green = presetPalettes.green;
var cyan = presetPalettes.cyan;
var blue = presetPalettes.blue;
var geekblue = presetPalettes.geekblue;
var purple = presetPalettes.purple;
var magenta = presetPalettes.magenta;
var grey = presetPalettes.grey;

},
"node_modules/@babel/runtime/helpers/arrayLikeToArray.js": function (module, exports, __mako_require__){
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/arrayWithHoles.js": function (module, exports, __mako_require__){
function _arrayWithHoles(r) {
    if (Array.isArray(r)) return r;
}
module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/defineProperty.js": function (module, exports, __mako_require__){
var toPropertyKey = __mako_require__("node_modules/@babel/runtime/helpers/toPropertyKey.js");
function _defineProperty(e, r, t) {
    return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
        value: t,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[r] = t, e;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/extends.js": function (module, exports, __mako_require__){
function _extends() {
    return module.exports = _extends = Object.assign ? Object.assign.bind() : function(n) {
        for(var e = 1; e < arguments.length; e++){
            var t = arguments[e];
            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
        }
        return n;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _extends.apply(null, arguments);
}
module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/interopRequireDefault.js": function (module, exports, __mako_require__){
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        "default": e
    };
}
module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/interopRequireWildcard.js": function (module, exports, __mako_require__){
var _typeof = __mako_require__("node_modules/@babel/runtime/helpers/typeof.js")["default"];
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
        "default": e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n["default"] = e, t && t.set(e, n), n;
}
module.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/iterableToArrayLimit.js": function (module, exports, __mako_require__){
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/nonIterableRest.js": function (module, exports, __mako_require__){
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/objectSpread2.js": function (module, exports, __mako_require__){
var defineProperty = __mako_require__("node_modules/@babel/runtime/helpers/defineProperty.js");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread2(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
module.exports = _objectSpread2, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/objectWithoutProperties.js": function (module, exports, __mako_require__){
var objectWithoutPropertiesLoose = __mako_require__("node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js");
function _objectWithoutProperties(e, t) {
    if (null == e) return {};
    var o, r, i = objectWithoutPropertiesLoose(e, t);
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e);
        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
    }
    return i;
}
module.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js": function (module, exports, __mako_require__){
function _objectWithoutPropertiesLoose(r, e) {
    if (null == r) return {};
    var t = {};
    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {
        if (-1 !== e.indexOf(n)) continue;
        t[n] = r[n];
    }
    return t;
}
module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/regeneratorRuntime.js": function (module, exports, __mako_require__){
var _typeof = __mako_require__("node_modules/@babel/runtime/helpers/typeof.js")["default"];
function _regeneratorRuntime() {
    "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ 
    module.exports = _regeneratorRuntime = function _regeneratorRuntime() {
        return e;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports;
    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {
        t[e] = r.value;
    }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
    function define(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }), t[e];
    }
    try {
        define({}, "");
    } catch (t) {
        define = function define(t, e, r) {
            return t[e] = r;
        };
    }
    function wrap(t, e, r, n) {
        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);
        return o(a, "_invoke", {
            value: makeInvokeMethod(t, r, c)
        }), a;
    }
    function tryCatch(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            };
        } catch (t) {
            return {
                type: "throw",
                arg: t
            };
        }
    }
    e.wrap = wrap;
    var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {};
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    var p = {};
    define(p, a, function() {
        return this;
    });
    var d = Object.getPrototypeOf, v = d && d(d(values([])));
    v && v !== r && n.call(v, a) && (p = v);
    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
    function defineIteratorMethods(t) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(e) {
            define(t, e, function(t) {
                return this._invoke(e, t);
            });
        });
    }
    function AsyncIterator(t, e) {
        function invoke(r, o, i, a) {
            var c = tryCatch(t[r], t, o);
            if ("throw" !== c.type) {
                var u = c.arg, h = u.value;
                return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function(t) {
                    invoke("next", t, i, a);
                }, function(t) {
                    invoke("throw", t, i, a);
                }) : e.resolve(h).then(function(t) {
                    u.value = t, i(u);
                }, function(t) {
                    return invoke("throw", t, i, a);
                });
            }
            a(c.arg);
        }
        var r;
        o(this, "_invoke", {
            value: function value(t, n) {
                function callInvokeWithMethodAndArg() {
                    return new e(function(e, r) {
                        invoke(t, n, e, r);
                    });
                }
                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }
        });
    }
    function makeInvokeMethod(e, r, n) {
        var o = h;
        return function(i, a) {
            if (o === f) throw Error("Generator is already running");
            if (o === s) {
                if ("throw" === i) throw a;
                return {
                    value: t,
                    done: !0
                };
            }
            for(n.method = i, n.arg = a;;){
                var c = n.delegate;
                if (c) {
                    var u = maybeInvokeDelegate(c, n);
                    if (u) {
                        if (u === y) continue;
                        return u;
                    }
                }
                if ("next" === n.method) n.sent = n._sent = n.arg;
                else if ("throw" === n.method) {
                    if (o === h) throw o = s, n.arg;
                    n.dispatchException(n.arg);
                } else "return" === n.method && n.abrupt("return", n.arg);
                o = f;
                var p = tryCatch(e, r, n);
                if ("normal" === p.type) {
                    if (o = n.done ? s : l, p.arg === y) continue;
                    return {
                        value: p.arg,
                        done: n.done
                    };
                }
                "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
            }
        };
    }
    function maybeInvokeDelegate(e, r) {
        var n = r.method, o = e.iterator[n];
        if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
        var i = tryCatch(o, e.iterator, r.arg);
        if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
        var a = i.arg;
        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
    }
    function pushTryEntry(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
    }
    function resetTryEntry(t) {
        var e = t.completion || {};
        e.type = "normal", delete e.arg, t.completion = e;
    }
    function Context(t) {
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ], t.forEach(pushTryEntry, this), this.reset(!0);
    }
    function values(e) {
        if (e || "" === e) {
            var r = e[a];
            if (r) return r.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
                var o = -1, i = function next() {
                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
                    return next.value = t, next.done = !0, next;
                };
                return i.next = i;
            }
        }
        throw new TypeError(_typeof(e) + " is not iterable");
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: !0
    }), o(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: !0
    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
        var e = "function" == typeof t && t.constructor;
        return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
    }, e.mark = function(t) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
    }, e.awrap = function(t) {
        return {
            __await: t
        };
    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
        return this;
    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {
        void 0 === i && (i = Promise);
        var a = new AsyncIterator(wrap(t, r, n, o), i);
        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {
            return t.done ? t.value : a.next();
        });
    }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
        return this;
    }), define(g, "toString", function() {
        return "[object Generator]";
    }), e.keys = function(t) {
        var e = Object(t), r = [];
        for(var n in e)r.push(n);
        return r.reverse(), function next() {
            for(; r.length;){
                var t = r.pop();
                if (t in e) return next.value = t, next.done = !1, next;
            }
            return next.done = !0, next;
        };
    }, e.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(e) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
        },
        stop: function stop() {
            this.done = !0;
            var t = this.tryEntries[0].completion;
            if ("throw" === t.type) throw t.arg;
            return this.rval;
        },
        dispatchException: function dispatchException(e) {
            if (this.done) throw e;
            var r = this;
            function handle(n, o) {
                return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
            }
            for(var o = this.tryEntries.length - 1; o >= 0; --o){
                var i = this.tryEntries[o], a = i.completion;
                if ("root" === i.tryLoc) return handle("end");
                if (i.tryLoc <= this.prev) {
                    var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc");
                    if (c && u) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    } else if (c) {
                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                    } else {
                        if (!u) throw Error("try statement without catch or finally");
                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                    }
                }
            }
        },
        abrupt: function abrupt(t, e) {
            for(var r = this.tryEntries.length - 1; r >= 0; --r){
                var o = this.tryEntries[r];
                if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                    var i = o;
                    break;
                }
            }
            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
            var a = i ? i.completion : {};
            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
        },
        complete: function complete(t, e) {
            if ("throw" === t.type) throw t.arg;
            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
        },
        finish: function finish(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
            }
        },
        "catch": function _catch(t) {
            for(var e = this.tryEntries.length - 1; e >= 0; --e){
                var r = this.tryEntries[e];
                if (r.tryLoc === t) {
                    var n = r.completion;
                    if ("throw" === n.type) {
                        var o = n.arg;
                        resetTryEntry(r);
                    }
                    return o;
                }
            }
            throw Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(e, r, n) {
            return this.delegate = {
                iterator: values(e),
                resultName: r,
                nextLoc: n
            }, "next" === this.method && (this.arg = t), y;
        }
    }, e;
}
module.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/slicedToArray.js": function (module, exports, __mako_require__){
var arrayWithHoles = __mako_require__("node_modules/@babel/runtime/helpers/arrayWithHoles.js");
var iterableToArrayLimit = __mako_require__("node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");
var unsupportedIterableToArray = __mako_require__("node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");
var nonIterableRest = __mako_require__("node_modules/@babel/runtime/helpers/nonIterableRest.js");
function _slicedToArray(r, e) {
    return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();
}
module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/toPrimitive.js": function (module, exports, __mako_require__){
var _typeof = __mako_require__("node_modules/@babel/runtime/helpers/typeof.js")["default"];
function toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
module.exports = toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/toPropertyKey.js": function (module, exports, __mako_require__){
var _typeof = __mako_require__("node_modules/@babel/runtime/helpers/typeof.js")["default"];
var toPrimitive = __mako_require__("node_modules/@babel/runtime/helpers/toPrimitive.js");
function toPropertyKey(t) {
    var i = toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
module.exports = toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/typeof.js": function (module, exports, __mako_require__){
function _typeof(o) {
    "@babel/helpers - typeof";
    return module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _typeof(o);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js": function (module, exports, __mako_require__){
var arrayLikeToArray = __mako_require__("node_modules/@babel/runtime/helpers/arrayLikeToArray.js");
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;
    }
}
module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

},
"node_modules/@babel/runtime/regenerator/index.js": function (module, exports, __mako_require__){
// TODO(Babel 8): Remove this file.
var runtime = __mako_require__("node_modules/@babel/runtime/helpers/regeneratorRuntime.js")();
module.exports = runtime;
// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=
try {
    regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
    if (typeof globalThis === "object") globalThis.regeneratorRuntime = runtime;
    else Function("r", "regeneratorRuntime = r")(runtime);
}

},
"node_modules/@dnd-kit/accessibility/dist/accessibility.esm.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    HiddenText: function() {
        return HiddenText;
    },
    LiveRegion: function() {
        return LiveRegion;
    },
    useAnnouncement: function() {
        return useAnnouncement;
    }
});
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
const hiddenStyles = {
    display: 'none'
};
function HiddenText(_ref) {
    let { id, value } = _ref;
    return /*#__PURE__*/ _react.default.createElement("div", {
        id: id,
        style: hiddenStyles
    }, value);
}
function LiveRegion(_ref) {
    let { id, announcement, ariaLiveType = "assertive" } = _ref;
    // Hide element visually but keep it readable by screen readers
    const visuallyHidden = {
        position: 'fixed',
        top: 0,
        left: 0,
        width: 1,
        height: 1,
        margin: -1,
        border: 0,
        padding: 0,
        overflow: 'hidden',
        clip: 'rect(0 0 0 0)',
        clipPath: 'inset(100%)',
        whiteSpace: 'nowrap'
    };
    return /*#__PURE__*/ _react.default.createElement("div", {
        id: id,
        style: visuallyHidden,
        role: "status",
        "aria-live": ariaLiveType,
        "aria-atomic": true
    }, announcement);
}
function useAnnouncement() {
    const [announcement, setAnnouncement] = (0, _react.useState)('');
    const announce = (0, _react.useCallback)((value)=>{
        if (value != null) setAnnouncement(value);
    }, []);
    return {
        announce,
        announcement
    };
}
 //# sourceMappingURL=accessibility.esm.js.map

},
"node_modules/@dnd-kit/core/dist/core.esm.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    AutoScrollActivator: function() {
        return AutoScrollActivator;
    },
    DndContext: function() {
        return DndContext;
    },
    DragOverlay: function() {
        return DragOverlay;
    },
    KeyboardCode: function() {
        return KeyboardCode;
    },
    KeyboardSensor: function() {
        return KeyboardSensor;
    },
    MeasuringFrequency: function() {
        return MeasuringFrequency;
    },
    MeasuringStrategy: function() {
        return MeasuringStrategy;
    },
    MouseSensor: function() {
        return MouseSensor;
    },
    PointerSensor: function() {
        return PointerSensor;
    },
    TouchSensor: function() {
        return TouchSensor;
    },
    TraversalOrder: function() {
        return TraversalOrder;
    },
    applyModifiers: function() {
        return applyModifiers;
    },
    closestCenter: function() {
        return closestCenter;
    },
    closestCorners: function() {
        return closestCorners;
    },
    defaultAnnouncements: function() {
        return defaultAnnouncements;
    },
    defaultCoordinates: function() {
        return defaultCoordinates;
    },
    defaultDropAnimation: function() {
        return defaultDropAnimationConfiguration;
    },
    defaultDropAnimationSideEffects: function() {
        return defaultDropAnimationSideEffects;
    },
    defaultKeyboardCoordinateGetter: function() {
        return defaultKeyboardCoordinateGetter;
    },
    defaultScreenReaderInstructions: function() {
        return defaultScreenReaderInstructions;
    },
    getClientRect: function() {
        return getClientRect;
    },
    getFirstCollision: function() {
        return getFirstCollision;
    },
    getScrollableAncestors: function() {
        return getScrollableAncestors;
    },
    pointerWithin: function() {
        return pointerWithin;
    },
    rectIntersection: function() {
        return rectIntersection;
    },
    useDndContext: function() {
        return useDndContext;
    },
    useDndMonitor: function() {
        return useDndMonitor;
    },
    useDraggable: function() {
        return useDraggable;
    },
    useDroppable: function() {
        return useDroppable;
    },
    useSensor: function() {
        return useSensor;
    },
    useSensors: function() {
        return useSensors;
    }
});
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _reactdom = __mako_require__("node_modules/react-dom/index.js");
var _utilities = __mako_require__("node_modules/@dnd-kit/utilities/dist/utilities.esm.js");
var _accessibility = __mako_require__("node_modules/@dnd-kit/accessibility/dist/accessibility.esm.js");
const DndMonitorContext = /*#__PURE__*/ (0, _react.createContext)(null);
function useDndMonitor(listener) {
    const registerListener = (0, _react.useContext)(DndMonitorContext);
    (0, _react.useEffect)(()=>{
        if (!registerListener) throw new Error('useDndMonitor must be used within a children of <DndContext>');
        const unsubscribe = registerListener(listener);
        return unsubscribe;
    }, [
        listener,
        registerListener
    ]);
}
function useDndMonitorProvider() {
    const [listeners] = (0, _react.useState)(()=>new Set());
    const registerListener = (0, _react.useCallback)((listener)=>{
        listeners.add(listener);
        return ()=>listeners.delete(listener);
    }, [
        listeners
    ]);
    const dispatch = (0, _react.useCallback)((_ref)=>{
        let { type, event } = _ref;
        listeners.forEach((listener)=>{
            var _listener$type;
            return (_listener$type = listener[type]) == null ? void 0 : _listener$type.call(listener, event);
        });
    }, [
        listeners
    ]);
    return [
        dispatch,
        registerListener
    ];
}
const defaultScreenReaderInstructions = {
    draggable: "\n    To pick up a draggable item, press the space bar.\n    While dragging, use the arrow keys to move the item.\n    Press space again to drop the item in its new position, or press escape to cancel.\n  "
};
const defaultAnnouncements = {
    onDragStart (_ref) {
        let { active } = _ref;
        return "Picked up draggable item " + active.id + ".";
    },
    onDragOver (_ref2) {
        let { active, over } = _ref2;
        if (over) return "Draggable item " + active.id + " was moved over droppable area " + over.id + ".";
        return "Draggable item " + active.id + " is no longer over a droppable area.";
    },
    onDragEnd (_ref3) {
        let { active, over } = _ref3;
        if (over) return "Draggable item " + active.id + " was dropped over droppable area " + over.id;
        return "Draggable item " + active.id + " was dropped.";
    },
    onDragCancel (_ref4) {
        let { active } = _ref4;
        return "Dragging was cancelled. Draggable item " + active.id + " was dropped.";
    }
};
function Accessibility(_ref) {
    let { announcements = defaultAnnouncements, container, hiddenTextDescribedById, screenReaderInstructions = defaultScreenReaderInstructions } = _ref;
    const { announce, announcement } = (0, _accessibility.useAnnouncement)();
    const liveRegionId = (0, _utilities.useUniqueId)("DndLiveRegion");
    const [mounted, setMounted] = (0, _react.useState)(false);
    (0, _react.useEffect)(()=>{
        setMounted(true);
    }, []);
    useDndMonitor((0, _react.useMemo)(()=>({
            onDragStart (_ref2) {
                let { active } = _ref2;
                announce(announcements.onDragStart({
                    active
                }));
            },
            onDragMove (_ref3) {
                let { active, over } = _ref3;
                if (announcements.onDragMove) announce(announcements.onDragMove({
                    active,
                    over
                }));
            },
            onDragOver (_ref4) {
                let { active, over } = _ref4;
                announce(announcements.onDragOver({
                    active,
                    over
                }));
            },
            onDragEnd (_ref5) {
                let { active, over } = _ref5;
                announce(announcements.onDragEnd({
                    active,
                    over
                }));
            },
            onDragCancel (_ref6) {
                let { active, over } = _ref6;
                announce(announcements.onDragCancel({
                    active,
                    over
                }));
            }
        }), [
        announce,
        announcements
    ]));
    if (!mounted) return null;
    const markup = /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(_accessibility.HiddenText, {
        id: hiddenTextDescribedById,
        value: screenReaderInstructions.draggable
    }), /*#__PURE__*/ _react.default.createElement(_accessibility.LiveRegion, {
        id: liveRegionId,
        announcement: announcement
    }));
    return container ? /*#__PURE__*/ (0, _reactdom.createPortal)(markup, container) : markup;
}
var Action;
(function(Action) {
    Action["DragStart"] = "dragStart";
    Action["DragMove"] = "dragMove";
    Action["DragEnd"] = "dragEnd";
    Action["DragCancel"] = "dragCancel";
    Action["DragOver"] = "dragOver";
    Action["RegisterDroppable"] = "registerDroppable";
    Action["SetDroppableDisabled"] = "setDroppableDisabled";
    Action["UnregisterDroppable"] = "unregisterDroppable";
})(Action || (Action = {}));
function noop() {}
function useSensor(sensor, options) {
    return (0, _react.useMemo)(()=>({
            sensor,
            options: options != null ? options : {}
        }), [
        sensor,
        options
    ]);
}
function useSensors() {
    for(var _len = arguments.length, sensors = new Array(_len), _key = 0; _key < _len; _key++)sensors[_key] = arguments[_key];
    return (0, _react.useMemo)(()=>[
            ...sensors
        ].filter((sensor)=>sensor != null), [
        ...sensors
    ]);
}
const defaultCoordinates = /*#__PURE__*/ Object.freeze({
    x: 0,
    y: 0
});
/**
 * Returns the distance between two points
 */ function distanceBetween(p1, p2) {
    return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));
}
function getRelativeTransformOrigin(event, rect) {
    const eventCoordinates = (0, _utilities.getEventCoordinates)(event);
    if (!eventCoordinates) return '0 0';
    const transformOrigin = {
        x: (eventCoordinates.x - rect.left) / rect.width * 100,
        y: (eventCoordinates.y - rect.top) / rect.height * 100
    };
    return transformOrigin.x + "% " + transformOrigin.y + "%";
}
/**
 * Sort collisions from smallest to greatest value
 */ function sortCollisionsAsc(_ref, _ref2) {
    let { data: { value: a } } = _ref;
    let { data: { value: b } } = _ref2;
    return a - b;
}
/**
 * Sort collisions from greatest to smallest value
 */ function sortCollisionsDesc(_ref3, _ref4) {
    let { data: { value: a } } = _ref3;
    let { data: { value: b } } = _ref4;
    return b - a;
}
/**
 * Returns the coordinates of the corners of a given rectangle:
 * [TopLeft {x, y}, TopRight {x, y}, BottomLeft {x, y}, BottomRight {x, y}]
 */ function cornersOfRectangle(_ref5) {
    let { left, top, height, width } = _ref5;
    return [
        {
            x: left,
            y: top
        },
        {
            x: left + width,
            y: top
        },
        {
            x: left,
            y: top + height
        },
        {
            x: left + width,
            y: top + height
        }
    ];
}
function getFirstCollision(collisions, property) {
    if (!collisions || collisions.length === 0) return null;
    const [firstCollision] = collisions;
    return property ? firstCollision[property] : firstCollision;
}
/**
 * Returns the coordinates of the center of a given ClientRect
 */ function centerOfRectangle(rect, left, top) {
    if (left === void 0) left = rect.left;
    if (top === void 0) top = rect.top;
    return {
        x: left + rect.width * 0.5,
        y: top + rect.height * 0.5
    };
}
/**
 * Returns the closest rectangles from an array of rectangles to the center of a given
 * rectangle.
 */ const closestCenter = (_ref)=>{
    let { collisionRect, droppableRects, droppableContainers } = _ref;
    const centerRect = centerOfRectangle(collisionRect, collisionRect.left, collisionRect.top);
    const collisions = [];
    for (const droppableContainer of droppableContainers){
        const { id } = droppableContainer;
        const rect = droppableRects.get(id);
        if (rect) {
            const distBetween = distanceBetween(centerOfRectangle(rect), centerRect);
            collisions.push({
                id,
                data: {
                    droppableContainer,
                    value: distBetween
                }
            });
        }
    }
    return collisions.sort(sortCollisionsAsc);
};
/**
 * Returns the closest rectangles from an array of rectangles to the corners of
 * another rectangle.
 */ const closestCorners = (_ref)=>{
    let { collisionRect, droppableRects, droppableContainers } = _ref;
    const corners = cornersOfRectangle(collisionRect);
    const collisions = [];
    for (const droppableContainer of droppableContainers){
        const { id } = droppableContainer;
        const rect = droppableRects.get(id);
        if (rect) {
            const rectCorners = cornersOfRectangle(rect);
            const distances = corners.reduce((accumulator, corner, index)=>{
                return accumulator + distanceBetween(rectCorners[index], corner);
            }, 0);
            const effectiveDistance = Number((distances / 4).toFixed(4));
            collisions.push({
                id,
                data: {
                    droppableContainer,
                    value: effectiveDistance
                }
            });
        }
    }
    return collisions.sort(sortCollisionsAsc);
};
/**
 * Returns the intersecting rectangle area between two rectangles
 */ function getIntersectionRatio(entry, target) {
    const top = Math.max(target.top, entry.top);
    const left = Math.max(target.left, entry.left);
    const right = Math.min(target.left + target.width, entry.left + entry.width);
    const bottom = Math.min(target.top + target.height, entry.top + entry.height);
    const width = right - left;
    const height = bottom - top;
    if (left < right && top < bottom) {
        const targetArea = target.width * target.height;
        const entryArea = entry.width * entry.height;
        const intersectionArea = width * height;
        const intersectionRatio = intersectionArea / (targetArea + entryArea - intersectionArea);
        return Number(intersectionRatio.toFixed(4));
    } // Rectangles do not overlap, or overlap has an area of zero (edge/corner overlap)
    return 0;
}
/**
 * Returns the rectangles that has the greatest intersection area with a given
 * rectangle in an array of rectangles.
 */ const rectIntersection = (_ref)=>{
    let { collisionRect, droppableRects, droppableContainers } = _ref;
    const collisions = [];
    for (const droppableContainer of droppableContainers){
        const { id } = droppableContainer;
        const rect = droppableRects.get(id);
        if (rect) {
            const intersectionRatio = getIntersectionRatio(rect, collisionRect);
            if (intersectionRatio > 0) collisions.push({
                id,
                data: {
                    droppableContainer,
                    value: intersectionRatio
                }
            });
        }
    }
    return collisions.sort(sortCollisionsDesc);
};
/**
 * Check if a given point is contained within a bounding rectangle
 */ function isPointWithinRect(point, rect) {
    const { top, left, bottom, right } = rect;
    return top <= point.y && point.y <= bottom && left <= point.x && point.x <= right;
}
/**
 * Returns the rectangles that the pointer is hovering over
 */ const pointerWithin = (_ref)=>{
    let { droppableContainers, droppableRects, pointerCoordinates } = _ref;
    if (!pointerCoordinates) return [];
    const collisions = [];
    for (const droppableContainer of droppableContainers){
        const { id } = droppableContainer;
        const rect = droppableRects.get(id);
        if (rect && isPointWithinRect(pointerCoordinates, rect)) {
            /* There may be more than a single rectangle intersecting
       * with the pointer coordinates. In order to sort the
       * colliding rectangles, we measure the distance between
       * the pointer and the corners of the intersecting rectangle
       */ const corners = cornersOfRectangle(rect);
            const distances = corners.reduce((accumulator, corner)=>{
                return accumulator + distanceBetween(pointerCoordinates, corner);
            }, 0);
            const effectiveDistance = Number((distances / 4).toFixed(4));
            collisions.push({
                id,
                data: {
                    droppableContainer,
                    value: effectiveDistance
                }
            });
        }
    }
    return collisions.sort(sortCollisionsAsc);
};
function adjustScale(transform, rect1, rect2) {
    return {
        ...transform,
        scaleX: rect1 && rect2 ? rect1.width / rect2.width : 1,
        scaleY: rect1 && rect2 ? rect1.height / rect2.height : 1
    };
}
function getRectDelta(rect1, rect2) {
    return rect1 && rect2 ? {
        x: rect1.left - rect2.left,
        y: rect1.top - rect2.top
    } : defaultCoordinates;
}
function createRectAdjustmentFn(modifier) {
    return function adjustClientRect(rect) {
        for(var _len = arguments.length, adjustments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)adjustments[_key - 1] = arguments[_key];
        return adjustments.reduce((acc, adjustment)=>({
                ...acc,
                top: acc.top + modifier * adjustment.y,
                bottom: acc.bottom + modifier * adjustment.y,
                left: acc.left + modifier * adjustment.x,
                right: acc.right + modifier * adjustment.x
            }), {
            ...rect
        });
    };
}
const getAdjustedRect = /*#__PURE__*/ createRectAdjustmentFn(1);
function parseTransform(transform) {
    if (transform.startsWith('matrix3d(')) {
        const transformArray = transform.slice(9, -1).split(/, /);
        return {
            x: +transformArray[12],
            y: +transformArray[13],
            scaleX: +transformArray[0],
            scaleY: +transformArray[5]
        };
    } else if (transform.startsWith('matrix(')) {
        const transformArray = transform.slice(7, -1).split(/, /);
        return {
            x: +transformArray[4],
            y: +transformArray[5],
            scaleX: +transformArray[0],
            scaleY: +transformArray[3]
        };
    }
    return null;
}
function inverseTransform(rect, transform, transformOrigin) {
    const parsedTransform = parseTransform(transform);
    if (!parsedTransform) return rect;
    const { scaleX, scaleY, x: translateX, y: translateY } = parsedTransform;
    const x = rect.left - translateX - (1 - scaleX) * parseFloat(transformOrigin);
    const y = rect.top - translateY - (1 - scaleY) * parseFloat(transformOrigin.slice(transformOrigin.indexOf(' ') + 1));
    const w = scaleX ? rect.width / scaleX : rect.width;
    const h = scaleY ? rect.height / scaleY : rect.height;
    return {
        width: w,
        height: h,
        top: y,
        right: x + w,
        bottom: y + h,
        left: x
    };
}
const defaultOptions = {
    ignoreTransform: false
};
/**
 * Returns the bounding client rect of an element relative to the viewport.
 */ function getClientRect(element, options) {
    if (options === void 0) options = defaultOptions;
    let rect = element.getBoundingClientRect();
    if (options.ignoreTransform) {
        const { transform, transformOrigin } = (0, _utilities.getWindow)(element).getComputedStyle(element);
        if (transform) rect = inverseTransform(rect, transform, transformOrigin);
    }
    const { top, left, width, height, bottom, right } = rect;
    return {
        top,
        left,
        width,
        height,
        bottom,
        right
    };
}
/**
 * Returns the bounding client rect of an element relative to the viewport.
 *
 * @remarks
 * The ClientRect returned by this method does not take into account transforms
 * applied to the element it measures.
 *
 */ function getTransformAgnosticClientRect(element) {
    return getClientRect(element, {
        ignoreTransform: true
    });
}
function getWindowClientRect(element) {
    const width = element.innerWidth;
    const height = element.innerHeight;
    return {
        top: 0,
        left: 0,
        right: width,
        bottom: height,
        width,
        height
    };
}
function isFixed(node, computedStyle) {
    if (computedStyle === void 0) computedStyle = (0, _utilities.getWindow)(node).getComputedStyle(node);
    return computedStyle.position === 'fixed';
}
function isScrollable(element, computedStyle) {
    if (computedStyle === void 0) computedStyle = (0, _utilities.getWindow)(element).getComputedStyle(element);
    const overflowRegex = /(auto|scroll|overlay)/;
    const properties = [
        'overflow',
        'overflowX',
        'overflowY'
    ];
    return properties.some((property)=>{
        const value = computedStyle[property];
        return typeof value === 'string' ? overflowRegex.test(value) : false;
    });
}
function getScrollableAncestors(element, limit) {
    const scrollParents = [];
    function findScrollableAncestors(node) {
        if (limit != null && scrollParents.length >= limit) return scrollParents;
        if (!node) return scrollParents;
        if ((0, _utilities.isDocument)(node) && node.scrollingElement != null && !scrollParents.includes(node.scrollingElement)) {
            scrollParents.push(node.scrollingElement);
            return scrollParents;
        }
        if (!(0, _utilities.isHTMLElement)(node) || (0, _utilities.isSVGElement)(node)) return scrollParents;
        if (scrollParents.includes(node)) return scrollParents;
        const computedStyle = (0, _utilities.getWindow)(element).getComputedStyle(node);
        if (node !== element) {
            if (isScrollable(node, computedStyle)) scrollParents.push(node);
        }
        if (isFixed(node, computedStyle)) return scrollParents;
        return findScrollableAncestors(node.parentNode);
    }
    if (!element) return scrollParents;
    return findScrollableAncestors(element);
}
function getFirstScrollableAncestor(node) {
    const [firstScrollableAncestor] = getScrollableAncestors(node, 1);
    return firstScrollableAncestor != null ? firstScrollableAncestor : null;
}
function getScrollableElement(element) {
    if (!_utilities.canUseDOM || !element) return null;
    if ((0, _utilities.isWindow)(element)) return element;
    if (!(0, _utilities.isNode)(element)) return null;
    if ((0, _utilities.isDocument)(element) || element === (0, _utilities.getOwnerDocument)(element).scrollingElement) return window;
    if ((0, _utilities.isHTMLElement)(element)) return element;
    return null;
}
function getScrollXCoordinate(element) {
    if ((0, _utilities.isWindow)(element)) return element.scrollX;
    return element.scrollLeft;
}
function getScrollYCoordinate(element) {
    if ((0, _utilities.isWindow)(element)) return element.scrollY;
    return element.scrollTop;
}
function getScrollCoordinates(element) {
    return {
        x: getScrollXCoordinate(element),
        y: getScrollYCoordinate(element)
    };
}
var Direction;
(function(Direction) {
    Direction[Direction["Forward"] = 1] = "Forward";
    Direction[Direction["Backward"] = -1] = "Backward";
})(Direction || (Direction = {}));
function isDocumentScrollingElement(element) {
    if (!_utilities.canUseDOM || !element) return false;
    return element === document.scrollingElement;
}
function getScrollPosition(scrollingContainer) {
    const minScroll = {
        x: 0,
        y: 0
    };
    const dimensions = isDocumentScrollingElement(scrollingContainer) ? {
        height: window.innerHeight,
        width: window.innerWidth
    } : {
        height: scrollingContainer.clientHeight,
        width: scrollingContainer.clientWidth
    };
    const maxScroll = {
        x: scrollingContainer.scrollWidth - dimensions.width,
        y: scrollingContainer.scrollHeight - dimensions.height
    };
    const isTop = scrollingContainer.scrollTop <= minScroll.y;
    const isLeft = scrollingContainer.scrollLeft <= minScroll.x;
    const isBottom = scrollingContainer.scrollTop >= maxScroll.y;
    const isRight = scrollingContainer.scrollLeft >= maxScroll.x;
    return {
        isTop,
        isLeft,
        isBottom,
        isRight,
        maxScroll,
        minScroll
    };
}
const defaultThreshold = {
    x: 0.2,
    y: 0.2
};
function getScrollDirectionAndSpeed(scrollContainer, scrollContainerRect, _ref, acceleration, thresholdPercentage) {
    let { top, left, right, bottom } = _ref;
    if (acceleration === void 0) acceleration = 10;
    if (thresholdPercentage === void 0) thresholdPercentage = defaultThreshold;
    const { isTop, isBottom, isLeft, isRight } = getScrollPosition(scrollContainer);
    const direction = {
        x: 0,
        y: 0
    };
    const speed = {
        x: 0,
        y: 0
    };
    const threshold = {
        height: scrollContainerRect.height * thresholdPercentage.y,
        width: scrollContainerRect.width * thresholdPercentage.x
    };
    if (!isTop && top <= scrollContainerRect.top + threshold.height) {
        // Scroll Up
        direction.y = Direction.Backward;
        speed.y = acceleration * Math.abs((scrollContainerRect.top + threshold.height - top) / threshold.height);
    } else if (!isBottom && bottom >= scrollContainerRect.bottom - threshold.height) {
        // Scroll Down
        direction.y = Direction.Forward;
        speed.y = acceleration * Math.abs((scrollContainerRect.bottom - threshold.height - bottom) / threshold.height);
    }
    if (!isRight && right >= scrollContainerRect.right - threshold.width) {
        // Scroll Right
        direction.x = Direction.Forward;
        speed.x = acceleration * Math.abs((scrollContainerRect.right - threshold.width - right) / threshold.width);
    } else if (!isLeft && left <= scrollContainerRect.left + threshold.width) {
        // Scroll Left
        direction.x = Direction.Backward;
        speed.x = acceleration * Math.abs((scrollContainerRect.left + threshold.width - left) / threshold.width);
    }
    return {
        direction,
        speed
    };
}
function getScrollElementRect(element) {
    if (element === document.scrollingElement) {
        const { innerWidth, innerHeight } = window;
        return {
            top: 0,
            left: 0,
            right: innerWidth,
            bottom: innerHeight,
            width: innerWidth,
            height: innerHeight
        };
    }
    const { top, left, right, bottom } = element.getBoundingClientRect();
    return {
        top,
        left,
        right,
        bottom,
        width: element.clientWidth,
        height: element.clientHeight
    };
}
function getScrollOffsets(scrollableAncestors) {
    return scrollableAncestors.reduce((acc, node)=>{
        return (0, _utilities.add)(acc, getScrollCoordinates(node));
    }, defaultCoordinates);
}
function getScrollXOffset(scrollableAncestors) {
    return scrollableAncestors.reduce((acc, node)=>{
        return acc + getScrollXCoordinate(node);
    }, 0);
}
function getScrollYOffset(scrollableAncestors) {
    return scrollableAncestors.reduce((acc, node)=>{
        return acc + getScrollYCoordinate(node);
    }, 0);
}
function scrollIntoViewIfNeeded(element, measure) {
    if (measure === void 0) measure = getClientRect;
    if (!element) return;
    const { top, left, bottom, right } = measure(element);
    const firstScrollableAncestor = getFirstScrollableAncestor(element);
    if (!firstScrollableAncestor) return;
    if (bottom <= 0 || right <= 0 || top >= window.innerHeight || left >= window.innerWidth) element.scrollIntoView({
        block: 'center',
        inline: 'center'
    });
}
const properties = [
    [
        'x',
        [
            'left',
            'right'
        ],
        getScrollXOffset
    ],
    [
        'y',
        [
            'top',
            'bottom'
        ],
        getScrollYOffset
    ]
];
class Rect {
    constructor(rect, element){
        this.rect = void 0;
        this.width = void 0;
        this.height = void 0;
        this.top = void 0;
        this.bottom = void 0;
        this.right = void 0;
        this.left = void 0;
        const scrollableAncestors = getScrollableAncestors(element);
        const scrollOffsets = getScrollOffsets(scrollableAncestors);
        this.rect = {
            ...rect
        };
        this.width = rect.width;
        this.height = rect.height;
        for (const [axis, keys, getScrollOffset] of properties)for (const key of keys)Object.defineProperty(this, key, {
            get: ()=>{
                const currentOffsets = getScrollOffset(scrollableAncestors);
                const scrollOffsetsDeltla = scrollOffsets[axis] - currentOffsets;
                return this.rect[key] + scrollOffsetsDeltla;
            },
            enumerable: true
        });
        Object.defineProperty(this, 'rect', {
            enumerable: false
        });
    }
}
class Listeners {
    constructor(target){
        this.target = void 0;
        this.listeners = [];
        this.removeAll = ()=>{
            this.listeners.forEach((listener)=>{
                var _this$target;
                return (_this$target = this.target) == null ? void 0 : _this$target.removeEventListener(...listener);
            });
        };
        this.target = target;
    }
    add(eventName, handler, options) {
        var _this$target2;
        (_this$target2 = this.target) == null || _this$target2.addEventListener(eventName, handler, options);
        this.listeners.push([
            eventName,
            handler,
            options
        ]);
    }
}
function getEventListenerTarget(target) {
    // If the `event.target` element is removed from the document events will still be targeted
    // at it, and hence won't always bubble up to the window or document anymore.
    // If there is any risk of an element being removed while it is being dragged,
    // the best practice is to attach the event listeners directly to the target.
    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget
    const { EventTarget } = (0, _utilities.getWindow)(target);
    return target instanceof EventTarget ? target : (0, _utilities.getOwnerDocument)(target);
}
function hasExceededDistance(delta, measurement) {
    const dx = Math.abs(delta.x);
    const dy = Math.abs(delta.y);
    if (typeof measurement === 'number') return Math.sqrt(dx ** 2 + dy ** 2) > measurement;
    if ('x' in measurement && 'y' in measurement) return dx > measurement.x && dy > measurement.y;
    if ('x' in measurement) return dx > measurement.x;
    if ('y' in measurement) return dy > measurement.y;
    return false;
}
var EventName;
(function(EventName) {
    EventName["Click"] = "click";
    EventName["DragStart"] = "dragstart";
    EventName["Keydown"] = "keydown";
    EventName["ContextMenu"] = "contextmenu";
    EventName["Resize"] = "resize";
    EventName["SelectionChange"] = "selectionchange";
    EventName["VisibilityChange"] = "visibilitychange";
})(EventName || (EventName = {}));
function preventDefault(event) {
    event.preventDefault();
}
function stopPropagation(event) {
    event.stopPropagation();
}
var KeyboardCode;
(function(KeyboardCode) {
    KeyboardCode["Space"] = "Space";
    KeyboardCode["Down"] = "ArrowDown";
    KeyboardCode["Right"] = "ArrowRight";
    KeyboardCode["Left"] = "ArrowLeft";
    KeyboardCode["Up"] = "ArrowUp";
    KeyboardCode["Esc"] = "Escape";
    KeyboardCode["Enter"] = "Enter";
    KeyboardCode["Tab"] = "Tab";
})(KeyboardCode || (KeyboardCode = {}));
const defaultKeyboardCodes = {
    start: [
        KeyboardCode.Space,
        KeyboardCode.Enter
    ],
    cancel: [
        KeyboardCode.Esc
    ],
    end: [
        KeyboardCode.Space,
        KeyboardCode.Enter,
        KeyboardCode.Tab
    ]
};
const defaultKeyboardCoordinateGetter = (event, _ref)=>{
    let { currentCoordinates } = _ref;
    switch(event.code){
        case KeyboardCode.Right:
            return {
                ...currentCoordinates,
                x: currentCoordinates.x + 25
            };
        case KeyboardCode.Left:
            return {
                ...currentCoordinates,
                x: currentCoordinates.x - 25
            };
        case KeyboardCode.Down:
            return {
                ...currentCoordinates,
                y: currentCoordinates.y + 25
            };
        case KeyboardCode.Up:
            return {
                ...currentCoordinates,
                y: currentCoordinates.y - 25
            };
    }
    return undefined;
};
class KeyboardSensor {
    constructor(props){
        this.props = void 0;
        this.autoScrollEnabled = false;
        this.referenceCoordinates = void 0;
        this.listeners = void 0;
        this.windowListeners = void 0;
        this.props = props;
        const { event: { target } } = props;
        this.props = props;
        this.listeners = new Listeners((0, _utilities.getOwnerDocument)(target));
        this.windowListeners = new Listeners((0, _utilities.getWindow)(target));
        this.handleKeyDown = this.handleKeyDown.bind(this);
        this.handleCancel = this.handleCancel.bind(this);
        this.attach();
    }
    attach() {
        this.handleStart();
        this.windowListeners.add(EventName.Resize, this.handleCancel);
        this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);
        setTimeout(()=>this.listeners.add(EventName.Keydown, this.handleKeyDown));
    }
    handleStart() {
        const { activeNode, onStart } = this.props;
        const node = activeNode.node.current;
        if (node) scrollIntoViewIfNeeded(node);
        onStart(defaultCoordinates);
    }
    handleKeyDown(event) {
        if ((0, _utilities.isKeyboardEvent)(event)) {
            const { active, context, options } = this.props;
            const { keyboardCodes = defaultKeyboardCodes, coordinateGetter = defaultKeyboardCoordinateGetter, scrollBehavior = 'smooth' } = options;
            const { code } = event;
            if (keyboardCodes.end.includes(code)) {
                this.handleEnd(event);
                return;
            }
            if (keyboardCodes.cancel.includes(code)) {
                this.handleCancel(event);
                return;
            }
            const { collisionRect } = context.current;
            const currentCoordinates = collisionRect ? {
                x: collisionRect.left,
                y: collisionRect.top
            } : defaultCoordinates;
            if (!this.referenceCoordinates) this.referenceCoordinates = currentCoordinates;
            const newCoordinates = coordinateGetter(event, {
                active,
                context: context.current,
                currentCoordinates
            });
            if (newCoordinates) {
                const coordinatesDelta = (0, _utilities.subtract)(newCoordinates, currentCoordinates);
                const scrollDelta = {
                    x: 0,
                    y: 0
                };
                const { scrollableAncestors } = context.current;
                for (const scrollContainer of scrollableAncestors){
                    const direction = event.code;
                    const { isTop, isRight, isLeft, isBottom, maxScroll, minScroll } = getScrollPosition(scrollContainer);
                    const scrollElementRect = getScrollElementRect(scrollContainer);
                    const clampedCoordinates = {
                        x: Math.min(direction === KeyboardCode.Right ? scrollElementRect.right - scrollElementRect.width / 2 : scrollElementRect.right, Math.max(direction === KeyboardCode.Right ? scrollElementRect.left : scrollElementRect.left + scrollElementRect.width / 2, newCoordinates.x)),
                        y: Math.min(direction === KeyboardCode.Down ? scrollElementRect.bottom - scrollElementRect.height / 2 : scrollElementRect.bottom, Math.max(direction === KeyboardCode.Down ? scrollElementRect.top : scrollElementRect.top + scrollElementRect.height / 2, newCoordinates.y))
                    };
                    const canScrollX = direction === KeyboardCode.Right && !isRight || direction === KeyboardCode.Left && !isLeft;
                    const canScrollY = direction === KeyboardCode.Down && !isBottom || direction === KeyboardCode.Up && !isTop;
                    if (canScrollX && clampedCoordinates.x !== newCoordinates.x) {
                        const newScrollCoordinates = scrollContainer.scrollLeft + coordinatesDelta.x;
                        const canScrollToNewCoordinates = direction === KeyboardCode.Right && newScrollCoordinates <= maxScroll.x || direction === KeyboardCode.Left && newScrollCoordinates >= minScroll.x;
                        if (canScrollToNewCoordinates && !coordinatesDelta.y) {
                            // We don't need to update coordinates, the scroll adjustment alone will trigger
                            // logic to auto-detect the new container we are over
                            scrollContainer.scrollTo({
                                left: newScrollCoordinates,
                                behavior: scrollBehavior
                            });
                            return;
                        }
                        if (canScrollToNewCoordinates) scrollDelta.x = scrollContainer.scrollLeft - newScrollCoordinates;
                        else scrollDelta.x = direction === KeyboardCode.Right ? scrollContainer.scrollLeft - maxScroll.x : scrollContainer.scrollLeft - minScroll.x;
                        if (scrollDelta.x) scrollContainer.scrollBy({
                            left: -scrollDelta.x,
                            behavior: scrollBehavior
                        });
                        break;
                    } else if (canScrollY && clampedCoordinates.y !== newCoordinates.y) {
                        const newScrollCoordinates = scrollContainer.scrollTop + coordinatesDelta.y;
                        const canScrollToNewCoordinates = direction === KeyboardCode.Down && newScrollCoordinates <= maxScroll.y || direction === KeyboardCode.Up && newScrollCoordinates >= minScroll.y;
                        if (canScrollToNewCoordinates && !coordinatesDelta.x) {
                            // We don't need to update coordinates, the scroll adjustment alone will trigger
                            // logic to auto-detect the new container we are over
                            scrollContainer.scrollTo({
                                top: newScrollCoordinates,
                                behavior: scrollBehavior
                            });
                            return;
                        }
                        if (canScrollToNewCoordinates) scrollDelta.y = scrollContainer.scrollTop - newScrollCoordinates;
                        else scrollDelta.y = direction === KeyboardCode.Down ? scrollContainer.scrollTop - maxScroll.y : scrollContainer.scrollTop - minScroll.y;
                        if (scrollDelta.y) scrollContainer.scrollBy({
                            top: -scrollDelta.y,
                            behavior: scrollBehavior
                        });
                        break;
                    }
                }
                this.handleMove(event, (0, _utilities.add)((0, _utilities.subtract)(newCoordinates, this.referenceCoordinates), scrollDelta));
            }
        }
    }
    handleMove(event, coordinates) {
        const { onMove } = this.props;
        event.preventDefault();
        onMove(coordinates);
    }
    handleEnd(event) {
        const { onEnd } = this.props;
        event.preventDefault();
        this.detach();
        onEnd();
    }
    handleCancel(event) {
        const { onCancel } = this.props;
        event.preventDefault();
        this.detach();
        onCancel();
    }
    detach() {
        this.listeners.removeAll();
        this.windowListeners.removeAll();
    }
}
KeyboardSensor.activators = [
    {
        eventName: 'onKeyDown',
        handler: (event, _ref, _ref2)=>{
            let { keyboardCodes = defaultKeyboardCodes, onActivation } = _ref;
            let { active } = _ref2;
            const { code } = event.nativeEvent;
            if (keyboardCodes.start.includes(code)) {
                const activator = active.activatorNode.current;
                if (activator && event.target !== activator) return false;
                event.preventDefault();
                onActivation == null || onActivation({
                    event: event.nativeEvent
                });
                return true;
            }
            return false;
        }
    }
];
function isDistanceConstraint(constraint) {
    return Boolean(constraint && 'distance' in constraint);
}
function isDelayConstraint(constraint) {
    return Boolean(constraint && 'delay' in constraint);
}
class AbstractPointerSensor {
    constructor(props, events, listenerTarget){
        var _getEventCoordinates;
        if (listenerTarget === void 0) listenerTarget = getEventListenerTarget(props.event.target);
        this.props = void 0;
        this.events = void 0;
        this.autoScrollEnabled = true;
        this.document = void 0;
        this.activated = false;
        this.initialCoordinates = void 0;
        this.timeoutId = null;
        this.listeners = void 0;
        this.documentListeners = void 0;
        this.windowListeners = void 0;
        this.props = props;
        this.events = events;
        const { event } = props;
        const { target } = event;
        this.props = props;
        this.events = events;
        this.document = (0, _utilities.getOwnerDocument)(target);
        this.documentListeners = new Listeners(this.document);
        this.listeners = new Listeners(listenerTarget);
        this.windowListeners = new Listeners((0, _utilities.getWindow)(target));
        this.initialCoordinates = (_getEventCoordinates = (0, _utilities.getEventCoordinates)(event)) != null ? _getEventCoordinates : defaultCoordinates;
        this.handleStart = this.handleStart.bind(this);
        this.handleMove = this.handleMove.bind(this);
        this.handleEnd = this.handleEnd.bind(this);
        this.handleCancel = this.handleCancel.bind(this);
        this.handleKeydown = this.handleKeydown.bind(this);
        this.removeTextSelection = this.removeTextSelection.bind(this);
        this.attach();
    }
    attach() {
        const { events, props: { options: { activationConstraint, bypassActivationConstraint } } } = this;
        this.listeners.add(events.move.name, this.handleMove, {
            passive: false
        });
        this.listeners.add(events.end.name, this.handleEnd);
        if (events.cancel) this.listeners.add(events.cancel.name, this.handleCancel);
        this.windowListeners.add(EventName.Resize, this.handleCancel);
        this.windowListeners.add(EventName.DragStart, preventDefault);
        this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);
        this.windowListeners.add(EventName.ContextMenu, preventDefault);
        this.documentListeners.add(EventName.Keydown, this.handleKeydown);
        if (activationConstraint) {
            if (bypassActivationConstraint != null && bypassActivationConstraint({
                event: this.props.event,
                activeNode: this.props.activeNode,
                options: this.props.options
            })) return this.handleStart();
            if (isDelayConstraint(activationConstraint)) {
                this.timeoutId = setTimeout(this.handleStart, activationConstraint.delay);
                this.handlePending(activationConstraint);
                return;
            }
            if (isDistanceConstraint(activationConstraint)) {
                this.handlePending(activationConstraint);
                return;
            }
        }
        this.handleStart();
    }
    detach() {
        this.listeners.removeAll();
        this.windowListeners.removeAll(); // Wait until the next event loop before removing document listeners
        // This is necessary because we listen for `click` and `selection` events on the document
        setTimeout(this.documentListeners.removeAll, 50);
        if (this.timeoutId !== null) {
            clearTimeout(this.timeoutId);
            this.timeoutId = null;
        }
    }
    handlePending(constraint, offset) {
        const { active, onPending } = this.props;
        onPending(active, constraint, this.initialCoordinates, offset);
    }
    handleStart() {
        const { initialCoordinates } = this;
        const { onStart } = this.props;
        if (initialCoordinates) {
            this.activated = true; // Stop propagation of click events once activation constraints are met
            this.documentListeners.add(EventName.Click, stopPropagation, {
                capture: true
            }); // Remove any text selection from the document
            this.removeTextSelection(); // Prevent further text selection while dragging
            this.documentListeners.add(EventName.SelectionChange, this.removeTextSelection);
            onStart(initialCoordinates);
        }
    }
    handleMove(event) {
        var _getEventCoordinates2;
        const { activated, initialCoordinates, props } = this;
        const { onMove, options: { activationConstraint } } = props;
        if (!initialCoordinates) return;
        const coordinates = (_getEventCoordinates2 = (0, _utilities.getEventCoordinates)(event)) != null ? _getEventCoordinates2 : defaultCoordinates;
        const delta = (0, _utilities.subtract)(initialCoordinates, coordinates); // Constraint validation
        if (!activated && activationConstraint) {
            if (isDistanceConstraint(activationConstraint)) {
                if (activationConstraint.tolerance != null && hasExceededDistance(delta, activationConstraint.tolerance)) return this.handleCancel();
                if (hasExceededDistance(delta, activationConstraint.distance)) return this.handleStart();
            }
            if (isDelayConstraint(activationConstraint)) {
                if (hasExceededDistance(delta, activationConstraint.tolerance)) return this.handleCancel();
            }
            this.handlePending(activationConstraint, delta);
            return;
        }
        if (event.cancelable) event.preventDefault();
        onMove(coordinates);
    }
    handleEnd() {
        const { onAbort, onEnd } = this.props;
        this.detach();
        if (!this.activated) onAbort(this.props.active);
        onEnd();
    }
    handleCancel() {
        const { onAbort, onCancel } = this.props;
        this.detach();
        if (!this.activated) onAbort(this.props.active);
        onCancel();
    }
    handleKeydown(event) {
        if (event.code === KeyboardCode.Esc) this.handleCancel();
    }
    removeTextSelection() {
        var _this$document$getSel;
        (_this$document$getSel = this.document.getSelection()) == null || _this$document$getSel.removeAllRanges();
    }
}
const events = {
    cancel: {
        name: 'pointercancel'
    },
    move: {
        name: 'pointermove'
    },
    end: {
        name: 'pointerup'
    }
};
class PointerSensor extends AbstractPointerSensor {
    constructor(props){
        const { event } = props; // Pointer events stop firing if the target is unmounted while dragging
        // Therefore we attach listeners to the owner document instead
        const listenerTarget = (0, _utilities.getOwnerDocument)(event.target);
        super(props, events, listenerTarget);
    }
}
PointerSensor.activators = [
    {
        eventName: 'onPointerDown',
        handler: (_ref, _ref2)=>{
            let { nativeEvent: event } = _ref;
            let { onActivation } = _ref2;
            if (!event.isPrimary || event.button !== 0) return false;
            onActivation == null || onActivation({
                event
            });
            return true;
        }
    }
];
const events$1 = {
    move: {
        name: 'mousemove'
    },
    end: {
        name: 'mouseup'
    }
};
var MouseButton;
(function(MouseButton) {
    MouseButton[MouseButton["RightClick"] = 2] = "RightClick";
})(MouseButton || (MouseButton = {}));
class MouseSensor extends AbstractPointerSensor {
    constructor(props){
        super(props, events$1, (0, _utilities.getOwnerDocument)(props.event.target));
    }
}
MouseSensor.activators = [
    {
        eventName: 'onMouseDown',
        handler: (_ref, _ref2)=>{
            let { nativeEvent: event } = _ref;
            let { onActivation } = _ref2;
            if (event.button === MouseButton.RightClick) return false;
            onActivation == null || onActivation({
                event
            });
            return true;
        }
    }
];
const events$2 = {
    cancel: {
        name: 'touchcancel'
    },
    move: {
        name: 'touchmove'
    },
    end: {
        name: 'touchend'
    }
};
class TouchSensor extends AbstractPointerSensor {
    constructor(props){
        super(props, events$2);
    }
    static setup() {
        // Adding a non-capture and non-passive `touchmove` listener in order
        // to force `event.preventDefault()` calls to work in dynamically added
        // touchmove event handlers. This is required for iOS Safari.
        window.addEventListener(events$2.move.name, noop, {
            capture: false,
            passive: false
        });
        return function teardown() {
            window.removeEventListener(events$2.move.name, noop);
        }; // We create a new handler because the teardown function of another sensor
        // could remove our event listener if we use a referentially equal listener.
        function noop() {}
    }
}
TouchSensor.activators = [
    {
        eventName: 'onTouchStart',
        handler: (_ref, _ref2)=>{
            let { nativeEvent: event } = _ref;
            let { onActivation } = _ref2;
            const { touches } = event;
            if (touches.length > 1) return false;
            onActivation == null || onActivation({
                event
            });
            return true;
        }
    }
];
var AutoScrollActivator;
(function(AutoScrollActivator) {
    AutoScrollActivator[AutoScrollActivator["Pointer"] = 0] = "Pointer";
    AutoScrollActivator[AutoScrollActivator["DraggableRect"] = 1] = "DraggableRect";
})(AutoScrollActivator || (AutoScrollActivator = {}));
var TraversalOrder;
(function(TraversalOrder) {
    TraversalOrder[TraversalOrder["TreeOrder"] = 0] = "TreeOrder";
    TraversalOrder[TraversalOrder["ReversedTreeOrder"] = 1] = "ReversedTreeOrder";
})(TraversalOrder || (TraversalOrder = {}));
function useAutoScroller(_ref) {
    let { acceleration, activator = AutoScrollActivator.Pointer, canScroll, draggingRect, enabled, interval = 5, order = TraversalOrder.TreeOrder, pointerCoordinates, scrollableAncestors, scrollableAncestorRects, delta, threshold } = _ref;
    const scrollIntent = useScrollIntent({
        delta,
        disabled: !enabled
    });
    const [setAutoScrollInterval, clearAutoScrollInterval] = (0, _utilities.useInterval)();
    const scrollSpeed = (0, _react.useRef)({
        x: 0,
        y: 0
    });
    const scrollDirection = (0, _react.useRef)({
        x: 0,
        y: 0
    });
    const rect = (0, _react.useMemo)(()=>{
        switch(activator){
            case AutoScrollActivator.Pointer:
                return pointerCoordinates ? {
                    top: pointerCoordinates.y,
                    bottom: pointerCoordinates.y,
                    left: pointerCoordinates.x,
                    right: pointerCoordinates.x
                } : null;
            case AutoScrollActivator.DraggableRect:
                return draggingRect;
        }
    }, [
        activator,
        draggingRect,
        pointerCoordinates
    ]);
    const scrollContainerRef = (0, _react.useRef)(null);
    const autoScroll = (0, _react.useCallback)(()=>{
        const scrollContainer = scrollContainerRef.current;
        if (!scrollContainer) return;
        const scrollLeft = scrollSpeed.current.x * scrollDirection.current.x;
        const scrollTop = scrollSpeed.current.y * scrollDirection.current.y;
        scrollContainer.scrollBy(scrollLeft, scrollTop);
    }, []);
    const sortedScrollableAncestors = (0, _react.useMemo)(()=>order === TraversalOrder.TreeOrder ? [
            ...scrollableAncestors
        ].reverse() : scrollableAncestors, [
        order,
        scrollableAncestors
    ]);
    (0, _react.useEffect)(()=>{
        if (!enabled || !scrollableAncestors.length || !rect) {
            clearAutoScrollInterval();
            return;
        }
        for (const scrollContainer of sortedScrollableAncestors){
            if ((canScroll == null ? void 0 : canScroll(scrollContainer)) === false) continue;
            const index = scrollableAncestors.indexOf(scrollContainer);
            const scrollContainerRect = scrollableAncestorRects[index];
            if (!scrollContainerRect) continue;
            const { direction, speed } = getScrollDirectionAndSpeed(scrollContainer, scrollContainerRect, rect, acceleration, threshold);
            for (const axis of [
                'x',
                'y'
            ])if (!scrollIntent[axis][direction[axis]]) {
                speed[axis] = 0;
                direction[axis] = 0;
            }
            if (speed.x > 0 || speed.y > 0) {
                clearAutoScrollInterval();
                scrollContainerRef.current = scrollContainer;
                setAutoScrollInterval(autoScroll, interval);
                scrollSpeed.current = speed;
                scrollDirection.current = direction;
                return;
            }
        }
        scrollSpeed.current = {
            x: 0,
            y: 0
        };
        scrollDirection.current = {
            x: 0,
            y: 0
        };
        clearAutoScrollInterval();
    }, [
        acceleration,
        autoScroll,
        canScroll,
        clearAutoScrollInterval,
        enabled,
        interval,
        JSON.stringify(rect),
        JSON.stringify(scrollIntent),
        setAutoScrollInterval,
        scrollableAncestors,
        sortedScrollableAncestors,
        scrollableAncestorRects,
        JSON.stringify(threshold)
    ]);
}
const defaultScrollIntent = {
    x: {
        [Direction.Backward]: false,
        [Direction.Forward]: false
    },
    y: {
        [Direction.Backward]: false,
        [Direction.Forward]: false
    }
};
function useScrollIntent(_ref2) {
    let { delta, disabled } = _ref2;
    const previousDelta = (0, _utilities.usePrevious)(delta);
    return (0, _utilities.useLazyMemo)((previousIntent)=>{
        if (disabled || !previousDelta || !previousIntent) // Reset scroll intent tracking when auto-scrolling is disabled
        return defaultScrollIntent;
        const direction = {
            x: Math.sign(delta.x - previousDelta.x),
            y: Math.sign(delta.y - previousDelta.y)
        }; // Keep track of the user intent to scroll in each direction for both axis
        return {
            x: {
                [Direction.Backward]: previousIntent.x[Direction.Backward] || direction.x === -1,
                [Direction.Forward]: previousIntent.x[Direction.Forward] || direction.x === 1
            },
            y: {
                [Direction.Backward]: previousIntent.y[Direction.Backward] || direction.y === -1,
                [Direction.Forward]: previousIntent.y[Direction.Forward] || direction.y === 1
            }
        };
    }, [
        disabled,
        delta,
        previousDelta
    ]);
}
function useCachedNode(draggableNodes, id) {
    const draggableNode = id != null ? draggableNodes.get(id) : undefined;
    const node = draggableNode ? draggableNode.node.current : null;
    return (0, _utilities.useLazyMemo)((cachedNode)=>{
        var _ref;
        if (id == null) return null;
         // In some cases, the draggable node can unmount while dragging
        // This is the case for virtualized lists. In those situations,
        // we fall back to the last known value for that node.
        return (_ref = node != null ? node : cachedNode) != null ? _ref : null;
    }, [
        node,
        id
    ]);
}
function useCombineActivators(sensors, getSyntheticHandler) {
    return (0, _react.useMemo)(()=>sensors.reduce((accumulator, sensor)=>{
            const { sensor: Sensor } = sensor;
            const sensorActivators = Sensor.activators.map((activator)=>({
                    eventName: activator.eventName,
                    handler: getSyntheticHandler(activator.handler, sensor)
                }));
            return [
                ...accumulator,
                ...sensorActivators
            ];
        }, []), [
        sensors,
        getSyntheticHandler
    ]);
}
var MeasuringStrategy;
(function(MeasuringStrategy) {
    MeasuringStrategy[MeasuringStrategy["Always"] = 0] = "Always";
    MeasuringStrategy[MeasuringStrategy["BeforeDragging"] = 1] = "BeforeDragging";
    MeasuringStrategy[MeasuringStrategy["WhileDragging"] = 2] = "WhileDragging";
})(MeasuringStrategy || (MeasuringStrategy = {}));
var MeasuringFrequency;
(function(MeasuringFrequency) {
    MeasuringFrequency["Optimized"] = "optimized";
})(MeasuringFrequency || (MeasuringFrequency = {}));
const defaultValue = /*#__PURE__*/ new Map();
function useDroppableMeasuring(containers, _ref) {
    let { dragging, dependencies, config } = _ref;
    const [queue, setQueue] = (0, _react.useState)(null);
    const { frequency, measure, strategy } = config;
    const containersRef = (0, _react.useRef)(containers);
    const disabled = isDisabled();
    const disabledRef = (0, _utilities.useLatestValue)(disabled);
    const measureDroppableContainers = (0, _react.useCallback)(function(ids) {
        if (ids === void 0) ids = [];
        if (disabledRef.current) return;
        setQueue((value)=>{
            if (value === null) return ids;
            return value.concat(ids.filter((id)=>!value.includes(id)));
        });
    }, [
        disabledRef
    ]);
    const timeoutId = (0, _react.useRef)(null);
    const droppableRects = (0, _utilities.useLazyMemo)((previousValue)=>{
        if (disabled && !dragging) return defaultValue;
        if (!previousValue || previousValue === defaultValue || containersRef.current !== containers || queue != null) {
            const map = new Map();
            for (let container of containers){
                if (!container) continue;
                if (queue && queue.length > 0 && !queue.includes(container.id) && container.rect.current) {
                    // This container does not need to be re-measured
                    map.set(container.id, container.rect.current);
                    continue;
                }
                const node = container.node.current;
                const rect = node ? new Rect(measure(node), node) : null;
                container.rect.current = rect;
                if (rect) map.set(container.id, rect);
            }
            return map;
        }
        return previousValue;
    }, [
        containers,
        queue,
        dragging,
        disabled,
        measure
    ]);
    (0, _react.useEffect)(()=>{
        containersRef.current = containers;
    }, [
        containers
    ]);
    (0, _react.useEffect)(()=>{
        if (disabled) return;
        measureDroppableContainers();
    }, [
        dragging,
        disabled
    ]);
    (0, _react.useEffect)(()=>{
        if (queue && queue.length > 0) setQueue(null);
    }, [
        JSON.stringify(queue)
    ]);
    (0, _react.useEffect)(()=>{
        if (disabled || typeof frequency !== 'number' || timeoutId.current !== null) return;
        timeoutId.current = setTimeout(()=>{
            measureDroppableContainers();
            timeoutId.current = null;
        }, frequency);
    }, [
        frequency,
        disabled,
        measureDroppableContainers,
        ...dependencies
    ]);
    return {
        droppableRects,
        measureDroppableContainers,
        measuringScheduled: queue != null
    };
    function isDisabled() {
        switch(strategy){
            case MeasuringStrategy.Always:
                return false;
            case MeasuringStrategy.BeforeDragging:
                return dragging;
            default:
                return !dragging;
        }
    }
}
function useInitialValue(value, computeFn) {
    return (0, _utilities.useLazyMemo)((previousValue)=>{
        if (!value) return null;
        if (previousValue) return previousValue;
        return typeof computeFn === 'function' ? computeFn(value) : value;
    }, [
        computeFn,
        value
    ]);
}
function useInitialRect(node, measure) {
    return useInitialValue(node, measure);
}
/**
 * Returns a new MutationObserver instance.
 * If `MutationObserver` is undefined in the execution environment, returns `undefined`.
 */ function useMutationObserver(_ref) {
    let { callback, disabled } = _ref;
    const handleMutations = (0, _utilities.useEvent)(callback);
    const mutationObserver = (0, _react.useMemo)(()=>{
        if (disabled || typeof window === 'undefined' || typeof window.MutationObserver === 'undefined') return undefined;
        const { MutationObserver } = window;
        return new MutationObserver(handleMutations);
    }, [
        handleMutations,
        disabled
    ]);
    (0, _react.useEffect)(()=>{
        return ()=>mutationObserver == null ? void 0 : mutationObserver.disconnect();
    }, [
        mutationObserver
    ]);
    return mutationObserver;
}
/**
 * Returns a new ResizeObserver instance bound to the `onResize` callback.
 * If `ResizeObserver` is undefined in the execution environment, returns `undefined`.
 */ function useResizeObserver(_ref) {
    let { callback, disabled } = _ref;
    const handleResize = (0, _utilities.useEvent)(callback);
    const resizeObserver = (0, _react.useMemo)(()=>{
        if (disabled || typeof window === 'undefined' || typeof window.ResizeObserver === 'undefined') return undefined;
        const { ResizeObserver } = window;
        return new ResizeObserver(handleResize);
    }, [
        disabled
    ]);
    (0, _react.useEffect)(()=>{
        return ()=>resizeObserver == null ? void 0 : resizeObserver.disconnect();
    }, [
        resizeObserver
    ]);
    return resizeObserver;
}
function defaultMeasure(element) {
    return new Rect(getClientRect(element), element);
}
function useRect(element, measure, fallbackRect) {
    if (measure === void 0) measure = defaultMeasure;
    const [rect, setRect] = (0, _react.useState)(null);
    function measureRect() {
        setRect((currentRect)=>{
            if (!element) return null;
            if (element.isConnected === false) {
                var _ref;
                // Fall back to last rect we measured if the element is
                // no longer connected to the DOM.
                return (_ref = currentRect != null ? currentRect : fallbackRect) != null ? _ref : null;
            }
            const newRect = measure(element);
            if (JSON.stringify(currentRect) === JSON.stringify(newRect)) return currentRect;
            return newRect;
        });
    }
    const mutationObserver = useMutationObserver({
        callback (records) {
            if (!element) return;
            for (const record of records){
                const { type, target } = record;
                if (type === 'childList' && target instanceof HTMLElement && target.contains(element)) {
                    measureRect();
                    break;
                }
            }
        }
    });
    const resizeObserver = useResizeObserver({
        callback: measureRect
    });
    (0, _utilities.useIsomorphicLayoutEffect)(()=>{
        measureRect();
        if (element) {
            resizeObserver == null || resizeObserver.observe(element);
            mutationObserver == null || mutationObserver.observe(document.body, {
                childList: true,
                subtree: true
            });
        } else {
            resizeObserver == null || resizeObserver.disconnect();
            mutationObserver == null || mutationObserver.disconnect();
        }
    }, [
        element
    ]);
    return rect;
}
function useRectDelta(rect) {
    const initialRect = useInitialValue(rect);
    return getRectDelta(rect, initialRect);
}
const defaultValue$1 = [];
function useScrollableAncestors(node) {
    const previousNode = (0, _react.useRef)(node);
    const ancestors = (0, _utilities.useLazyMemo)((previousValue)=>{
        if (!node) return defaultValue$1;
        if (previousValue && previousValue !== defaultValue$1 && node && previousNode.current && node.parentNode === previousNode.current.parentNode) return previousValue;
        return getScrollableAncestors(node);
    }, [
        node
    ]);
    (0, _react.useEffect)(()=>{
        previousNode.current = node;
    }, [
        node
    ]);
    return ancestors;
}
function useScrollOffsets(elements) {
    const [scrollCoordinates, setScrollCoordinates] = (0, _react.useState)(null);
    const prevElements = (0, _react.useRef)(elements); // To-do: Throttle the handleScroll callback
    const handleScroll = (0, _react.useCallback)((event)=>{
        const scrollingElement = getScrollableElement(event.target);
        if (!scrollingElement) return;
        setScrollCoordinates((scrollCoordinates)=>{
            if (!scrollCoordinates) return null;
            scrollCoordinates.set(scrollingElement, getScrollCoordinates(scrollingElement));
            return new Map(scrollCoordinates);
        });
    }, []);
    (0, _react.useEffect)(()=>{
        const previousElements = prevElements.current;
        if (elements !== previousElements) {
            cleanup(previousElements);
            const entries = elements.map((element)=>{
                const scrollableElement = getScrollableElement(element);
                if (scrollableElement) {
                    scrollableElement.addEventListener('scroll', handleScroll, {
                        passive: true
                    });
                    return [
                        scrollableElement,
                        getScrollCoordinates(scrollableElement)
                    ];
                }
                return null;
            }).filter((entry)=>entry != null);
            setScrollCoordinates(entries.length ? new Map(entries) : null);
            prevElements.current = elements;
        }
        return ()=>{
            cleanup(elements);
            cleanup(previousElements);
        };
        function cleanup(elements) {
            elements.forEach((element)=>{
                const scrollableElement = getScrollableElement(element);
                scrollableElement == null || scrollableElement.removeEventListener('scroll', handleScroll);
            });
        }
    }, [
        handleScroll,
        elements
    ]);
    return (0, _react.useMemo)(()=>{
        if (elements.length) return scrollCoordinates ? Array.from(scrollCoordinates.values()).reduce((acc, coordinates)=>(0, _utilities.add)(acc, coordinates), defaultCoordinates) : getScrollOffsets(elements);
        return defaultCoordinates;
    }, [
        elements,
        scrollCoordinates
    ]);
}
function useScrollOffsetsDelta(scrollOffsets, dependencies) {
    if (dependencies === void 0) dependencies = [];
    const initialScrollOffsets = (0, _react.useRef)(null);
    (0, _react.useEffect)(()=>{
        initialScrollOffsets.current = null;
    }, dependencies);
    (0, _react.useEffect)(()=>{
        const hasScrollOffsets = scrollOffsets !== defaultCoordinates;
        if (hasScrollOffsets && !initialScrollOffsets.current) initialScrollOffsets.current = scrollOffsets;
        if (!hasScrollOffsets && initialScrollOffsets.current) initialScrollOffsets.current = null;
    }, [
        scrollOffsets
    ]);
    return initialScrollOffsets.current ? (0, _utilities.subtract)(scrollOffsets, initialScrollOffsets.current) : defaultCoordinates;
}
function useSensorSetup(sensors) {
    (0, _react.useEffect)(()=>{
        if (!_utilities.canUseDOM) return;
        const teardownFns = sensors.map((_ref)=>{
            let { sensor } = _ref;
            return sensor.setup == null ? void 0 : sensor.setup();
        });
        return ()=>{
            for (const teardown of teardownFns)teardown == null || teardown();
        };
    }, // eslint-disable-next-line react-hooks/exhaustive-deps
    sensors.map((_ref2)=>{
        let { sensor } = _ref2;
        return sensor;
    }));
}
function useSyntheticListeners(listeners, id) {
    return (0, _react.useMemo)(()=>{
        return listeners.reduce((acc, _ref)=>{
            let { eventName, handler } = _ref;
            acc[eventName] = (event)=>{
                handler(event, id);
            };
            return acc;
        }, {});
    }, [
        listeners,
        id
    ]);
}
function useWindowRect(element) {
    return (0, _react.useMemo)(()=>element ? getWindowClientRect(element) : null, [
        element
    ]);
}
const defaultValue$2 = [];
function useRects(elements, measure) {
    if (measure === void 0) measure = getClientRect;
    const [firstElement] = elements;
    const windowRect = useWindowRect(firstElement ? (0, _utilities.getWindow)(firstElement) : null);
    const [rects, setRects] = (0, _react.useState)(defaultValue$2);
    function measureRects() {
        setRects(()=>{
            if (!elements.length) return defaultValue$2;
            return elements.map((element)=>isDocumentScrollingElement(element) ? windowRect : new Rect(measure(element), element));
        });
    }
    const resizeObserver = useResizeObserver({
        callback: measureRects
    });
    (0, _utilities.useIsomorphicLayoutEffect)(()=>{
        resizeObserver == null || resizeObserver.disconnect();
        measureRects();
        elements.forEach((element)=>resizeObserver == null ? void 0 : resizeObserver.observe(element));
    }, [
        elements
    ]);
    return rects;
}
function getMeasurableNode(node) {
    if (!node) return null;
    if (node.children.length > 1) return node;
    const firstChild = node.children[0];
    return (0, _utilities.isHTMLElement)(firstChild) ? firstChild : node;
}
function useDragOverlayMeasuring(_ref) {
    let { measure } = _ref;
    const [rect, setRect] = (0, _react.useState)(null);
    const handleResize = (0, _react.useCallback)((entries)=>{
        for (const { target } of entries)if ((0, _utilities.isHTMLElement)(target)) {
            setRect((rect)=>{
                const newRect = measure(target);
                return rect ? {
                    ...rect,
                    width: newRect.width,
                    height: newRect.height
                } : newRect;
            });
            break;
        }
    }, [
        measure
    ]);
    const resizeObserver = useResizeObserver({
        callback: handleResize
    });
    const handleNodeChange = (0, _react.useCallback)((element)=>{
        const node = getMeasurableNode(element);
        resizeObserver == null || resizeObserver.disconnect();
        if (node) resizeObserver == null || resizeObserver.observe(node);
        setRect(node ? measure(node) : null);
    }, [
        measure,
        resizeObserver
    ]);
    const [nodeRef, setRef] = (0, _utilities.useNodeRef)(handleNodeChange);
    return (0, _react.useMemo)(()=>({
            nodeRef,
            rect,
            setRef
        }), [
        rect,
        nodeRef,
        setRef
    ]);
}
const defaultSensors = [
    {
        sensor: PointerSensor,
        options: {}
    },
    {
        sensor: KeyboardSensor,
        options: {}
    }
];
const defaultData = {
    current: {}
};
const defaultMeasuringConfiguration = {
    draggable: {
        measure: getTransformAgnosticClientRect
    },
    droppable: {
        measure: getTransformAgnosticClientRect,
        strategy: MeasuringStrategy.WhileDragging,
        frequency: MeasuringFrequency.Optimized
    },
    dragOverlay: {
        measure: getClientRect
    }
};
class DroppableContainersMap extends Map {
    get(id) {
        var _super$get;
        return id != null ? (_super$get = super.get(id)) != null ? _super$get : undefined : undefined;
    }
    toArray() {
        return Array.from(this.values());
    }
    getEnabled() {
        return this.toArray().filter((_ref)=>{
            let { disabled } = _ref;
            return !disabled;
        });
    }
    getNodeFor(id) {
        var _this$get$node$curren, _this$get;
        return (_this$get$node$curren = (_this$get = this.get(id)) == null ? void 0 : _this$get.node.current) != null ? _this$get$node$curren : undefined;
    }
}
const defaultPublicContext = {
    activatorEvent: null,
    active: null,
    activeNode: null,
    activeNodeRect: null,
    collisions: null,
    containerNodeRect: null,
    draggableNodes: /*#__PURE__*/ new Map(),
    droppableRects: /*#__PURE__*/ new Map(),
    droppableContainers: /*#__PURE__*/ new DroppableContainersMap(),
    over: null,
    dragOverlay: {
        nodeRef: {
            current: null
        },
        rect: null,
        setRef: noop
    },
    scrollableAncestors: [],
    scrollableAncestorRects: [],
    measuringConfiguration: defaultMeasuringConfiguration,
    measureDroppableContainers: noop,
    windowRect: null,
    measuringScheduled: false
};
const defaultInternalContext = {
    activatorEvent: null,
    activators: [],
    active: null,
    activeNodeRect: null,
    ariaDescribedById: {
        draggable: ''
    },
    dispatch: noop,
    draggableNodes: /*#__PURE__*/ new Map(),
    over: null,
    measureDroppableContainers: noop
};
const InternalContext = /*#__PURE__*/ (0, _react.createContext)(defaultInternalContext);
const PublicContext = /*#__PURE__*/ (0, _react.createContext)(defaultPublicContext);
function getInitialState() {
    return {
        draggable: {
            active: null,
            initialCoordinates: {
                x: 0,
                y: 0
            },
            nodes: new Map(),
            translate: {
                x: 0,
                y: 0
            }
        },
        droppable: {
            containers: new DroppableContainersMap()
        }
    };
}
function reducer(state, action) {
    switch(action.type){
        case Action.DragStart:
            return {
                ...state,
                draggable: {
                    ...state.draggable,
                    initialCoordinates: action.initialCoordinates,
                    active: action.active
                }
            };
        case Action.DragMove:
            if (state.draggable.active == null) return state;
            return {
                ...state,
                draggable: {
                    ...state.draggable,
                    translate: {
                        x: action.coordinates.x - state.draggable.initialCoordinates.x,
                        y: action.coordinates.y - state.draggable.initialCoordinates.y
                    }
                }
            };
        case Action.DragEnd:
        case Action.DragCancel:
            return {
                ...state,
                draggable: {
                    ...state.draggable,
                    active: null,
                    initialCoordinates: {
                        x: 0,
                        y: 0
                    },
                    translate: {
                        x: 0,
                        y: 0
                    }
                }
            };
        case Action.RegisterDroppable:
            {
                const { element } = action;
                const { id } = element;
                const containers = new DroppableContainersMap(state.droppable.containers);
                containers.set(id, element);
                return {
                    ...state,
                    droppable: {
                        ...state.droppable,
                        containers
                    }
                };
            }
        case Action.SetDroppableDisabled:
            {
                const { id, key, disabled } = action;
                const element = state.droppable.containers.get(id);
                if (!element || key !== element.key) return state;
                const containers = new DroppableContainersMap(state.droppable.containers);
                containers.set(id, {
                    ...element,
                    disabled
                });
                return {
                    ...state,
                    droppable: {
                        ...state.droppable,
                        containers
                    }
                };
            }
        case Action.UnregisterDroppable:
            {
                const { id, key } = action;
                const element = state.droppable.containers.get(id);
                if (!element || key !== element.key) return state;
                const containers = new DroppableContainersMap(state.droppable.containers);
                containers.delete(id);
                return {
                    ...state,
                    droppable: {
                        ...state.droppable,
                        containers
                    }
                };
            }
        default:
            return state;
    }
}
function RestoreFocus(_ref) {
    let { disabled } = _ref;
    const { active, activatorEvent, draggableNodes } = (0, _react.useContext)(InternalContext);
    const previousActivatorEvent = (0, _utilities.usePrevious)(activatorEvent);
    const previousActiveId = (0, _utilities.usePrevious)(active == null ? void 0 : active.id); // Restore keyboard focus on the activator node
    (0, _react.useEffect)(()=>{
        if (disabled) return;
        if (!activatorEvent && previousActivatorEvent && previousActiveId != null) {
            if (!(0, _utilities.isKeyboardEvent)(previousActivatorEvent)) return;
            if (document.activeElement === previousActivatorEvent.target) // No need to restore focus
            return;
            const draggableNode = draggableNodes.get(previousActiveId);
            if (!draggableNode) return;
            const { activatorNode, node } = draggableNode;
            if (!activatorNode.current && !node.current) return;
            requestAnimationFrame(()=>{
                for (const element of [
                    activatorNode.current,
                    node.current
                ]){
                    if (!element) continue;
                    const focusableNode = (0, _utilities.findFirstFocusableNode)(element);
                    if (focusableNode) {
                        focusableNode.focus();
                        break;
                    }
                }
            });
        }
    }, [
        activatorEvent,
        disabled,
        draggableNodes,
        previousActiveId,
        previousActivatorEvent
    ]);
    return null;
}
function applyModifiers(modifiers, _ref) {
    let { transform, ...args } = _ref;
    return modifiers != null && modifiers.length ? modifiers.reduce((accumulator, modifier)=>{
        return modifier({
            transform: accumulator,
            ...args
        });
    }, transform) : transform;
}
function useMeasuringConfiguration(config) {
    return (0, _react.useMemo)(()=>({
            draggable: {
                ...defaultMeasuringConfiguration.draggable,
                ...config == null ? void 0 : config.draggable
            },
            droppable: {
                ...defaultMeasuringConfiguration.droppable,
                ...config == null ? void 0 : config.droppable
            },
            dragOverlay: {
                ...defaultMeasuringConfiguration.dragOverlay,
                ...config == null ? void 0 : config.dragOverlay
            }
        }), [
        config == null ? void 0 : config.draggable,
        config == null ? void 0 : config.droppable,
        config == null ? void 0 : config.dragOverlay
    ]);
}
function useLayoutShiftScrollCompensation(_ref) {
    let { activeNode, measure, initialRect, config = true } = _ref;
    const initialized = (0, _react.useRef)(false);
    const { x, y } = typeof config === 'boolean' ? {
        x: config,
        y: config
    } : config;
    (0, _utilities.useIsomorphicLayoutEffect)(()=>{
        const disabled = !x && !y;
        if (disabled || !activeNode) {
            initialized.current = false;
            return;
        }
        if (initialized.current || !initialRect) // Return early if layout shift scroll compensation was already attempted
        // or if there is no initialRect to compare to.
        return;
         // Get the most up to date node ref for the active draggable
        const node = activeNode == null ? void 0 : activeNode.node.current;
        if (!node || node.isConnected === false) // Return early if there is no attached node ref or if the node is
        // disconnected from the document.
        return;
        const rect = measure(node);
        const rectDelta = getRectDelta(rect, initialRect);
        if (!x) rectDelta.x = 0;
        if (!y) rectDelta.y = 0;
         // Only perform layout shift scroll compensation once
        initialized.current = true;
        if (Math.abs(rectDelta.x) > 0 || Math.abs(rectDelta.y) > 0) {
            const firstScrollableAncestor = getFirstScrollableAncestor(node);
            if (firstScrollableAncestor) firstScrollableAncestor.scrollBy({
                top: rectDelta.y,
                left: rectDelta.x
            });
        }
    }, [
        activeNode,
        x,
        y,
        initialRect,
        measure
    ]);
}
const ActiveDraggableContext = /*#__PURE__*/ (0, _react.createContext)({
    ...defaultCoordinates,
    scaleX: 1,
    scaleY: 1
});
var Status;
(function(Status) {
    Status[Status["Uninitialized"] = 0] = "Uninitialized";
    Status[Status["Initializing"] = 1] = "Initializing";
    Status[Status["Initialized"] = 2] = "Initialized";
})(Status || (Status = {}));
const DndContext = /*#__PURE__*/ (0, _react.memo)(function DndContext(_ref) {
    var _sensorContext$curren, _dragOverlay$nodeRef$, _dragOverlay$rect, _over$rect;
    let { id, accessibility, autoScroll = true, children, sensors = defaultSensors, collisionDetection = rectIntersection, measuring, modifiers, ...props } = _ref;
    const store = (0, _react.useReducer)(reducer, undefined, getInitialState);
    const [state, dispatch] = store;
    const [dispatchMonitorEvent, registerMonitorListener] = useDndMonitorProvider();
    const [status, setStatus] = (0, _react.useState)(Status.Uninitialized);
    const isInitialized = status === Status.Initialized;
    const { draggable: { active: activeId, nodes: draggableNodes, translate }, droppable: { containers: droppableContainers } } = state;
    const node = activeId != null ? draggableNodes.get(activeId) : null;
    const activeRects = (0, _react.useRef)({
        initial: null,
        translated: null
    });
    const active = (0, _react.useMemo)(()=>{
        var _node$data;
        return activeId != null ? {
            id: activeId,
            // It's possible for the active node to unmount while dragging
            data: (_node$data = node == null ? void 0 : node.data) != null ? _node$data : defaultData,
            rect: activeRects
        } : null;
    }, [
        activeId,
        node
    ]);
    const activeRef = (0, _react.useRef)(null);
    const [activeSensor, setActiveSensor] = (0, _react.useState)(null);
    const [activatorEvent, setActivatorEvent] = (0, _react.useState)(null);
    const latestProps = (0, _utilities.useLatestValue)(props, Object.values(props));
    const draggableDescribedById = (0, _utilities.useUniqueId)("DndDescribedBy", id);
    const enabledDroppableContainers = (0, _react.useMemo)(()=>droppableContainers.getEnabled(), [
        droppableContainers
    ]);
    const measuringConfiguration = useMeasuringConfiguration(measuring);
    const { droppableRects, measureDroppableContainers, measuringScheduled } = useDroppableMeasuring(enabledDroppableContainers, {
        dragging: isInitialized,
        dependencies: [
            translate.x,
            translate.y
        ],
        config: measuringConfiguration.droppable
    });
    const activeNode = useCachedNode(draggableNodes, activeId);
    const activationCoordinates = (0, _react.useMemo)(()=>activatorEvent ? (0, _utilities.getEventCoordinates)(activatorEvent) : null, [
        activatorEvent
    ]);
    const autoScrollOptions = getAutoScrollerOptions();
    const initialActiveNodeRect = useInitialRect(activeNode, measuringConfiguration.draggable.measure);
    useLayoutShiftScrollCompensation({
        activeNode: activeId != null ? draggableNodes.get(activeId) : null,
        config: autoScrollOptions.layoutShiftCompensation,
        initialRect: initialActiveNodeRect,
        measure: measuringConfiguration.draggable.measure
    });
    const activeNodeRect = useRect(activeNode, measuringConfiguration.draggable.measure, initialActiveNodeRect);
    const containerNodeRect = useRect(activeNode ? activeNode.parentElement : null);
    const sensorContext = (0, _react.useRef)({
        activatorEvent: null,
        active: null,
        activeNode,
        collisionRect: null,
        collisions: null,
        droppableRects,
        draggableNodes,
        draggingNode: null,
        draggingNodeRect: null,
        droppableContainers,
        over: null,
        scrollableAncestors: [],
        scrollAdjustedTranslate: null
    });
    const overNode = droppableContainers.getNodeFor((_sensorContext$curren = sensorContext.current.over) == null ? void 0 : _sensorContext$curren.id);
    const dragOverlay = useDragOverlayMeasuring({
        measure: measuringConfiguration.dragOverlay.measure
    }); // Use the rect of the drag overlay if it is mounted
    const draggingNode = (_dragOverlay$nodeRef$ = dragOverlay.nodeRef.current) != null ? _dragOverlay$nodeRef$ : activeNode;
    const draggingNodeRect = isInitialized ? (_dragOverlay$rect = dragOverlay.rect) != null ? _dragOverlay$rect : activeNodeRect : null;
    const usesDragOverlay = Boolean(dragOverlay.nodeRef.current && dragOverlay.rect); // The delta between the previous and new position of the draggable node
    // is only relevant when there is no drag overlay
    const nodeRectDelta = useRectDelta(usesDragOverlay ? null : activeNodeRect); // Get the window rect of the dragging node
    const windowRect = useWindowRect(draggingNode ? (0, _utilities.getWindow)(draggingNode) : null); // Get scrollable ancestors of the dragging node
    const scrollableAncestors = useScrollableAncestors(isInitialized ? overNode != null ? overNode : activeNode : null);
    const scrollableAncestorRects = useRects(scrollableAncestors); // Apply modifiers
    const modifiedTranslate = applyModifiers(modifiers, {
        transform: {
            x: translate.x - nodeRectDelta.x,
            y: translate.y - nodeRectDelta.y,
            scaleX: 1,
            scaleY: 1
        },
        activatorEvent,
        active,
        activeNodeRect,
        containerNodeRect,
        draggingNodeRect,
        over: sensorContext.current.over,
        overlayNodeRect: dragOverlay.rect,
        scrollableAncestors,
        scrollableAncestorRects,
        windowRect
    });
    const pointerCoordinates = activationCoordinates ? (0, _utilities.add)(activationCoordinates, translate) : null;
    const scrollOffsets = useScrollOffsets(scrollableAncestors); // Represents the scroll delta since dragging was initiated
    const scrollAdjustment = useScrollOffsetsDelta(scrollOffsets); // Represents the scroll delta since the last time the active node rect was measured
    const activeNodeScrollDelta = useScrollOffsetsDelta(scrollOffsets, [
        activeNodeRect
    ]);
    const scrollAdjustedTranslate = (0, _utilities.add)(modifiedTranslate, scrollAdjustment);
    const collisionRect = draggingNodeRect ? getAdjustedRect(draggingNodeRect, modifiedTranslate) : null;
    const collisions = active && collisionRect ? collisionDetection({
        active,
        collisionRect,
        droppableRects,
        droppableContainers: enabledDroppableContainers,
        pointerCoordinates
    }) : null;
    const overId = getFirstCollision(collisions, 'id');
    const [over, setOver] = (0, _react.useState)(null); // When there is no drag overlay used, we need to account for the
    // window scroll delta
    const appliedTranslate = usesDragOverlay ? modifiedTranslate : (0, _utilities.add)(modifiedTranslate, activeNodeScrollDelta);
    const transform = adjustScale(appliedTranslate, (_over$rect = over == null ? void 0 : over.rect) != null ? _over$rect : null, activeNodeRect);
    const activeSensorRef = (0, _react.useRef)(null);
    const instantiateSensor = (0, _react.useCallback)((event, _ref2)=>{
        let { sensor: Sensor, options } = _ref2;
        if (activeRef.current == null) return;
        const activeNode = draggableNodes.get(activeRef.current);
        if (!activeNode) return;
        const activatorEvent = event.nativeEvent;
        const sensorInstance = new Sensor({
            active: activeRef.current,
            activeNode,
            event: activatorEvent,
            options,
            // Sensors need to be instantiated with refs for arguments that change over time
            // otherwise they are frozen in time with the stale arguments
            context: sensorContext,
            onAbort (id) {
                const draggableNode = draggableNodes.get(id);
                if (!draggableNode) return;
                const { onDragAbort } = latestProps.current;
                const event = {
                    id
                };
                onDragAbort == null || onDragAbort(event);
                dispatchMonitorEvent({
                    type: 'onDragAbort',
                    event
                });
            },
            onPending (id, constraint, initialCoordinates, offset) {
                const draggableNode = draggableNodes.get(id);
                if (!draggableNode) return;
                const { onDragPending } = latestProps.current;
                const event = {
                    id,
                    constraint,
                    initialCoordinates,
                    offset
                };
                onDragPending == null || onDragPending(event);
                dispatchMonitorEvent({
                    type: 'onDragPending',
                    event
                });
            },
            onStart (initialCoordinates) {
                const id = activeRef.current;
                if (id == null) return;
                const draggableNode = draggableNodes.get(id);
                if (!draggableNode) return;
                const { onDragStart } = latestProps.current;
                const event = {
                    activatorEvent,
                    active: {
                        id,
                        data: draggableNode.data,
                        rect: activeRects
                    }
                };
                (0, _reactdom.unstable_batchedUpdates)(()=>{
                    onDragStart == null || onDragStart(event);
                    setStatus(Status.Initializing);
                    dispatch({
                        type: Action.DragStart,
                        initialCoordinates,
                        active: id
                    });
                    dispatchMonitorEvent({
                        type: 'onDragStart',
                        event
                    });
                    setActiveSensor(activeSensorRef.current);
                    setActivatorEvent(activatorEvent);
                });
            },
            onMove (coordinates) {
                dispatch({
                    type: Action.DragMove,
                    coordinates
                });
            },
            onEnd: createHandler(Action.DragEnd),
            onCancel: createHandler(Action.DragCancel)
        });
        activeSensorRef.current = sensorInstance;
        function createHandler(type) {
            return async function handler() {
                const { active, collisions, over, scrollAdjustedTranslate } = sensorContext.current;
                let event = null;
                if (active && scrollAdjustedTranslate) {
                    const { cancelDrop } = latestProps.current;
                    event = {
                        activatorEvent,
                        active: active,
                        collisions,
                        delta: scrollAdjustedTranslate,
                        over
                    };
                    if (type === Action.DragEnd && typeof cancelDrop === 'function') {
                        const shouldCancel = await Promise.resolve(cancelDrop(event));
                        if (shouldCancel) type = Action.DragCancel;
                    }
                }
                activeRef.current = null;
                (0, _reactdom.unstable_batchedUpdates)(()=>{
                    dispatch({
                        type
                    });
                    setStatus(Status.Uninitialized);
                    setOver(null);
                    setActiveSensor(null);
                    setActivatorEvent(null);
                    activeSensorRef.current = null;
                    const eventName = type === Action.DragEnd ? 'onDragEnd' : 'onDragCancel';
                    if (event) {
                        const handler = latestProps.current[eventName];
                        handler == null || handler(event);
                        dispatchMonitorEvent({
                            type: eventName,
                            event
                        });
                    }
                });
            };
        }
    }, [
        draggableNodes
    ]);
    const bindActivatorToSensorInstantiator = (0, _react.useCallback)((handler, sensor)=>{
        return (event, active)=>{
            const nativeEvent = event.nativeEvent;
            const activeDraggableNode = draggableNodes.get(active);
            if (activeRef.current !== null || // No active draggable
            !activeDraggableNode || // Event has already been captured
            nativeEvent.dndKit || nativeEvent.defaultPrevented) return;
            const activationContext = {
                active: activeDraggableNode
            };
            const shouldActivate = handler(event, sensor.options, activationContext);
            if (shouldActivate === true) {
                nativeEvent.dndKit = {
                    capturedBy: sensor.sensor
                };
                activeRef.current = active;
                instantiateSensor(event, sensor);
            }
        };
    }, [
        draggableNodes,
        instantiateSensor
    ]);
    const activators = useCombineActivators(sensors, bindActivatorToSensorInstantiator);
    useSensorSetup(sensors);
    (0, _utilities.useIsomorphicLayoutEffect)(()=>{
        if (activeNodeRect && status === Status.Initializing) setStatus(Status.Initialized);
    }, [
        activeNodeRect,
        status
    ]);
    (0, _react.useEffect)(()=>{
        const { onDragMove } = latestProps.current;
        const { active, activatorEvent, collisions, over } = sensorContext.current;
        if (!active || !activatorEvent) return;
        const event = {
            active,
            activatorEvent,
            collisions,
            delta: {
                x: scrollAdjustedTranslate.x,
                y: scrollAdjustedTranslate.y
            },
            over
        };
        (0, _reactdom.unstable_batchedUpdates)(()=>{
            onDragMove == null || onDragMove(event);
            dispatchMonitorEvent({
                type: 'onDragMove',
                event
            });
        });
    }, [
        scrollAdjustedTranslate.x,
        scrollAdjustedTranslate.y
    ]);
    (0, _react.useEffect)(()=>{
        const { active, activatorEvent, collisions, droppableContainers, scrollAdjustedTranslate } = sensorContext.current;
        if (!active || activeRef.current == null || !activatorEvent || !scrollAdjustedTranslate) return;
        const { onDragOver } = latestProps.current;
        const overContainer = droppableContainers.get(overId);
        const over = overContainer && overContainer.rect.current ? {
            id: overContainer.id,
            rect: overContainer.rect.current,
            data: overContainer.data,
            disabled: overContainer.disabled
        } : null;
        const event = {
            active,
            activatorEvent,
            collisions,
            delta: {
                x: scrollAdjustedTranslate.x,
                y: scrollAdjustedTranslate.y
            },
            over
        };
        (0, _reactdom.unstable_batchedUpdates)(()=>{
            setOver(over);
            onDragOver == null || onDragOver(event);
            dispatchMonitorEvent({
                type: 'onDragOver',
                event
            });
        });
    }, [
        overId
    ]);
    (0, _utilities.useIsomorphicLayoutEffect)(()=>{
        sensorContext.current = {
            activatorEvent,
            active,
            activeNode,
            collisionRect,
            collisions,
            droppableRects,
            draggableNodes,
            draggingNode,
            draggingNodeRect,
            droppableContainers,
            over,
            scrollableAncestors,
            scrollAdjustedTranslate
        };
        activeRects.current = {
            initial: draggingNodeRect,
            translated: collisionRect
        };
    }, [
        active,
        activeNode,
        collisions,
        collisionRect,
        draggableNodes,
        draggingNode,
        draggingNodeRect,
        droppableRects,
        droppableContainers,
        over,
        scrollableAncestors,
        scrollAdjustedTranslate
    ]);
    useAutoScroller({
        ...autoScrollOptions,
        delta: translate,
        draggingRect: collisionRect,
        pointerCoordinates,
        scrollableAncestors,
        scrollableAncestorRects
    });
    const publicContext = (0, _react.useMemo)(()=>{
        const context = {
            active,
            activeNode,
            activeNodeRect,
            activatorEvent,
            collisions,
            containerNodeRect,
            dragOverlay,
            draggableNodes,
            droppableContainers,
            droppableRects,
            over,
            measureDroppableContainers,
            scrollableAncestors,
            scrollableAncestorRects,
            measuringConfiguration,
            measuringScheduled,
            windowRect
        };
        return context;
    }, [
        active,
        activeNode,
        activeNodeRect,
        activatorEvent,
        collisions,
        containerNodeRect,
        dragOverlay,
        draggableNodes,
        droppableContainers,
        droppableRects,
        over,
        measureDroppableContainers,
        scrollableAncestors,
        scrollableAncestorRects,
        measuringConfiguration,
        measuringScheduled,
        windowRect
    ]);
    const internalContext = (0, _react.useMemo)(()=>{
        const context = {
            activatorEvent,
            activators,
            active,
            activeNodeRect,
            ariaDescribedById: {
                draggable: draggableDescribedById
            },
            dispatch,
            draggableNodes,
            over,
            measureDroppableContainers
        };
        return context;
    }, [
        activatorEvent,
        activators,
        active,
        activeNodeRect,
        dispatch,
        draggableDescribedById,
        draggableNodes,
        over,
        measureDroppableContainers
    ]);
    return /*#__PURE__*/ _react.default.createElement(DndMonitorContext.Provider, {
        value: registerMonitorListener
    }, /*#__PURE__*/ _react.default.createElement(InternalContext.Provider, {
        value: internalContext
    }, /*#__PURE__*/ _react.default.createElement(PublicContext.Provider, {
        value: publicContext
    }, /*#__PURE__*/ _react.default.createElement(ActiveDraggableContext.Provider, {
        value: transform
    }, children)), /*#__PURE__*/ _react.default.createElement(RestoreFocus, {
        disabled: (accessibility == null ? void 0 : accessibility.restoreFocus) === false
    })), /*#__PURE__*/ _react.default.createElement(Accessibility, {
        ...accessibility,
        hiddenTextDescribedById: draggableDescribedById
    }));
    function getAutoScrollerOptions() {
        const activeSensorDisablesAutoscroll = (activeSensor == null ? void 0 : activeSensor.autoScrollEnabled) === false;
        const autoScrollGloballyDisabled = typeof autoScroll === 'object' ? autoScroll.enabled === false : autoScroll === false;
        const enabled = isInitialized && !activeSensorDisablesAutoscroll && !autoScrollGloballyDisabled;
        if (typeof autoScroll === 'object') return {
            ...autoScroll,
            enabled
        };
        return {
            enabled
        };
    }
});
const NullContext = /*#__PURE__*/ (0, _react.createContext)(null);
const defaultRole = 'button';
const ID_PREFIX = 'Draggable';
function useDraggable(_ref) {
    let { id, data, disabled = false, attributes } = _ref;
    const key = (0, _utilities.useUniqueId)(ID_PREFIX);
    const { activators, activatorEvent, active, activeNodeRect, ariaDescribedById, draggableNodes, over } = (0, _react.useContext)(InternalContext);
    const { role = defaultRole, roleDescription = 'draggable', tabIndex = 0 } = attributes != null ? attributes : {};
    const isDragging = (active == null ? void 0 : active.id) === id;
    const transform = (0, _react.useContext)(isDragging ? ActiveDraggableContext : NullContext);
    const [node, setNodeRef] = (0, _utilities.useNodeRef)();
    const [activatorNode, setActivatorNodeRef] = (0, _utilities.useNodeRef)();
    const listeners = useSyntheticListeners(activators, id);
    const dataRef = (0, _utilities.useLatestValue)(data);
    (0, _utilities.useIsomorphicLayoutEffect)(()=>{
        draggableNodes.set(id, {
            id,
            key,
            node,
            activatorNode,
            data: dataRef
        });
        return ()=>{
            const node = draggableNodes.get(id);
            if (node && node.key === key) draggableNodes.delete(id);
        };
    }, [
        draggableNodes,
        id
    ]);
    const memoizedAttributes = (0, _react.useMemo)(()=>({
            role,
            tabIndex,
            'aria-disabled': disabled,
            'aria-pressed': isDragging && role === defaultRole ? true : undefined,
            'aria-roledescription': roleDescription,
            'aria-describedby': ariaDescribedById.draggable
        }), [
        disabled,
        role,
        tabIndex,
        isDragging,
        roleDescription,
        ariaDescribedById.draggable
    ]);
    return {
        active,
        activatorEvent,
        activeNodeRect,
        attributes: memoizedAttributes,
        isDragging,
        listeners: disabled ? undefined : listeners,
        node,
        over,
        setNodeRef,
        setActivatorNodeRef,
        transform
    };
}
function useDndContext() {
    return (0, _react.useContext)(PublicContext);
}
const ID_PREFIX$1 = 'Droppable';
const defaultResizeObserverConfig = {
    timeout: 25
};
function useDroppable(_ref) {
    let { data, disabled = false, id, resizeObserverConfig } = _ref;
    const key = (0, _utilities.useUniqueId)(ID_PREFIX$1);
    const { active, dispatch, over, measureDroppableContainers } = (0, _react.useContext)(InternalContext);
    const previous = (0, _react.useRef)({
        disabled
    });
    const resizeObserverConnected = (0, _react.useRef)(false);
    const rect = (0, _react.useRef)(null);
    const callbackId = (0, _react.useRef)(null);
    const { disabled: resizeObserverDisabled, updateMeasurementsFor, timeout: resizeObserverTimeout } = {
        ...defaultResizeObserverConfig,
        ...resizeObserverConfig
    };
    const ids = (0, _utilities.useLatestValue)(updateMeasurementsFor != null ? updateMeasurementsFor : id);
    const handleResize = (0, _react.useCallback)(()=>{
        if (!resizeObserverConnected.current) {
            // ResizeObserver invokes the `handleResize` callback as soon as `observe` is called,
            // assuming the element is rendered and displayed.
            resizeObserverConnected.current = true;
            return;
        }
        if (callbackId.current != null) clearTimeout(callbackId.current);
        callbackId.current = setTimeout(()=>{
            measureDroppableContainers(Array.isArray(ids.current) ? ids.current : [
                ids.current
            ]);
            callbackId.current = null;
        }, resizeObserverTimeout);
    }, [
        resizeObserverTimeout
    ]);
    const resizeObserver = useResizeObserver({
        callback: handleResize,
        disabled: resizeObserverDisabled || !active
    });
    const handleNodeChange = (0, _react.useCallback)((newElement, previousElement)=>{
        if (!resizeObserver) return;
        if (previousElement) {
            resizeObserver.unobserve(previousElement);
            resizeObserverConnected.current = false;
        }
        if (newElement) resizeObserver.observe(newElement);
    }, [
        resizeObserver
    ]);
    const [nodeRef, setNodeRef] = (0, _utilities.useNodeRef)(handleNodeChange);
    const dataRef = (0, _utilities.useLatestValue)(data);
    (0, _react.useEffect)(()=>{
        if (!resizeObserver || !nodeRef.current) return;
        resizeObserver.disconnect();
        resizeObserverConnected.current = false;
        resizeObserver.observe(nodeRef.current);
    }, [
        nodeRef,
        resizeObserver
    ]);
    (0, _react.useEffect)(()=>{
        dispatch({
            type: Action.RegisterDroppable,
            element: {
                id,
                key,
                disabled,
                node: nodeRef,
                rect,
                data: dataRef
            }
        });
        return ()=>dispatch({
                type: Action.UnregisterDroppable,
                key,
                id
            });
    }, [
        id
    ]);
    (0, _react.useEffect)(()=>{
        if (disabled !== previous.current.disabled) {
            dispatch({
                type: Action.SetDroppableDisabled,
                id,
                key,
                disabled
            });
            previous.current.disabled = disabled;
        }
    }, [
        id,
        key,
        disabled,
        dispatch
    ]);
    return {
        active,
        rect,
        isOver: (over == null ? void 0 : over.id) === id,
        node: nodeRef,
        over,
        setNodeRef
    };
}
function AnimationManager(_ref) {
    let { animation, children } = _ref;
    const [clonedChildren, setClonedChildren] = (0, _react.useState)(null);
    const [element, setElement] = (0, _react.useState)(null);
    const previousChildren = (0, _utilities.usePrevious)(children);
    if (!children && !clonedChildren && previousChildren) setClonedChildren(previousChildren);
    (0, _utilities.useIsomorphicLayoutEffect)(()=>{
        if (!element) return;
        const key = clonedChildren == null ? void 0 : clonedChildren.key;
        const id = clonedChildren == null ? void 0 : clonedChildren.props.id;
        if (key == null || id == null) {
            setClonedChildren(null);
            return;
        }
        Promise.resolve(animation(id, element)).then(()=>{
            setClonedChildren(null);
        });
    }, [
        animation,
        clonedChildren,
        element
    ]);
    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, children, clonedChildren ? /*#__PURE__*/ (0, _react.cloneElement)(clonedChildren, {
        ref: setElement
    }) : null);
}
const defaultTransform = {
    x: 0,
    y: 0,
    scaleX: 1,
    scaleY: 1
};
function NullifiedContextProvider(_ref) {
    let { children } = _ref;
    return /*#__PURE__*/ _react.default.createElement(InternalContext.Provider, {
        value: defaultInternalContext
    }, /*#__PURE__*/ _react.default.createElement(ActiveDraggableContext.Provider, {
        value: defaultTransform
    }, children));
}
const baseStyles = {
    position: 'fixed',
    touchAction: 'none'
};
const defaultTransition = (activatorEvent)=>{
    const isKeyboardActivator = (0, _utilities.isKeyboardEvent)(activatorEvent);
    return isKeyboardActivator ? 'transform 250ms ease' : undefined;
};
const PositionedOverlay = /*#__PURE__*/ (0, _react.forwardRef)((_ref, ref)=>{
    let { as, activatorEvent, adjustScale, children, className, rect, style, transform, transition = defaultTransition } = _ref;
    if (!rect) return null;
    const scaleAdjustedTransform = adjustScale ? transform : {
        ...transform,
        scaleX: 1,
        scaleY: 1
    };
    const styles = {
        ...baseStyles,
        width: rect.width,
        height: rect.height,
        top: rect.top,
        left: rect.left,
        transform: _utilities.CSS.Transform.toString(scaleAdjustedTransform),
        transformOrigin: adjustScale && activatorEvent ? getRelativeTransformOrigin(activatorEvent, rect) : undefined,
        transition: typeof transition === 'function' ? transition(activatorEvent) : transition,
        ...style
    };
    return /*#__PURE__*/ _react.default.createElement(as, {
        className,
        style: styles,
        ref
    }, children);
});
const defaultDropAnimationSideEffects = (options)=>(_ref)=>{
        let { active, dragOverlay } = _ref;
        const originalStyles = {};
        const { styles, className } = options;
        if (styles != null && styles.active) for (const [key, value] of Object.entries(styles.active)){
            if (value === undefined) continue;
            originalStyles[key] = active.node.style.getPropertyValue(key);
            active.node.style.setProperty(key, value);
        }
        if (styles != null && styles.dragOverlay) for (const [key, value] of Object.entries(styles.dragOverlay)){
            if (value === undefined) continue;
            dragOverlay.node.style.setProperty(key, value);
        }
        if (className != null && className.active) active.node.classList.add(className.active);
        if (className != null && className.dragOverlay) dragOverlay.node.classList.add(className.dragOverlay);
        return function cleanup() {
            for (const [key, value] of Object.entries(originalStyles))active.node.style.setProperty(key, value);
            if (className != null && className.active) active.node.classList.remove(className.active);
        };
    };
const defaultKeyframeResolver = (_ref2)=>{
    let { transform: { initial, final } } = _ref2;
    return [
        {
            transform: _utilities.CSS.Transform.toString(initial)
        },
        {
            transform: _utilities.CSS.Transform.toString(final)
        }
    ];
};
const defaultDropAnimationConfiguration = {
    duration: 250,
    easing: 'ease',
    keyframes: defaultKeyframeResolver,
    sideEffects: /*#__PURE__*/ defaultDropAnimationSideEffects({
        styles: {
            active: {
                opacity: '0'
            }
        }
    })
};
function useDropAnimation(_ref3) {
    let { config, draggableNodes, droppableContainers, measuringConfiguration } = _ref3;
    return (0, _utilities.useEvent)((id, node)=>{
        if (config === null) return;
        const activeDraggable = draggableNodes.get(id);
        if (!activeDraggable) return;
        const activeNode = activeDraggable.node.current;
        if (!activeNode) return;
        const measurableNode = getMeasurableNode(node);
        if (!measurableNode) return;
        const { transform } = (0, _utilities.getWindow)(node).getComputedStyle(node);
        const parsedTransform = parseTransform(transform);
        if (!parsedTransform) return;
        const animation = typeof config === 'function' ? config : createDefaultDropAnimation(config);
        scrollIntoViewIfNeeded(activeNode, measuringConfiguration.draggable.measure);
        return animation({
            active: {
                id,
                data: activeDraggable.data,
                node: activeNode,
                rect: measuringConfiguration.draggable.measure(activeNode)
            },
            draggableNodes,
            dragOverlay: {
                node,
                rect: measuringConfiguration.dragOverlay.measure(measurableNode)
            },
            droppableContainers,
            measuringConfiguration,
            transform: parsedTransform
        });
    });
}
function createDefaultDropAnimation(options) {
    const { duration, easing, sideEffects, keyframes } = {
        ...defaultDropAnimationConfiguration,
        ...options
    };
    return (_ref4)=>{
        let { active, dragOverlay, transform, ...rest } = _ref4;
        if (!duration) // Do not animate if animation duration is zero.
        return;
        const delta = {
            x: dragOverlay.rect.left - active.rect.left,
            y: dragOverlay.rect.top - active.rect.top
        };
        const scale = {
            scaleX: transform.scaleX !== 1 ? active.rect.width * transform.scaleX / dragOverlay.rect.width : 1,
            scaleY: transform.scaleY !== 1 ? active.rect.height * transform.scaleY / dragOverlay.rect.height : 1
        };
        const finalTransform = {
            x: transform.x - delta.x,
            y: transform.y - delta.y,
            ...scale
        };
        const animationKeyframes = keyframes({
            ...rest,
            active,
            dragOverlay,
            transform: {
                initial: transform,
                final: finalTransform
            }
        });
        const [firstKeyframe] = animationKeyframes;
        const lastKeyframe = animationKeyframes[animationKeyframes.length - 1];
        if (JSON.stringify(firstKeyframe) === JSON.stringify(lastKeyframe)) // The start and end keyframes are the same, infer that there is no animation needed.
        return;
        const cleanup = sideEffects == null ? void 0 : sideEffects({
            active,
            dragOverlay,
            ...rest
        });
        const animation = dragOverlay.node.animate(animationKeyframes, {
            duration,
            easing,
            fill: 'forwards'
        });
        return new Promise((resolve)=>{
            animation.onfinish = ()=>{
                cleanup == null || cleanup();
                resolve();
            };
        });
    };
}
let key = 0;
function useKey(id) {
    return (0, _react.useMemo)(()=>{
        if (id == null) return;
        key++;
        return key;
    }, [
        id
    ]);
}
const DragOverlay = /*#__PURE__*/ _react.default.memo((_ref)=>{
    let { adjustScale = false, children, dropAnimation: dropAnimationConfig, style, transition, modifiers, wrapperElement = 'div', className, zIndex = 999 } = _ref;
    const { activatorEvent, active, activeNodeRect, containerNodeRect, draggableNodes, droppableContainers, dragOverlay, over, measuringConfiguration, scrollableAncestors, scrollableAncestorRects, windowRect } = useDndContext();
    const transform = (0, _react.useContext)(ActiveDraggableContext);
    const key = useKey(active == null ? void 0 : active.id);
    const modifiedTransform = applyModifiers(modifiers, {
        activatorEvent,
        active,
        activeNodeRect,
        containerNodeRect,
        draggingNodeRect: dragOverlay.rect,
        over,
        overlayNodeRect: dragOverlay.rect,
        scrollableAncestors,
        scrollableAncestorRects,
        transform,
        windowRect
    });
    const initialRect = useInitialValue(activeNodeRect);
    const dropAnimation = useDropAnimation({
        config: dropAnimationConfig,
        draggableNodes,
        droppableContainers,
        measuringConfiguration
    }); // We need to wait for the active node to be measured before connecting the drag overlay ref
    // otherwise collisions can be computed against a mispositioned drag overlay
    const ref = initialRect ? dragOverlay.setRef : undefined;
    return /*#__PURE__*/ _react.default.createElement(NullifiedContextProvider, null, /*#__PURE__*/ _react.default.createElement(AnimationManager, {
        animation: dropAnimation
    }, active && key ? /*#__PURE__*/ _react.default.createElement(PositionedOverlay, {
        key: key,
        id: active.id,
        ref: ref,
        as: wrapperElement,
        activatorEvent: activatorEvent,
        adjustScale: adjustScale,
        className: className,
        transition: transition,
        rect: initialRect,
        style: {
            zIndex,
            ...style
        },
        transform: modifiedTransform
    }, children) : null));
});
 //# sourceMappingURL=core.esm.js.map

},
"node_modules/@dnd-kit/modifiers/dist/modifiers.esm.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    createSnapModifier: function() {
        return createSnapModifier;
    },
    restrictToFirstScrollableAncestor: function() {
        return restrictToFirstScrollableAncestor;
    },
    restrictToHorizontalAxis: function() {
        return restrictToHorizontalAxis;
    },
    restrictToParentElement: function() {
        return restrictToParentElement;
    },
    restrictToVerticalAxis: function() {
        return restrictToVerticalAxis;
    },
    restrictToWindowEdges: function() {
        return restrictToWindowEdges;
    },
    snapCenterToCursor: function() {
        return snapCenterToCursor;
    }
});
var _utilities = __mako_require__("node_modules/@dnd-kit/utilities/dist/utilities.esm.js");
function createSnapModifier(gridSize) {
    return (_ref)=>{
        let { transform } = _ref;
        return {
            ...transform,
            x: Math.ceil(transform.x / gridSize) * gridSize,
            y: Math.ceil(transform.y / gridSize) * gridSize
        };
    };
}
const restrictToHorizontalAxis = (_ref)=>{
    let { transform } = _ref;
    return {
        ...transform,
        y: 0
    };
};
function restrictToBoundingRect(transform, rect, boundingRect) {
    const value = {
        ...transform
    };
    if (rect.top + transform.y <= boundingRect.top) value.y = boundingRect.top - rect.top;
    else if (rect.bottom + transform.y >= boundingRect.top + boundingRect.height) value.y = boundingRect.top + boundingRect.height - rect.bottom;
    if (rect.left + transform.x <= boundingRect.left) value.x = boundingRect.left - rect.left;
    else if (rect.right + transform.x >= boundingRect.left + boundingRect.width) value.x = boundingRect.left + boundingRect.width - rect.right;
    return value;
}
const restrictToParentElement = (_ref)=>{
    let { containerNodeRect, draggingNodeRect, transform } = _ref;
    if (!draggingNodeRect || !containerNodeRect) return transform;
    return restrictToBoundingRect(transform, draggingNodeRect, containerNodeRect);
};
const restrictToFirstScrollableAncestor = (_ref)=>{
    let { draggingNodeRect, transform, scrollableAncestorRects } = _ref;
    const firstScrollableAncestorRect = scrollableAncestorRects[0];
    if (!draggingNodeRect || !firstScrollableAncestorRect) return transform;
    return restrictToBoundingRect(transform, draggingNodeRect, firstScrollableAncestorRect);
};
const restrictToVerticalAxis = (_ref)=>{
    let { transform } = _ref;
    return {
        ...transform,
        x: 0
    };
};
const restrictToWindowEdges = (_ref)=>{
    let { transform, draggingNodeRect, windowRect } = _ref;
    if (!draggingNodeRect || !windowRect) return transform;
    return restrictToBoundingRect(transform, draggingNodeRect, windowRect);
};
const snapCenterToCursor = (_ref)=>{
    let { activatorEvent, draggingNodeRect, transform } = _ref;
    if (draggingNodeRect && activatorEvent) {
        const activatorCoordinates = (0, _utilities.getEventCoordinates)(activatorEvent);
        if (!activatorCoordinates) return transform;
        const offsetX = activatorCoordinates.x - draggingNodeRect.left;
        const offsetY = activatorCoordinates.y - draggingNodeRect.top;
        return {
            ...transform,
            x: transform.x + offsetX - draggingNodeRect.width / 2,
            y: transform.y + offsetY - draggingNodeRect.height / 2
        };
    }
    return transform;
};
 //# sourceMappingURL=modifiers.esm.js.map

},
"node_modules/@dnd-kit/sortable/dist/sortable.esm.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    SortableContext: function() {
        return SortableContext;
    },
    arrayMove: function() {
        return arrayMove;
    },
    arraySwap: function() {
        return arraySwap;
    },
    defaultAnimateLayoutChanges: function() {
        return defaultAnimateLayoutChanges;
    },
    defaultNewIndexGetter: function() {
        return defaultNewIndexGetter;
    },
    hasSortableData: function() {
        return hasSortableData;
    },
    horizontalListSortingStrategy: function() {
        return horizontalListSortingStrategy;
    },
    rectSortingStrategy: function() {
        return rectSortingStrategy;
    },
    rectSwappingStrategy: function() {
        return rectSwappingStrategy;
    },
    sortableKeyboardCoordinates: function() {
        return sortableKeyboardCoordinates;
    },
    useSortable: function() {
        return useSortable;
    },
    verticalListSortingStrategy: function() {
        return verticalListSortingStrategy;
    }
});
var _interop_require_wildcard = __mako_require__("@swc/helpers/_/_interop_require_wildcard");
var _react = /*#__PURE__*/ _interop_require_wildcard._(__mako_require__("node_modules/react/index.js"));
var _core = __mako_require__("node_modules/@dnd-kit/core/dist/core.esm.js");
var _utilities = __mako_require__("node_modules/@dnd-kit/utilities/dist/utilities.esm.js");
/**
 * Move an array item to a different position. Returns a new array with the item moved to the new position.
 */ function arrayMove(array, from, to) {
    const newArray = array.slice();
    newArray.splice(to < 0 ? newArray.length + to : to, 0, newArray.splice(from, 1)[0]);
    return newArray;
}
/**
 * Swap an array item to a different position. Returns a new array with the item swapped to the new position.
 */ function arraySwap(array, from, to) {
    const newArray = array.slice();
    newArray[from] = array[to];
    newArray[to] = array[from];
    return newArray;
}
function getSortedRects(items, rects) {
    return items.reduce((accumulator, id, index)=>{
        const rect = rects.get(id);
        if (rect) accumulator[index] = rect;
        return accumulator;
    }, Array(items.length));
}
function isValidIndex(index) {
    return index !== null && index >= 0;
}
function itemsEqual(a, b) {
    if (a === b) return true;
    if (a.length !== b.length) return false;
    for(let i = 0; i < a.length; i++){
        if (a[i] !== b[i]) return false;
    }
    return true;
}
function normalizeDisabled(disabled) {
    if (typeof disabled === 'boolean') return {
        draggable: disabled,
        droppable: disabled
    };
    return disabled;
}
// To-do: We should be calculating scale transformation
const defaultScale = {
    scaleX: 1,
    scaleY: 1
};
const horizontalListSortingStrategy = (_ref)=>{
    var _rects$activeIndex;
    let { rects, activeNodeRect: fallbackActiveRect, activeIndex, overIndex, index } = _ref;
    const activeNodeRect = (_rects$activeIndex = rects[activeIndex]) != null ? _rects$activeIndex : fallbackActiveRect;
    if (!activeNodeRect) return null;
    const itemGap = getItemGap(rects, index, activeIndex);
    if (index === activeIndex) {
        const newIndexRect = rects[overIndex];
        if (!newIndexRect) return null;
        return {
            x: activeIndex < overIndex ? newIndexRect.left + newIndexRect.width - (activeNodeRect.left + activeNodeRect.width) : newIndexRect.left - activeNodeRect.left,
            y: 0,
            ...defaultScale
        };
    }
    if (index > activeIndex && index <= overIndex) return {
        x: -activeNodeRect.width - itemGap,
        y: 0,
        ...defaultScale
    };
    if (index < activeIndex && index >= overIndex) return {
        x: activeNodeRect.width + itemGap,
        y: 0,
        ...defaultScale
    };
    return {
        x: 0,
        y: 0,
        ...defaultScale
    };
};
function getItemGap(rects, index, activeIndex) {
    const currentRect = rects[index];
    const previousRect = rects[index - 1];
    const nextRect = rects[index + 1];
    if (!currentRect || !previousRect && !nextRect) return 0;
    if (activeIndex < index) return previousRect ? currentRect.left - (previousRect.left + previousRect.width) : nextRect.left - (currentRect.left + currentRect.width);
    return nextRect ? nextRect.left - (currentRect.left + currentRect.width) : currentRect.left - (previousRect.left + previousRect.width);
}
const rectSortingStrategy = (_ref)=>{
    let { rects, activeIndex, overIndex, index } = _ref;
    const newRects = arrayMove(rects, overIndex, activeIndex);
    const oldRect = rects[index];
    const newRect = newRects[index];
    if (!newRect || !oldRect) return null;
    return {
        x: newRect.left - oldRect.left,
        y: newRect.top - oldRect.top,
        scaleX: newRect.width / oldRect.width,
        scaleY: newRect.height / oldRect.height
    };
};
const rectSwappingStrategy = (_ref)=>{
    let { activeIndex, index, rects, overIndex } = _ref;
    let oldRect;
    let newRect;
    if (index === activeIndex) {
        oldRect = rects[index];
        newRect = rects[overIndex];
    }
    if (index === overIndex) {
        oldRect = rects[index];
        newRect = rects[activeIndex];
    }
    if (!newRect || !oldRect) return null;
    return {
        x: newRect.left - oldRect.left,
        y: newRect.top - oldRect.top,
        scaleX: newRect.width / oldRect.width,
        scaleY: newRect.height / oldRect.height
    };
};
// To-do: We should be calculating scale transformation
const defaultScale$1 = {
    scaleX: 1,
    scaleY: 1
};
const verticalListSortingStrategy = (_ref)=>{
    var _rects$activeIndex;
    let { activeIndex, activeNodeRect: fallbackActiveRect, index, rects, overIndex } = _ref;
    const activeNodeRect = (_rects$activeIndex = rects[activeIndex]) != null ? _rects$activeIndex : fallbackActiveRect;
    if (!activeNodeRect) return null;
    if (index === activeIndex) {
        const overIndexRect = rects[overIndex];
        if (!overIndexRect) return null;
        return {
            x: 0,
            y: activeIndex < overIndex ? overIndexRect.top + overIndexRect.height - (activeNodeRect.top + activeNodeRect.height) : overIndexRect.top - activeNodeRect.top,
            ...defaultScale$1
        };
    }
    const itemGap = getItemGap$1(rects, index, activeIndex);
    if (index > activeIndex && index <= overIndex) return {
        x: 0,
        y: -activeNodeRect.height - itemGap,
        ...defaultScale$1
    };
    if (index < activeIndex && index >= overIndex) return {
        x: 0,
        y: activeNodeRect.height + itemGap,
        ...defaultScale$1
    };
    return {
        x: 0,
        y: 0,
        ...defaultScale$1
    };
};
function getItemGap$1(clientRects, index, activeIndex) {
    const currentRect = clientRects[index];
    const previousRect = clientRects[index - 1];
    const nextRect = clientRects[index + 1];
    if (!currentRect) return 0;
    if (activeIndex < index) return previousRect ? currentRect.top - (previousRect.top + previousRect.height) : nextRect ? nextRect.top - (currentRect.top + currentRect.height) : 0;
    return nextRect ? nextRect.top - (currentRect.top + currentRect.height) : previousRect ? currentRect.top - (previousRect.top + previousRect.height) : 0;
}
const ID_PREFIX = 'Sortable';
const Context = /*#__PURE__*/ _react.default.createContext({
    activeIndex: -1,
    containerId: ID_PREFIX,
    disableTransforms: false,
    items: [],
    overIndex: -1,
    useDragOverlay: false,
    sortedRects: [],
    strategy: rectSortingStrategy,
    disabled: {
        draggable: false,
        droppable: false
    }
});
function SortableContext(_ref) {
    let { children, id, items: userDefinedItems, strategy = rectSortingStrategy, disabled: disabledProp = false } = _ref;
    const { active, dragOverlay, droppableRects, over, measureDroppableContainers } = (0, _core.useDndContext)();
    const containerId = (0, _utilities.useUniqueId)(ID_PREFIX, id);
    const useDragOverlay = Boolean(dragOverlay.rect !== null);
    const items = (0, _react.useMemo)(()=>userDefinedItems.map((item)=>typeof item === 'object' && 'id' in item ? item.id : item), [
        userDefinedItems
    ]);
    const isDragging = active != null;
    const activeIndex = active ? items.indexOf(active.id) : -1;
    const overIndex = over ? items.indexOf(over.id) : -1;
    const previousItemsRef = (0, _react.useRef)(items);
    const itemsHaveChanged = !itemsEqual(items, previousItemsRef.current);
    const disableTransforms = overIndex !== -1 && activeIndex === -1 || itemsHaveChanged;
    const disabled = normalizeDisabled(disabledProp);
    (0, _utilities.useIsomorphicLayoutEffect)(()=>{
        if (itemsHaveChanged && isDragging) measureDroppableContainers(items);
    }, [
        itemsHaveChanged,
        items,
        isDragging,
        measureDroppableContainers
    ]);
    (0, _react.useEffect)(()=>{
        previousItemsRef.current = items;
    }, [
        items
    ]);
    const contextValue = (0, _react.useMemo)(()=>({
            activeIndex,
            containerId,
            disabled,
            disableTransforms,
            items,
            overIndex,
            useDragOverlay,
            sortedRects: getSortedRects(items, droppableRects),
            strategy
        }), [
        activeIndex,
        containerId,
        disabled.draggable,
        disabled.droppable,
        disableTransforms,
        items,
        overIndex,
        droppableRects,
        useDragOverlay,
        strategy
    ]);
    return /*#__PURE__*/ _react.default.createElement(Context.Provider, {
        value: contextValue
    }, children);
}
const defaultNewIndexGetter = (_ref)=>{
    let { id, items, activeIndex, overIndex } = _ref;
    return arrayMove(items, activeIndex, overIndex).indexOf(id);
};
const defaultAnimateLayoutChanges = (_ref2)=>{
    let { containerId, isSorting, wasDragging, index, items, newIndex, previousItems, previousContainerId, transition } = _ref2;
    if (!transition || !wasDragging) return false;
    if (previousItems !== items && index === newIndex) return false;
    if (isSorting) return true;
    return newIndex !== index && containerId === previousContainerId;
};
const defaultTransition = {
    duration: 200,
    easing: 'ease'
};
const transitionProperty = 'transform';
const disabledTransition = /*#__PURE__*/ _utilities.CSS.Transition.toString({
    property: transitionProperty,
    duration: 0,
    easing: 'linear'
});
const defaultAttributes = {
    roleDescription: 'sortable'
};
/*
 * When the index of an item changes while sorting,
 * we need to temporarily disable the transforms
 */ function useDerivedTransform(_ref) {
    let { disabled, index, node, rect } = _ref;
    const [derivedTransform, setDerivedtransform] = (0, _react.useState)(null);
    const previousIndex = (0, _react.useRef)(index);
    (0, _utilities.useIsomorphicLayoutEffect)(()=>{
        if (!disabled && index !== previousIndex.current && node.current) {
            const initial = rect.current;
            if (initial) {
                const current = (0, _core.getClientRect)(node.current, {
                    ignoreTransform: true
                });
                const delta = {
                    x: initial.left - current.left,
                    y: initial.top - current.top,
                    scaleX: initial.width / current.width,
                    scaleY: initial.height / current.height
                };
                if (delta.x || delta.y) setDerivedtransform(delta);
            }
        }
        if (index !== previousIndex.current) previousIndex.current = index;
    }, [
        disabled,
        index,
        node,
        rect
    ]);
    (0, _react.useEffect)(()=>{
        if (derivedTransform) setDerivedtransform(null);
    }, [
        derivedTransform
    ]);
    return derivedTransform;
}
function useSortable(_ref) {
    let { animateLayoutChanges = defaultAnimateLayoutChanges, attributes: userDefinedAttributes, disabled: localDisabled, data: customData, getNewIndex = defaultNewIndexGetter, id, strategy: localStrategy, resizeObserverConfig, transition = defaultTransition } = _ref;
    const { items, containerId, activeIndex, disabled: globalDisabled, disableTransforms, sortedRects, overIndex, useDragOverlay, strategy: globalStrategy } = (0, _react.useContext)(Context);
    const disabled = normalizeLocalDisabled(localDisabled, globalDisabled);
    const index = items.indexOf(id);
    const data = (0, _react.useMemo)(()=>({
            sortable: {
                containerId,
                index,
                items
            },
            ...customData
        }), [
        containerId,
        customData,
        index,
        items
    ]);
    const itemsAfterCurrentSortable = (0, _react.useMemo)(()=>items.slice(items.indexOf(id)), [
        items,
        id
    ]);
    const { rect, node, isOver, setNodeRef: setDroppableNodeRef } = (0, _core.useDroppable)({
        id,
        data,
        disabled: disabled.droppable,
        resizeObserverConfig: {
            updateMeasurementsFor: itemsAfterCurrentSortable,
            ...resizeObserverConfig
        }
    });
    const { active, activatorEvent, activeNodeRect, attributes, setNodeRef: setDraggableNodeRef, listeners, isDragging, over, setActivatorNodeRef, transform } = (0, _core.useDraggable)({
        id,
        data,
        attributes: {
            ...defaultAttributes,
            ...userDefinedAttributes
        },
        disabled: disabled.draggable
    });
    const setNodeRef = (0, _utilities.useCombinedRefs)(setDroppableNodeRef, setDraggableNodeRef);
    const isSorting = Boolean(active);
    const displaceItem = isSorting && !disableTransforms && isValidIndex(activeIndex) && isValidIndex(overIndex);
    const shouldDisplaceDragSource = !useDragOverlay && isDragging;
    const dragSourceDisplacement = shouldDisplaceDragSource && displaceItem ? transform : null;
    const strategy = localStrategy != null ? localStrategy : globalStrategy;
    const finalTransform = displaceItem ? dragSourceDisplacement != null ? dragSourceDisplacement : strategy({
        rects: sortedRects,
        activeNodeRect,
        activeIndex,
        overIndex,
        index
    }) : null;
    const newIndex = isValidIndex(activeIndex) && isValidIndex(overIndex) ? getNewIndex({
        id,
        items,
        activeIndex,
        overIndex
    }) : index;
    const activeId = active == null ? void 0 : active.id;
    const previous = (0, _react.useRef)({
        activeId,
        items,
        newIndex,
        containerId
    });
    const itemsHaveChanged = items !== previous.current.items;
    const shouldAnimateLayoutChanges = animateLayoutChanges({
        active,
        containerId,
        isDragging,
        isSorting,
        id,
        index,
        items,
        newIndex: previous.current.newIndex,
        previousItems: previous.current.items,
        previousContainerId: previous.current.containerId,
        transition,
        wasDragging: previous.current.activeId != null
    });
    const derivedTransform = useDerivedTransform({
        disabled: !shouldAnimateLayoutChanges,
        index,
        node,
        rect
    });
    (0, _react.useEffect)(()=>{
        if (isSorting && previous.current.newIndex !== newIndex) previous.current.newIndex = newIndex;
        if (containerId !== previous.current.containerId) previous.current.containerId = containerId;
        if (items !== previous.current.items) previous.current.items = items;
    }, [
        isSorting,
        newIndex,
        containerId,
        items
    ]);
    (0, _react.useEffect)(()=>{
        if (activeId === previous.current.activeId) return;
        if (activeId && !previous.current.activeId) {
            previous.current.activeId = activeId;
            return;
        }
        const timeoutId = setTimeout(()=>{
            previous.current.activeId = activeId;
        }, 50);
        return ()=>clearTimeout(timeoutId);
    }, [
        activeId
    ]);
    return {
        active,
        activeIndex,
        attributes,
        data,
        rect,
        index,
        newIndex,
        items,
        isOver,
        isSorting,
        isDragging,
        listeners,
        node,
        overIndex,
        over,
        setNodeRef,
        setActivatorNodeRef,
        setDroppableNodeRef,
        setDraggableNodeRef,
        transform: derivedTransform != null ? derivedTransform : finalTransform,
        transition: getTransition()
    };
    function getTransition() {
        if (derivedTransform || // Or to prevent items jumping to back to their "new" position when items change
        itemsHaveChanged && previous.current.newIndex === index) return disabledTransition;
        if (shouldDisplaceDragSource && !(0, _utilities.isKeyboardEvent)(activatorEvent) || !transition) return undefined;
        if (isSorting || shouldAnimateLayoutChanges) return _utilities.CSS.Transition.toString({
            ...transition,
            property: transitionProperty
        });
        return undefined;
    }
}
function normalizeLocalDisabled(localDisabled, globalDisabled) {
    var _localDisabled$dragga, _localDisabled$droppa;
    if (typeof localDisabled === 'boolean') return {
        draggable: localDisabled,
        // Backwards compatibility
        droppable: false
    };
    return {
        draggable: (_localDisabled$dragga = localDisabled == null ? void 0 : localDisabled.draggable) != null ? _localDisabled$dragga : globalDisabled.draggable,
        droppable: (_localDisabled$droppa = localDisabled == null ? void 0 : localDisabled.droppable) != null ? _localDisabled$droppa : globalDisabled.droppable
    };
}
function hasSortableData(entry) {
    if (!entry) return false;
    const data = entry.data.current;
    if (data && 'sortable' in data && typeof data.sortable === 'object' && 'containerId' in data.sortable && 'items' in data.sortable && 'index' in data.sortable) return true;
    return false;
}
const directions = [
    _core.KeyboardCode.Down,
    _core.KeyboardCode.Right,
    _core.KeyboardCode.Up,
    _core.KeyboardCode.Left
];
const sortableKeyboardCoordinates = (event, _ref)=>{
    let { context: { active, collisionRect, droppableRects, droppableContainers, over, scrollableAncestors } } = _ref;
    if (directions.includes(event.code)) {
        event.preventDefault();
        if (!active || !collisionRect) return;
        const filteredContainers = [];
        droppableContainers.getEnabled().forEach((entry)=>{
            if (!entry || entry != null && entry.disabled) return;
            const rect = droppableRects.get(entry.id);
            if (!rect) return;
            switch(event.code){
                case _core.KeyboardCode.Down:
                    if (collisionRect.top < rect.top) filteredContainers.push(entry);
                    break;
                case _core.KeyboardCode.Up:
                    if (collisionRect.top > rect.top) filteredContainers.push(entry);
                    break;
                case _core.KeyboardCode.Left:
                    if (collisionRect.left > rect.left) filteredContainers.push(entry);
                    break;
                case _core.KeyboardCode.Right:
                    if (collisionRect.left < rect.left) filteredContainers.push(entry);
                    break;
            }
        });
        const collisions = (0, _core.closestCorners)({
            active,
            collisionRect: collisionRect,
            droppableRects,
            droppableContainers: filteredContainers,
            pointerCoordinates: null
        });
        let closestId = (0, _core.getFirstCollision)(collisions, 'id');
        if (closestId === (over == null ? void 0 : over.id) && collisions.length > 1) closestId = collisions[1].id;
        if (closestId != null) {
            const activeDroppable = droppableContainers.get(active.id);
            const newDroppable = droppableContainers.get(closestId);
            const newRect = newDroppable ? droppableRects.get(newDroppable.id) : null;
            const newNode = newDroppable == null ? void 0 : newDroppable.node.current;
            if (newNode && newRect && activeDroppable && newDroppable) {
                const newScrollAncestors = (0, _core.getScrollableAncestors)(newNode);
                const hasDifferentScrollAncestors = newScrollAncestors.some((element, index)=>scrollableAncestors[index] !== element);
                const hasSameContainer = isSameContainer(activeDroppable, newDroppable);
                const isAfterActive = isAfter(activeDroppable, newDroppable);
                const offset = hasDifferentScrollAncestors || !hasSameContainer ? {
                    x: 0,
                    y: 0
                } : {
                    x: isAfterActive ? collisionRect.width - newRect.width : 0,
                    y: isAfterActive ? collisionRect.height - newRect.height : 0
                };
                const rectCoordinates = {
                    x: newRect.left,
                    y: newRect.top
                };
                const newCoordinates = offset.x && offset.y ? rectCoordinates : (0, _utilities.subtract)(rectCoordinates, offset);
                return newCoordinates;
            }
        }
    }
    return undefined;
};
function isSameContainer(a, b) {
    if (!hasSortableData(a) || !hasSortableData(b)) return false;
    return a.data.current.sortable.containerId === b.data.current.sortable.containerId;
}
function isAfter(a, b) {
    if (!hasSortableData(a) || !hasSortableData(b)) return false;
    if (!isSameContainer(a, b)) return false;
    return a.data.current.sortable.index < b.data.current.sortable.index;
}
 //# sourceMappingURL=sortable.esm.js.map

},
"node_modules/@dnd-kit/utilities/dist/utilities.esm.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    CSS: function() {
        return CSS;
    },
    add: function() {
        return add;
    },
    canUseDOM: function() {
        return canUseDOM;
    },
    findFirstFocusableNode: function() {
        return findFirstFocusableNode;
    },
    getEventCoordinates: function() {
        return getEventCoordinates;
    },
    getOwnerDocument: function() {
        return getOwnerDocument;
    },
    getWindow: function() {
        return getWindow;
    },
    hasViewportRelativeCoordinates: function() {
        return hasViewportRelativeCoordinates;
    },
    isDocument: function() {
        return isDocument;
    },
    isHTMLElement: function() {
        return isHTMLElement;
    },
    isKeyboardEvent: function() {
        return isKeyboardEvent;
    },
    isNode: function() {
        return isNode;
    },
    isSVGElement: function() {
        return isSVGElement;
    },
    isTouchEvent: function() {
        return isTouchEvent;
    },
    isWindow: function() {
        return isWindow;
    },
    subtract: function() {
        return subtract;
    },
    useCombinedRefs: function() {
        return useCombinedRefs;
    },
    useEvent: function() {
        return useEvent;
    },
    useInterval: function() {
        return useInterval;
    },
    useIsomorphicLayoutEffect: function() {
        return useIsomorphicLayoutEffect;
    },
    useLatestValue: function() {
        return useLatestValue;
    },
    useLazyMemo: function() {
        return useLazyMemo;
    },
    useNodeRef: function() {
        return useNodeRef;
    },
    usePrevious: function() {
        return usePrevious;
    },
    useUniqueId: function() {
        return useUniqueId;
    }
});
var _react = __mako_require__("node_modules/react/index.js");
function useCombinedRefs() {
    for(var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++)refs[_key] = arguments[_key];
    return (0, _react.useMemo)(()=>(node)=>{
            refs.forEach((ref)=>ref(node));
        }, refs);
}
// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js
const canUseDOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';
function isWindow(element) {
    const elementString = Object.prototype.toString.call(element);
    return elementString === '[object Window]' || // In Electron context the Window object serializes to [object global]
    elementString === '[object global]';
}
function isNode(node) {
    return 'nodeType' in node;
}
function getWindow(target) {
    var _target$ownerDocument, _target$ownerDocument2;
    if (!target) return window;
    if (isWindow(target)) return target;
    if (!isNode(target)) return window;
    return (_target$ownerDocument = (_target$ownerDocument2 = target.ownerDocument) == null ? void 0 : _target$ownerDocument2.defaultView) != null ? _target$ownerDocument : window;
}
function isDocument(node) {
    const { Document } = getWindow(node);
    return node instanceof Document;
}
function isHTMLElement(node) {
    if (isWindow(node)) return false;
    return node instanceof getWindow(node).HTMLElement;
}
function isSVGElement(node) {
    return node instanceof getWindow(node).SVGElement;
}
function getOwnerDocument(target) {
    if (!target) return document;
    if (isWindow(target)) return target.document;
    if (!isNode(target)) return document;
    if (isDocument(target)) return target;
    if (isHTMLElement(target) || isSVGElement(target)) return target.ownerDocument;
    return document;
}
/**
 * A hook that resolves to useEffect on the server and useLayoutEffect on the client
 * @param callback {function} Callback function that is invoked when the dependencies of the hook change
 */ const useIsomorphicLayoutEffect = canUseDOM ? _react.useLayoutEffect : _react.useEffect;
function useEvent(handler) {
    const handlerRef = (0, _react.useRef)(handler);
    useIsomorphicLayoutEffect(()=>{
        handlerRef.current = handler;
    });
    return (0, _react.useCallback)(function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        return handlerRef.current == null ? void 0 : handlerRef.current(...args);
    }, []);
}
function useInterval() {
    const intervalRef = (0, _react.useRef)(null);
    const set = (0, _react.useCallback)((listener, duration)=>{
        intervalRef.current = setInterval(listener, duration);
    }, []);
    const clear = (0, _react.useCallback)(()=>{
        if (intervalRef.current !== null) {
            clearInterval(intervalRef.current);
            intervalRef.current = null;
        }
    }, []);
    return [
        set,
        clear
    ];
}
function useLatestValue(value, dependencies) {
    if (dependencies === void 0) dependencies = [
        value
    ];
    const valueRef = (0, _react.useRef)(value);
    useIsomorphicLayoutEffect(()=>{
        if (valueRef.current !== value) valueRef.current = value;
    }, dependencies);
    return valueRef;
}
function useLazyMemo(callback, dependencies) {
    const valueRef = (0, _react.useRef)();
    return (0, _react.useMemo)(()=>{
        const newValue = callback(valueRef.current);
        valueRef.current = newValue;
        return newValue;
    }, [
        ...dependencies
    ]);
}
function useNodeRef(onChange) {
    const onChangeHandler = useEvent(onChange);
    const node = (0, _react.useRef)(null);
    const setNodeRef = (0, _react.useCallback)((element)=>{
        if (element !== node.current) onChangeHandler == null || onChangeHandler(element, node.current);
        node.current = element;
    }, []);
    return [
        node,
        setNodeRef
    ];
}
function usePrevious(value) {
    const ref = (0, _react.useRef)();
    (0, _react.useEffect)(()=>{
        ref.current = value;
    }, [
        value
    ]);
    return ref.current;
}
let ids = {};
function useUniqueId(prefix, value) {
    return (0, _react.useMemo)(()=>{
        if (value) return value;
        const id = ids[prefix] == null ? 0 : ids[prefix] + 1;
        ids[prefix] = id;
        return prefix + "-" + id;
    }, [
        prefix,
        value
    ]);
}
function createAdjustmentFn(modifier) {
    return function(object) {
        for(var _len = arguments.length, adjustments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)adjustments[_key - 1] = arguments[_key];
        return adjustments.reduce((accumulator, adjustment)=>{
            const entries = Object.entries(adjustment);
            for (const [key, valueAdjustment] of entries){
                const value = accumulator[key];
                if (value != null) accumulator[key] = value + modifier * valueAdjustment;
            }
            return accumulator;
        }, {
            ...object
        });
    };
}
const add = /*#__PURE__*/ createAdjustmentFn(1);
const subtract = /*#__PURE__*/ createAdjustmentFn(-1);
function hasViewportRelativeCoordinates(event) {
    return 'clientX' in event && 'clientY' in event;
}
function isKeyboardEvent(event) {
    if (!event) return false;
    const { KeyboardEvent } = getWindow(event.target);
    return KeyboardEvent && event instanceof KeyboardEvent;
}
function isTouchEvent(event) {
    if (!event) return false;
    const { TouchEvent } = getWindow(event.target);
    return TouchEvent && event instanceof TouchEvent;
}
/**
 * Returns the normalized x and y coordinates for mouse and touch events.
 */ function getEventCoordinates(event) {
    if (isTouchEvent(event)) {
        if (event.touches && event.touches.length) {
            const { clientX: x, clientY: y } = event.touches[0];
            return {
                x,
                y
            };
        } else if (event.changedTouches && event.changedTouches.length) {
            const { clientX: x, clientY: y } = event.changedTouches[0];
            return {
                x,
                y
            };
        }
    }
    if (hasViewportRelativeCoordinates(event)) return {
        x: event.clientX,
        y: event.clientY
    };
    return null;
}
const CSS = /*#__PURE__*/ Object.freeze({
    Translate: {
        toString (transform) {
            if (!transform) return;
            const { x, y } = transform;
            return "translate3d(" + (x ? Math.round(x) : 0) + "px, " + (y ? Math.round(y) : 0) + "px, 0)";
        }
    },
    Scale: {
        toString (transform) {
            if (!transform) return;
            const { scaleX, scaleY } = transform;
            return "scaleX(" + scaleX + ") scaleY(" + scaleY + ")";
        }
    },
    Transform: {
        toString (transform) {
            if (!transform) return;
            return [
                CSS.Translate.toString(transform),
                CSS.Scale.toString(transform)
            ].join(' ');
        }
    },
    Transition: {
        toString (_ref) {
            let { property, duration, easing } = _ref;
            return property + " " + duration + "ms " + easing;
        }
    }
});
const SELECTOR = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]';
function findFirstFocusableNode(element) {
    if (element.matches(SELECTOR)) return element;
    return element.querySelector(SELECTOR);
}
 //# sourceMappingURL=utilities.esm.js.map

},
"node_modules/@umijs/route-utils/es/getFlatMenus/getFlatMenus.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    default: function() {
        return _default;
    },
    getFlatMenus: function() {
        return getFlatMenus;
    }
});
var _transformRoute = __mako_require__("node_modules/@umijs/route-utils/es/transformRoute/transformRoute.js");
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys.push.apply(keys, symbols);
    }
    return keys;
}
function _objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {
            _defineProperty(target, key, source[key]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
var getFlatMenus = function getFlatMenus() {
    var menuData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var menus = {};
    menuData.forEach(function(mapItem) {
        var item = _objectSpread({}, mapItem);
        if (!item || !item.key) return;
        if (!item.children && item[_transformRoute.childrenPropsName]) {
            item.children = item[_transformRoute.childrenPropsName];
            delete item[_transformRoute.childrenPropsName];
        }
        var routerChildren = item.children || [];
        menus[(0, _transformRoute.stripQueryStringAndHashFromPath)(item.path || item.key || '/')] = _objectSpread({}, item);
        menus[item.key || item.path || '/'] = _objectSpread({}, item);
        if (routerChildren) menus = _objectSpread(_objectSpread({}, menus), getFlatMenus(routerChildren));
    });
    return menus;
};
var _default = getFlatMenus;

},
"node_modules/@umijs/route-utils/es/getMatchMenu/getMatchMenu.js": function (module, exports, __mako_require__){
//@ts-ignore
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    default: function() {
        return _default;
    },
    getMatchMenu: function() {
        return getMatchMenu;
    },
    getMenuMatches: function() {
        return getMenuMatches;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _pathtoregexp = __mako_require__("node_modules/@umijs/route-utils/es/path-to-regexp.js");
var _getFlatMenus = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@umijs/route-utils/es/getFlatMenus/getFlatMenus.js"));
var _transformRoute = __mako_require__("node_modules/@umijs/route-utils/es/transformRoute/transformRoute.js");
var getMenuMatches = function getMenuMatches() {
    var flatMenuKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var path = arguments.length > 1 ? arguments[1] : undefined;
    var exact = arguments.length > 2 ? arguments[2] : undefined;
    return flatMenuKeys.filter(function(item) {
        if (item === '/' && path === '/') return true;
        if (item !== '/' && item !== '/*' && item && !(0, _transformRoute.isUrl)(item)) {
            var pathKey = (0, _transformRoute.stripQueryStringAndHashFromPath)(item);
            try {
                // exact
                if (exact) {
                    if ((0, _pathtoregexp.pathToRegexp)("".concat(pathKey)).test(path)) return true;
                } // /a
                if ((0, _pathtoregexp.pathToRegexp)("".concat(pathKey), []).test(path)) return true;
                 // /a/b/b
                if ((0, _pathtoregexp.pathToRegexp)("".concat(pathKey, "/(.*)")).test(path)) return true;
            } catch (error) {}
        }
        return false;
    }).sort(function(a, b) {
        // 如果完全匹配放到最后面
        if (a === path) return 10;
        if (b === path) return -10;
        return a.substr(1).split('/').length - b.substr(1).split('/').length;
    });
};
var getMatchMenu = function getMatchMenu(pathname, menuData, /**
 * 要不要展示全部的 key
 */ fullKeys, exact) {
    var flatMenus = (0, _getFlatMenus.default)(menuData);
    var flatMenuKeys = Object.keys(flatMenus);
    var menuPathKeys = getMenuMatches(flatMenuKeys, pathname || '/', exact);
    if (!menuPathKeys || menuPathKeys.length < 1) return [];
    if (!fullKeys) menuPathKeys = [
        menuPathKeys[menuPathKeys.length - 1]
    ];
    return menuPathKeys.map(function(menuPathKey) {
        var menuItem = flatMenus[menuPathKey] || {
            pro_layout_parentKeys: '',
            key: ''
        }; // 去重
        var map = new Map();
        var parentItems = (menuItem.pro_layout_parentKeys || []).map(function(key) {
            if (map.has(key)) return null;
            map.set(key, true);
            return flatMenus[key];
        }).filter(function(item) {
            return item;
        });
        if (menuItem.key) parentItems.push(menuItem);
        return parentItems;
    }).flat(1);
};
var _default = getMatchMenu;

},
"node_modules/@umijs/route-utils/es/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    getFlatMenus: function() {
        return _getFlatMenus.default;
    },
    getMatchMenu: function() {
        return _getMatchMenu.default;
    },
    transformRoute: function() {
        return _transformRoute.default;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _transformRoute = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@umijs/route-utils/es/transformRoute/transformRoute.js"));
var _getFlatMenus = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@umijs/route-utils/es/getFlatMenus/getFlatMenus.js"));
var _getMatchMenu = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@umijs/route-utils/es/getMatchMenu/getMatchMenu.js"));

},
"node_modules/@umijs/route-utils/es/path-to-regexp.js": function (module, exports, __mako_require__){
function _typeof(obj) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
    } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    }, _typeof(obj);
}
Object.defineProperty(exports, '__esModule', {
    value: true
});
exports.pathToRegexp = exports.tokensToRegexp = exports.regexpToFunction = exports.match = exports.tokensToFunction = exports.compile = exports.parse = void 0;
/**
 * Tokenize input string.
 */ function lexer(str) {
    var tokens = [];
    var i = 0;
    while(i < str.length){
        var char = str[i];
        if (char === '*' || char === '+' || char === '?') {
            tokens.push({
                type: 'MODIFIER',
                index: i,
                value: str[i++]
            });
            continue;
        }
        if (char === '\\') {
            tokens.push({
                type: 'ESCAPED_CHAR',
                index: i++,
                value: str[i++]
            });
            continue;
        }
        if (char === '{') {
            tokens.push({
                type: 'OPEN',
                index: i,
                value: str[i++]
            });
            continue;
        }
        if (char === '}') {
            tokens.push({
                type: 'CLOSE',
                index: i,
                value: str[i++]
            });
            continue;
        }
        if (char === ':') {
            var name = '';
            var j = i + 1;
            while(j < str.length){
                var code = str.charCodeAt(j);
                if (code >= 48 && code <= 57 || // `A-Z`
                code >= 65 && code <= 90 || // `a-z`
                code >= 97 && code <= 122 || // `_`
                code === 95) {
                    name += str[j++];
                    continue;
                }
                break;
            }
            if (!name) throw new TypeError('Missing parameter name at ' + i);
            tokens.push({
                type: 'NAME',
                index: i,
                value: name
            });
            i = j;
            continue;
        }
        if (char === '(') {
            var count = 1;
            var pattern = '';
            var j = i + 1;
            if (str[j] === '?') throw new TypeError('Pattern cannot start with "?" at ' + j);
            while(j < str.length){
                if (str[j] === '\\') {
                    pattern += str[j++] + str[j++];
                    continue;
                }
                if (str[j] === ')') {
                    count--;
                    if (count === 0) {
                        j++;
                        break;
                    }
                } else if (str[j] === '(') {
                    count++;
                    if (str[j + 1] !== '?') throw new TypeError('Capturing groups are not allowed at ' + j);
                }
                pattern += str[j++];
            }
            if (count) throw new TypeError('Unbalanced pattern at ' + i);
            if (!pattern) throw new TypeError('Missing pattern at ' + i);
            tokens.push({
                type: 'PATTERN',
                index: i,
                value: pattern
            });
            i = j;
            continue;
        }
        tokens.push({
            type: 'CHAR',
            index: i,
            value: str[i++]
        });
    }
    tokens.push({
        type: 'END',
        index: i,
        value: ''
    });
    return tokens;
}
/**
 * Parse a string for the raw tokens.
 */ function parse(str, options) {
    if (options === void 0) // eslint-disable-next-line no-param-reassign
    options = {};
    var tokens = lexer(str);
    var _a = options.prefixes, prefixes = _a === void 0 ? './' : _a;
    var defaultPattern = '[^' + escapeString(options.delimiter || '/#?') + ']+?';
    var result = [];
    var key = 0;
    var i = 0;
    var path = '';
    var tryConsume = function tryConsume(type) {
        if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;
    };
    var mustConsume = function mustConsume(type) {
        var value = tryConsume(type);
        if (value !== undefined) return value;
        var _a = tokens[i], nextType = _a.type, index = _a.index;
        throw new TypeError('Unexpected ' + nextType + ' at ' + index + ', expected ' + type);
    };
    var consumeText = function consumeText() {
        var result = '';
        var value; // tslint:disable-next-line
        while(value = tryConsume('CHAR') || tryConsume('ESCAPED_CHAR'))result += value;
        return result;
    };
    while(i < tokens.length){
        var char = tryConsume('CHAR');
        var name = tryConsume('NAME');
        var pattern = tryConsume('PATTERN');
        if (name || pattern) {
            var prefix = char || '';
            if (prefixes.indexOf(prefix) === -1) {
                path += prefix;
                prefix = '';
            }
            if (path) {
                result.push(path);
                path = '';
            }
            result.push({
                name: name || key++,
                prefix: prefix,
                suffix: '',
                pattern: pattern || defaultPattern,
                modifier: tryConsume('MODIFIER') || ''
            });
            continue;
        }
        var value = char || tryConsume('ESCAPED_CHAR');
        if (value) {
            path += value;
            continue;
        }
        if (path) {
            result.push(path);
            path = '';
        }
        var open = tryConsume('OPEN');
        if (open) {
            var prefix = consumeText();
            var name_1 = tryConsume('NAME') || '';
            var pattern_1 = tryConsume('PATTERN') || '';
            var suffix = consumeText();
            mustConsume('CLOSE');
            result.push({
                name: name_1 || (pattern_1 ? key++ : ''),
                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,
                prefix: prefix,
                suffix: suffix,
                modifier: tryConsume('MODIFIER') || ''
            });
            continue;
        }
        mustConsume('END');
    }
    return result;
}
exports.parse = parse;
/**
 * Compile a string to a template function for the path.
 */ function compile(str, options) {
    return tokensToFunction(parse(str, options), options);
}
exports.compile = compile;
/**
 * Expose a method for transforming tokens into the path function.
 */ function tokensToFunction(tokens, options) {
    if (options === void 0) // eslint-disable-next-line no-param-reassign
    options = {};
    var reFlags = flags(options);
    var _a = options.encode, encode = _a === void 0 ? function(x) {
        return x;
    } : _a, _b = options.validate, validate = _b === void 0 ? true : _b; // Compile all the tokens into regexps.
    var matches = tokens.map(function(token) {
        if (_typeof(token) === 'object') return new RegExp('^(?:' + token.pattern + ')$', reFlags);
    });
    return function(data) {
        var path = '';
        for(var i = 0; i < tokens.length; i++){
            var token = tokens[i];
            if (typeof token === 'string') {
                path += token;
                continue;
            }
            var value = data ? data[token.name] : undefined;
            var optional = token.modifier === '?' || token.modifier === '*';
            var repeat = token.modifier === '*' || token.modifier === '+';
            if (Array.isArray(value)) {
                if (!repeat) throw new TypeError('Expected "' + token.name + '" to not repeat, but got an array');
                if (value.length === 0) {
                    if (optional) continue;
                    throw new TypeError('Expected "' + token.name + '" to not be empty');
                }
                for(var j = 0; j < value.length; j++){
                    var segment = encode(value[j], token);
                    if (validate && !matches[i].test(segment)) throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but got "' + segment + '"');
                    path += token.prefix + segment + token.suffix;
                }
                continue;
            }
            if (typeof value === 'string' || typeof value === 'number') {
                var segment = encode(String(value), token);
                if (validate && !matches[i].test(segment)) throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but got "' + segment + '"');
                path += token.prefix + segment + token.suffix;
                continue;
            }
            if (optional) continue;
            var typeOfMessage = repeat ? 'an array' : 'a string';
            throw new TypeError('Expected "' + token.name + '" to be ' + typeOfMessage);
        }
        return path;
    };
}
exports.tokensToFunction = tokensToFunction;
/**
 * Create path match function from `path-to-regexp` spec.
 */ function match(str, options) {
    var keys = [];
    var re = pathToRegexp(str, keys, options);
    return regexpToFunction(re, keys, options);
}
exports.match = match;
/**
 * Create a path match function from `path-to-regexp` output.
 */ function regexpToFunction(re, keys, options) {
    if (options === void 0) // eslint-disable-next-line no-param-reassign
    options = {};
    var _a = options.decode, decode = _a === void 0 ? function(x) {
        return x;
    } : _a;
    return function(pathname) {
        var m = re.exec(pathname);
        if (!m) return false;
        var path = m[0], index = m.index;
        var params = Object.create(null);
        var _loop_1 = function _loop_1(i) {
            // tslint:disable-next-line
            if (m[i] === undefined) return 'continue';
            var key = keys[i - 1];
            if (key.modifier === '*' || key.modifier === '+') params[key.name] = m[i].split(key.prefix + key.suffix).map(function(value) {
                return decode(value, key);
            });
            else params[key.name] = decode(m[i], key);
        };
        for(var i = 1; i < m.length; i++)_loop_1(i);
        return {
            path: path,
            index: index,
            params: params
        };
    };
}
exports.regexpToFunction = regexpToFunction;
/**
 * Escape a regular expression string.
 */ function escapeString(str) {
    return str.replace(/([.+*?=^!:${}()[\]|/\\])/g, '\\$1');
}
/**
 * Get the flags for a regexp from the options.
 */ function flags(options) {
    return options && options.sensitive ? '' : 'i';
}
/**
 * Pull out keys from a regexp.
 */ function regexpToRegexp(path, keys) {
    if (!keys) return path; // Use a negative lookahead to match only capturing groups.
    var groups = path.source.match(/\((?!\?)/g);
    if (groups) for(var i = 0; i < groups.length; i++)keys.push({
        name: i,
        prefix: '',
        suffix: '',
        modifier: '',
        pattern: ''
    });
    return path;
}
/**
 * Transform an array into a regexp.
 */ function arrayToRegexp(paths, keys, options) {
    var parts = paths.map(function(path) {
        return pathToRegexp(path, keys, options).source;
    });
    return new RegExp('(?:' + parts.join('|') + ')', flags(options));
}
/**
 * Create a path regexp from string input.
 */ function stringToRegexp(path, keys, options) {
    return tokensToRegexp(parse(path, options), keys, options);
}
/**
 * Expose a function for taking tokens and returning a RegExp.
 */ function tokensToRegexp(tokens, keys, options) {
    if (options === void 0) // eslint-disable-next-line no-param-reassign
    options = {};
    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function(x) {
        return x;
    } : _d;
    var endsWith = '[' + escapeString(options.endsWith || '') + ']|$';
    var delimiter = '[' + escapeString(options.delimiter || '/#?') + ']';
    var route = start ? '^' : ''; // Iterate over the tokens and create our regexp string.
    for(var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++){
        var token = tokens_1[_i];
        if (typeof token === 'string') route += escapeString(encode(token));
        else {
            var prefix = escapeString(encode(token.prefix));
            var suffix = escapeString(encode(token.suffix));
            if (token.pattern) {
                if (keys) keys.push(token);
                if (prefix || suffix) {
                    if (token.modifier === '+' || token.modifier === '*') {
                        var mod = token.modifier === '*' ? '?' : '';
                        route += '(?:' + prefix + '((?:' + token.pattern + ')(?:' + suffix + prefix + '(?:' + token.pattern + '))*)' + suffix + ')' + mod;
                    } else route += '(?:' + prefix + '(' + token.pattern + ')' + suffix + ')' + token.modifier;
                } else route += '(' + token.pattern + ')' + token.modifier;
            } else route += '(?:' + prefix + suffix + ')' + token.modifier;
        }
    }
    if (end) {
        if (!strict) route += delimiter + '?';
        route += !options.endsWith ? '$' : '(?=' + endsWith + ')';
    } else {
        var endToken = tokens[tokens.length - 1];
        var isEndDelimited = typeof endToken === 'string' ? delimiter.indexOf(endToken[endToken.length - 1]) > -1 : endToken === undefined;
        if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?';
        if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')';
    }
    return new RegExp(route, flags(options));
}
exports.tokensToRegexp = tokensToRegexp;
/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 */ function pathToRegexp(path, keys, options) {
    if (path instanceof RegExp) return regexpToRegexp(path, keys);
    if (Array.isArray(path)) return arrayToRegexp(path, keys, options);
    return stringToRegexp(path, keys, options);
}
exports.pathToRegexp = pathToRegexp;

},
"node_modules/@umijs/route-utils/es/sha265.js": function (module, exports, __mako_require__){
/* eslint-disable no-redeclare */ /* eslint-disable no-multi-assign */ /* eslint-disable no-param-reassign */ /* eslint-disable no-return-assign */ /* eslint-disable no-new-wrappers */ /* eslint-disable @typescript-eslint/no-unused-vars */ /* eslint-disable no-var */ /* eslint-disable no-plusplus */ /* eslint-disable prefer-destructuring */ /* eslint-disable @typescript-eslint/naming-convention */ /* eslint-disable block-scoped-var */ /* eslint-disable vars-on-top */ /* eslint-disable no-bitwise */ /* eslint-disable no-cond-assign */ /*
 * A JavaScript implementation of the SHA256 hash function.
 *
 * FILE:	sha256.js
 * VERSION:	0.8
 * AUTHOR:	Christoph Bichlmeier <informatik@zombiearena.de>
 *
 * NOTE: This version is not tested thoroughly!
 *
 * Copyright (c) 2003, Christoph Bichlmeier
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the copyright holder nor the names of contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * ======================================================================
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */ /* SHA256 logical functions */ "use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
__mako_require__.d(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
function rotateRight(n, x) {
    return x >>> n | x << 32 - n;
}
function choice(x, y, z) {
    return x & y ^ ~x & z;
}
function majority(x, y, z) {
    return x & y ^ x & z ^ y & z;
}
function sha256_Sigma0(x) {
    return rotateRight(2, x) ^ rotateRight(13, x) ^ rotateRight(22, x);
}
function sha256_Sigma1(x) {
    return rotateRight(6, x) ^ rotateRight(11, x) ^ rotateRight(25, x);
}
function sha256_sigma0(x) {
    return rotateRight(7, x) ^ rotateRight(18, x) ^ x >>> 3;
}
function sha256_sigma1(x) {
    return rotateRight(17, x) ^ rotateRight(19, x) ^ x >>> 10;
}
function sha256_expand(W, j) {
    return W[j & 0x0f] += sha256_sigma1(W[j + 14 & 0x0f]) + W[j + 9 & 0x0f] + sha256_sigma0(W[j + 1 & 0x0f]);
}
/* Hash constant words K: */ var K256 = [
    0x428a2f98,
    0x71374491,
    0xb5c0fbcf,
    0xe9b5dba5,
    0x3956c25b,
    0x59f111f1,
    0x923f82a4,
    0xab1c5ed5,
    0xd807aa98,
    0x12835b01,
    0x243185be,
    0x550c7dc3,
    0x72be5d74,
    0x80deb1fe,
    0x9bdc06a7,
    0xc19bf174,
    0xe49b69c1,
    0xefbe4786,
    0x0fc19dc6,
    0x240ca1cc,
    0x2de92c6f,
    0x4a7484aa,
    0x5cb0a9dc,
    0x76f988da,
    0x983e5152,
    0xa831c66d,
    0xb00327c8,
    0xbf597fc7,
    0xc6e00bf3,
    0xd5a79147,
    0x06ca6351,
    0x14292967,
    0x27b70a85,
    0x2e1b2138,
    0x4d2c6dfc,
    0x53380d13,
    0x650a7354,
    0x766a0abb,
    0x81c2c92e,
    0x92722c85,
    0xa2bfe8a1,
    0xa81a664b,
    0xc24b8b70,
    0xc76c51a3,
    0xd192e819,
    0xd6990624,
    0xf40e3585,
    0x106aa070,
    0x19a4c116,
    0x1e376c08,
    0x2748774c,
    0x34b0bcb5,
    0x391c0cb3,
    0x4ed8aa4a,
    0x5b9cca4f,
    0x682e6ff3,
    0x748f82ee,
    0x78a5636f,
    0x84c87814,
    0x8cc70208,
    0x90befffa,
    0xa4506ceb,
    0xbef9a3f7,
    0xc67178f2
];
/* global arrays */ var ihash;
var count;
var buffer;
var sha256_hex_digits = '0123456789abcdef';
/* Add 32-bit integers with 16-bit operations (bug in some JS-interpreters:
overflow) */ function safe_add(x, y) {
    var lsw = (x & 0xffff) + (y & 0xffff);
    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
    return msw << 16 | lsw & 0xffff;
}
/* Initialise the SHA256 computation */ function sha256_init() {
    ihash = new Array(8);
    count = new Array(2);
    buffer = new Array(64);
    count[0] = count[1] = 0;
    ihash[0] = 0x6a09e667;
    ihash[1] = 0xbb67ae85;
    ihash[2] = 0x3c6ef372;
    ihash[3] = 0xa54ff53a;
    ihash[4] = 0x510e527f;
    ihash[5] = 0x9b05688c;
    ihash[6] = 0x1f83d9ab;
    ihash[7] = 0x5be0cd19;
}
/* Transform a 512-bit message block */ function sha256_transform() {
    var a;
    var b;
    var c;
    var d;
    var e;
    var f;
    var g;
    var h;
    var T1;
    var T2;
    var W = new Array(16);
    /* Initialize registers with the previous intermediate value */ a = ihash[0];
    b = ihash[1];
    c = ihash[2];
    d = ihash[3];
    e = ihash[4];
    f = ihash[5];
    g = ihash[6];
    h = ihash[7];
    /* make 32-bit words */ for(var i = 0; i < 16; i++)W[i] = buffer[(i << 2) + 3] | buffer[(i << 2) + 2] << 8 | buffer[(i << 2) + 1] << 16 | buffer[i << 2] << 24;
    for(var j = 0; j < 64; j++){
        T1 = h + sha256_Sigma1(e) + choice(e, f, g) + K256[j];
        if (j < 16) T1 += W[j];
        else T1 += sha256_expand(W, j);
        T2 = sha256_Sigma0(a) + majority(a, b, c);
        h = g;
        g = f;
        f = e;
        e = safe_add(d, T1);
        d = c;
        c = b;
        b = a;
        a = safe_add(T1, T2);
    }
    /* Compute the current intermediate hash value */ ihash[0] += a;
    ihash[1] += b;
    ihash[2] += c;
    ihash[3] += d;
    ihash[4] += e;
    ihash[5] += f;
    ihash[6] += g;
    ihash[7] += h;
}
/* Read the next chunk of data and update the SHA256 computation */ function sha256_update(data, inputLen) {
    var i;
    var index;
    var curpos = 0;
    /* Compute number of bytes mod 64 */ index = count[0] >> 3 & 0x3f;
    var remainder = inputLen & 0x3f;
    /* Update number of bits */ if ((count[0] += inputLen << 3) < inputLen << 3) count[1]++;
    count[1] += inputLen >> 29;
    /* Transform as many times as possible */ for(i = 0; i + 63 < inputLen; i += 64){
        for(var j = index; j < 64; j++)buffer[j] = data.charCodeAt(curpos++);
        sha256_transform();
        index = 0;
    }
    /* Buffer remaining input */ for(var _j = 0; _j < remainder; _j++)buffer[_j] = data.charCodeAt(curpos++);
}
/* Finish the computation by operations such as padding */ function sha256_final() {
    var index = count[0] >> 3 & 0x3f;
    buffer[index++] = 0x80;
    if (index <= 56) for(var i = index; i < 56; i++)buffer[i] = 0;
    else {
        for(var _i = index; _i < 64; _i++)buffer[_i] = 0;
        sha256_transform();
        for(var _i2 = 0; _i2 < 56; _i2++)buffer[_i2] = 0;
    }
    buffer[56] = count[1] >>> 24 & 0xff;
    buffer[57] = count[1] >>> 16 & 0xff;
    buffer[58] = count[1] >>> 8 & 0xff;
    buffer[59] = count[1] & 0xff;
    buffer[60] = count[0] >>> 24 & 0xff;
    buffer[61] = count[0] >>> 16 & 0xff;
    buffer[62] = count[0] >>> 8 & 0xff;
    buffer[63] = count[0] & 0xff;
    sha256_transform();
}
/* Split the internal hash values into an array of bytes */ function sha256_encode_bytes() {
    var j = 0;
    var output = new Array(32);
    for(var i = 0; i < 8; i++){
        output[j++] = ihash[i] >>> 24 & 0xff;
        output[j++] = ihash[i] >>> 16 & 0xff;
        output[j++] = ihash[i] >>> 8 & 0xff;
        output[j++] = ihash[i] & 0xff;
    }
    return output;
}
/* Get the internal hash as a hex string */ function sha256_encode_hex() {
    var output = new String();
    for(var i = 0; i < 8; i++)for(var j = 28; j >= 0; j -= 4)output += sha256_hex_digits.charAt(ihash[i] >>> j & 0x0f);
    return output;
}
/* Main function: returns a hex string representing the SHA256 value of the
given data */ function digest(data) {
    sha256_init();
    sha256_update(data, data.length);
    sha256_final();
    return sha256_encode_hex();
}
var _default = digest;

},
"node_modules/@umijs/route-utils/es/transformRoute/transformRoute.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
__mako_require__.e(exports, {
    childrenPropsName: function() {
        return childrenPropsName;
    },
    default: function() {
        return _default;
    },
    getKeyByPath: function() {
        return getKeyByPath;
    },
    isUrl: function() {
        return isUrl;
    },
    stripQueryStringAndHashFromPath: function() {
        return stripQueryStringAndHashFromPath;
    }
});
var _interop_require_default = __mako_require__("@swc/helpers/_/_interop_require_default");
var _pathtoregexp = __mako_require__("node_modules/@umijs/route-utils/es/path-to-regexp.js");
var _sha265 = /*#__PURE__*/ _interop_require_default._(__mako_require__("node_modules/@umijs/route-utils/es/sha265.js"));
function _typeof(obj) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
    } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    }, _typeof(obj);
}
var _excluded = [
    "pro_layout_parentKeys",
    "children",
    "icon",
    "flatMenu",
    "indexRoute",
    "routes"
];
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function _createForOfIteratorHelper(o, allowArrayLike) {
    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
    if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i = 0;
            var F = function F() {};
            return {
                s: F,
                n: function n() {
                    if (i >= o.length) return {
                        done: true
                    };
                    return {
                        done: false,
                        value: o[i++]
                    };
                },
                e: function e(_e2) {
                    throw _e2;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return {
        s: function s() {
            it = it.call(o);
        },
        n: function n() {
            var step = it.next();
            normalCompletion = step.done;
            return step;
        },
        e: function e(_e3) {
            didErr = true;
            err = _e3;
        },
        f: function f() {
            try {
                if (!normalCompletion && it.return != null) it.return();
            } finally{
                if (didErr) throw err;
            }
        }
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
    };
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;
    _wrapNativeSuper = function _wrapNativeSuper(Class) {
        if (Class === null || !_isNativeFunction(Class)) return Class;
        if (typeof Class !== "function") throw new TypeError("Super expression must either be null or a function");
        if (typeof _cache !== "undefined") {
            if (_cache.has(Class)) return _cache.get(Class);
            _cache.set(Class, Wrapper);
        }
        function Wrapper() {
            return _construct(Class, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class.prototype, {
            constructor: {
                value: Wrapper,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
        return _setPrototypeOf(Wrapper, Class);
    };
    return _wrapNativeSuper(Class);
}
function _construct(Parent, args, Class) {
    if (_isNativeReflectConstruct()) _construct = Reflect.construct.bind();
    else _construct = function _construct(Parent, args, Class) {
        var a = [
            null
        ];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) _setPrototypeOf(instance, Class.prototype);
        return instance;
    };
    return _construct.apply(null, arguments);
}
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _isNativeFunction(fn) {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys.push.apply(keys, symbols);
    }
    return keys;
}
function _objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {
            _defineProperty(target, key, source[key]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
var childrenPropsName = 'routes';
function stripQueryStringAndHashFromPath(url) {
    return url.split('?')[0].split('#')[0];
}
var isUrl = function isUrl(path) {
    if (!path.startsWith('http')) return false;
    try {
        var url = new URL(path);
        return !!url;
    } catch (error) {
        return false;
    }
};
var getKeyByPath = function getKeyByPath(item) {
    var path = item.path;
    if (!path || path === '/') // 如果还是没有，用对象的hash 生成一个
    try {
        return "/".concat((0, _sha265.default)(JSON.stringify(item)));
    } catch (error) {}
    return path ? stripQueryStringAndHashFromPath(path) : path;
};
/**
 * 获取locale，增加了一个功能，如果 locale = false，将不使用国际化
 * @param item
 * @param parentName
 */ var getItemLocaleName = function getItemLocaleName(item, parentName) {
    var name = item.name, locale = item.locale; // 如果配置了 locale 并且 locale 为 false或 ""
    if ('locale' in item && locale === false || !name) return false;
    return item.locale || "".concat(parentName, ".").concat(name);
};
/**
 * 如果不是 / 开头的和父节点做一下合并
 * 如果是 / 开头的不作任何处理
 * 如果是 url 也直接返回
 * @param path
 * @param parentPath
 */ var mergePath = function mergePath() {
    var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    var parentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';
    if (path.endsWith('/*')) return path.replace('/*', '/');
    if ((path || parentPath).startsWith('/')) return path;
    if (isUrl(path)) return path;
    return "/".concat(parentPath, "/").concat(path).replace(/\/\//g, '/').replace(/\/\//g, '/');
}; // bigfish 的兼容准话
var bigfishCompatibleConversions = function bigfishCompatibleConversions(route, props) {
    var _route$menu = route.menu, menu = _route$menu === void 0 ? {} : _route$menu, indexRoute = route.indexRoute, _route$path = route.path, path = _route$path === void 0 ? '' : _route$path;
    var routerChildren = route.children || [];
    var _menu$name = menu.name, name = _menu$name === void 0 ? route.name : _menu$name, _menu$icon = menu.icon, icon = _menu$icon === void 0 ? route.icon : _menu$icon, _menu$hideChildren = menu.hideChildren, hideChildren = _menu$hideChildren === void 0 ? route.hideChildren : _menu$hideChildren, _menu$flatMenu = menu.flatMenu, flatMenu = _menu$flatMenu === void 0 ? route.flatMenu : _menu$flatMenu; // 兼容平铺式写法
    // 拼接 childrenRoutes, 处理存在 indexRoute 时的逻辑
    var childrenList = indexRoute && // 如果只有 redirect,不用处理的
    Object.keys(indexRoute).join(',') !== 'redirect' ? [
        _objectSpread({
            path: path,
            menu: menu
        }, indexRoute)
    ].concat(routerChildren || []) : routerChildren; // 拼接返回的 menu 数据
    var result = _objectSpread({}, route);
    if (name) result.name = name;
    if (icon) result.icon = icon;
    if (childrenList && childrenList.length) {
        /** 在菜单中隐藏子项 */ if (hideChildren) {
            delete result.children;
            return result;
        } // 需要重新进行一次
        var finalChildren = formatter(_objectSpread(_objectSpread({}, props), {}, {
            data: childrenList
        }), route);
        /** 在菜单中只隐藏此项，子项往上提，仍旧展示 */ if (flatMenu) return finalChildren;
        delete result[childrenPropsName];
    }
    return result;
};
var notNullArray = function notNullArray(value) {
    return Array.isArray(value) && value.length > 0;
};
/**
 *
 * @param props
 * @param parent
 */ function formatter(props) {
    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        path: '/'
    };
    var data = props.data, formatMessage = props.formatMessage, parentName = props.parentName, menuLocale = props.locale;
    if (!data || !Array.isArray(data)) return [];
    return data.filter(function(item) {
        if (!item) return false;
        if (notNullArray(item.children)) return true;
        if (item.path) return true;
        if (item.originPath) return true;
        if (item.layout) return true; // 重定向
        if (item.redirect) return false;
        if (item.unaccessible) return false;
        return false;
    }).filter(function(item) {
        var _item$menu, _item$menu2;
        if ((item === null || item === void 0 ? void 0 : (_item$menu = item.menu) === null || _item$menu === void 0 ? void 0 : _item$menu.name) || (item === null || item === void 0 ? void 0 : item.flatMenu) || (item === null || item === void 0 ? void 0 : (_item$menu2 = item.menu) === null || _item$menu2 === void 0 ? void 0 : _item$menu2.flatMenu)) return true;
         // 显示指定在 menu 中隐藏该项
        // layout 插件的功能，其实不应该存在的
        if (item.menu === false) return false;
        return true;
    }).map(function(finallyItem) {
        var item = _objectSpread(_objectSpread({}, finallyItem), {}, {
            path: finallyItem.path || finallyItem.originPath
        });
        if (!item.children && item[childrenPropsName]) {
            item.children = item[childrenPropsName];
            delete item[childrenPropsName];
        } // 是否没有权限查看
        // 这样就不会显示，是一个兼容性的方式
        if (item.unaccessible) // eslint-disable-next-line no-param-reassign
        delete item.name;
        if (item.path === '*') item.path = '.';
        if (item.path === '/*') item.path = '.';
        if (!item.path && item.originPath) item.path = item.originPath;
        return item;
    }).map(function() {
        var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
            path: '/'
        };
        var routerChildren = item.children || item[childrenPropsName] || [];
        var path = mergePath(item.path, parent ? parent.path : '/');
        var name = item.name;
        var locale = getItemLocaleName(item, parentName || 'menu'); // if enableMenuLocale use item.name,
        // close menu international
        var localeName = locale !== false && menuLocale !== false && formatMessage && locale ? formatMessage({
            id: locale,
            defaultMessage: name
        }) : name;
        var _parent$pro_layout_pa = parent.pro_layout_parentKeys, pro_layout_parentKeys = _parent$pro_layout_pa === void 0 ? [] : _parent$pro_layout_pa, children = parent.children, icon = parent.icon, flatMenu = parent.flatMenu, indexRoute = parent.indexRoute, routes = parent.routes, restParent = _objectWithoutProperties(parent, _excluded);
        var item_pro_layout_parentKeys = new Set([].concat(_toConsumableArray(pro_layout_parentKeys), _toConsumableArray(item.parentKeys || [])));
        if (parent.key) item_pro_layout_parentKeys.add(parent.key);
        var finallyItem = _objectSpread(_objectSpread(_objectSpread({}, restParent), {}, {
            menu: undefined
        }, item), {}, {
            path: path,
            locale: locale,
            key: item.key || getKeyByPath(_objectSpread(_objectSpread({}, item), {}, {
                path: path
            })),
            pro_layout_parentKeys: Array.from(item_pro_layout_parentKeys).filter(function(key) {
                return key && key !== '/';
            })
        });
        if (localeName) finallyItem.name = localeName;
        else delete finallyItem.name;
        if (finallyItem.menu === undefined) delete finallyItem.menu;
        if (notNullArray(routerChildren)) {
            var formatterChildren = formatter(_objectSpread(_objectSpread({}, props), {}, {
                data: routerChildren,
                parentName: locale || ''
            }), finallyItem);
            if (notNullArray(formatterChildren)) finallyItem.children = formatterChildren;
        }
        return bigfishCompatibleConversions(finallyItem, props);
    }).flat(1);
}
/**
 * 删除 hideInMenu 和 item.name 不存在的
 */ var defaultFilterMenuData = function defaultFilterMenuData() {
    var menuData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    return menuData.filter(function(item) {
        return item && (item.name || notNullArray(item.children)) && !item.hideInMenu && !item.redirect;
    }).map(function(item) {
        var newItem = _objectSpread({}, item);
        var routerChildren = newItem.children || item[childrenPropsName] || [];
        delete newItem[childrenPropsName];
        if (notNullArray(routerChildren) && !newItem.hideChildrenInMenu && routerChildren.some(function(child) {
            return child && !!child.name;
        })) {
            var newChildren = defaultFilterMenuData(routerChildren);
            if (newChildren.length) return _objectSpread(_objectSpread({}, newItem), {}, {
                children: newChildren
            });
        }
        return _objectSpread({}, item);
    }).filter(function(item) {
        return item;
    });
};
/**
 * support pathToRegexp get string
 */ var RouteListMap = /*#__PURE__*/ function(_Map) {
    _inherits(RouteListMap, _Map);
    var _super = _createSuper(RouteListMap);
    function RouteListMap() {
        _classCallCheck(this, RouteListMap);
        return _super.apply(this, arguments);
    }
    _createClass(RouteListMap, [
        {
            key: "get",
            value: function get(pathname) {
                var routeValue;
                try {
                    // eslint-disable-next-line no-restricted-syntax
                    var _iterator = _createForOfIteratorHelper(this.entries()), _step;
                    try {
                        for(_iterator.s(); !(_step = _iterator.n()).done;){
                            var _step$value = _slicedToArray(_step.value, 2), key = _step$value[0], value = _step$value[1];
                            var path = stripQueryStringAndHashFromPath(key);
                            if (!isUrl(key) && (0, _pathtoregexp.pathToRegexp)(path, []).test(pathname)) {
                                routeValue = value;
                                break;
                            }
                        }
                    } catch (err) {
                        _iterator.e(err);
                    } finally{
                        _iterator.f();
                    }
                } catch (error) {
                    routeValue = undefined;
                }
                return routeValue;
            }
        }
    ]);
    return RouteListMap;
}(/*#__PURE__*/ _wrapNativeSuper(Map));
/**
 * 获取面包屑映射
 * @param MenuDataItem[] menuData 菜单配置
 */ var getBreadcrumbNameMap = function getBreadcrumbNameMap(menuData) {
    // Map is used to ensure the order of keys
    var routerMap = new RouteListMap();
    var flattenMenuData = function flattenMenuData(data, parent) {
        data.forEach(function(menuItem) {
            var routerChildren = menuItem.children || menuItem[childrenPropsName] || [];
            if (notNullArray(routerChildren)) flattenMenuData(routerChildren, menuItem);
             // Reduce memory usage
            var path = mergePath(menuItem.path, parent ? parent.path : '/');
            routerMap.set(stripQueryStringAndHashFromPath(path), menuItem);
        });
    };
    flattenMenuData(menuData);
    return routerMap;
};
var clearChildren = function clearChildren() {
    var menuData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    return menuData.map(function(item) {
        var routerChildren = item.children || item[childrenPropsName];
        if (notNullArray(routerChildren)) {
            var newChildren = clearChildren(routerChildren);
            if (newChildren.length) return _objectSpread({}, item);
        }
        var finallyItem = _objectSpread({}, item);
        delete finallyItem[childrenPropsName];
        delete finallyItem.children;
        return finallyItem;
    }).filter(function(item) {
        return item;
    });
};
/**
 * @param routeList 路由配置
 * @param locale 是否使用国际化
 * @param formatMessage 国际化的程序
 * @param ignoreFilter 是否筛选掉不展示的 menuItem 项，plugin-layout需要所有项目来计算布局样式
 * @returns { breadcrumb, menuData}
 */ var transformRoute = function transformRoute(routeList, locale, formatMessage, ignoreFilter) {
    var originalMenuData = formatter({
        data: routeList,
        formatMessage: formatMessage,
        locale: locale
    });
    var menuData = ignoreFilter ? clearChildren(originalMenuData) : defaultFilterMenuData(originalMenuData); // Map type used for internal logic
    var breadcrumb = getBreadcrumbNameMap(originalMenuData);
    return {
        breadcrumb: breadcrumb,
        menuData: menuData
    };
};
var _default = transformRoute;

},
"node_modules/path-to-regexp/dist/index.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
exports.TokenData = void 0;
exports.parse = parse;
exports.compile = compile;
exports.match = match;
exports.pathToRegexp = pathToRegexp;
exports.stringify = stringify;
const DEFAULT_DELIMITER = "/";
const NOOP_VALUE = (value)=>value;
const ID_START = /^[$_\p{ID_Start}]$/u;
const ID_CONTINUE = /^[$\u200c\u200d\p{ID_Continue}]$/u;
const DEBUG_URL = "https://git.new/pathToRegexpError";
const SIMPLE_TOKENS = {
    // Groups.
    "{": "{",
    "}": "}",
    // Reserved.
    "(": "(",
    ")": ")",
    "[": "[",
    "]": "]",
    "+": "+",
    "?": "?",
    "!": "!"
};
/**
 * Escape text for stringify to path.
 */ function escapeText(str) {
    return str.replace(/[{}()\[\]+?!:*]/g, "\\$&");
}
/**
 * Escape a regular expression string.
 */ function escape(str) {
    return str.replace(/[.+*?^${}()[\]|/\\]/g, "\\$&");
}
/**
 * Tokenize input string.
 */ function* lexer(str) {
    const chars = [
        ...str
    ];
    let i = 0;
    function name() {
        let value = "";
        if (ID_START.test(chars[++i])) {
            value += chars[i];
            while(ID_CONTINUE.test(chars[++i]))value += chars[i];
        } else if (chars[i] === '"') {
            let pos = i;
            while(i < chars.length){
                if (chars[++i] === '"') {
                    i++;
                    pos = 0;
                    break;
                }
                if (chars[i] === "\\") value += chars[++i];
                else value += chars[i];
            }
            if (pos) throw new TypeError(`Unterminated quote at ${pos}: ${DEBUG_URL}`);
        }
        if (!value) throw new TypeError(`Missing parameter name at ${i}: ${DEBUG_URL}`);
        return value;
    }
    while(i < chars.length){
        const value = chars[i];
        const type = SIMPLE_TOKENS[value];
        if (type) yield {
            type,
            index: i++,
            value
        };
        else if (value === "\\") yield {
            type: "ESCAPED",
            index: i++,
            value: chars[i++]
        };
        else if (value === ":") {
            const value = name();
            yield {
                type: "PARAM",
                index: i,
                value
            };
        } else if (value === "*") {
            const value = name();
            yield {
                type: "WILDCARD",
                index: i,
                value
            };
        } else yield {
            type: "CHAR",
            index: i,
            value: chars[i++]
        };
    }
    return {
        type: "END",
        index: i,
        value: ""
    };
}
class Iter {
    constructor(tokens){
        this.tokens = tokens;
    }
    peek() {
        if (!this._peek) {
            const next = this.tokens.next();
            this._peek = next.value;
        }
        return this._peek;
    }
    tryConsume(type) {
        const token = this.peek();
        if (token.type !== type) return;
        this._peek = undefined; // Reset after consumed.
        return token.value;
    }
    consume(type) {
        const value = this.tryConsume(type);
        if (value !== undefined) return value;
        const { type: nextType, index } = this.peek();
        throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}: ${DEBUG_URL}`);
    }
    text() {
        let result = "";
        let value;
        while(value = this.tryConsume("CHAR") || this.tryConsume("ESCAPED"))result += value;
        return result;
    }
}
/**
 * Tokenized path instance.
 */ class TokenData {
    constructor(tokens){
        this.tokens = tokens;
    }
}
exports.TokenData = TokenData;
/**
 * Parse a string for the raw tokens.
 */ function parse(str, options = {}) {
    const { encodePath = NOOP_VALUE } = options;
    const it = new Iter(lexer(str));
    function consume(endType) {
        const tokens = [];
        while(true){
            const path = it.text();
            if (path) tokens.push({
                type: "text",
                value: encodePath(path)
            });
            const param = it.tryConsume("PARAM");
            if (param) {
                tokens.push({
                    type: "param",
                    name: param
                });
                continue;
            }
            const wildcard = it.tryConsume("WILDCARD");
            if (wildcard) {
                tokens.push({
                    type: "wildcard",
                    name: wildcard
                });
                continue;
            }
            const open = it.tryConsume("{");
            if (open) {
                tokens.push({
                    type: "group",
                    tokens: consume("}")
                });
                continue;
            }
            it.consume(endType);
            return tokens;
        }
    }
    const tokens = consume("END");
    return new TokenData(tokens);
}
/**
 * Compile a string to a template function for the path.
 */ function compile(path, options = {}) {
    const { encode = encodeURIComponent, delimiter = DEFAULT_DELIMITER } = options;
    const data = path instanceof TokenData ? path : parse(path, options);
    const fn = tokensToFunction(data.tokens, delimiter, encode);
    return function path(data = {}) {
        const [path1, ...missing] = fn(data);
        if (missing.length) throw new TypeError(`Missing parameters: ${missing.join(", ")}`);
        return path1;
    };
}
function tokensToFunction(tokens, delimiter, encode) {
    const encoders = tokens.map((token)=>tokenToFunction(token, delimiter, encode));
    return (data)=>{
        const result = [
            ""
        ];
        for (const encoder of encoders){
            const [value, ...extras] = encoder(data);
            result[0] += value;
            result.push(...extras);
        }
        return result;
    };
}
/**
 * Convert a single token into a path building function.
 */ function tokenToFunction(token, delimiter, encode) {
    if (token.type === "text") return ()=>[
            token.value
        ];
    if (token.type === "group") {
        const fn = tokensToFunction(token.tokens, delimiter, encode);
        return (data)=>{
            const [value, ...missing] = fn(data);
            if (!missing.length) return [
                value
            ];
            return [
                ""
            ];
        };
    }
    const encodeValue = encode || NOOP_VALUE;
    if (token.type === "wildcard" && encode !== false) return (data)=>{
        const value = data[token.name];
        if (value == null) return [
            "",
            token.name
        ];
        if (!Array.isArray(value) || value.length === 0) throw new TypeError(`Expected "${token.name}" to be a non-empty array`);
        return [
            value.map((value, index)=>{
                if (typeof value !== "string") throw new TypeError(`Expected "${token.name}/${index}" to be a string`);
                return encodeValue(value);
            }).join(delimiter)
        ];
    };
    return (data)=>{
        const value = data[token.name];
        if (value == null) return [
            "",
            token.name
        ];
        if (typeof value !== "string") throw new TypeError(`Expected "${token.name}" to be a string`);
        return [
            encodeValue(value)
        ];
    };
}
/**
 * Transform a path into a match function.
 */ function match(path, options = {}) {
    const { decode = decodeURIComponent, delimiter = DEFAULT_DELIMITER } = options;
    const { regexp, keys } = pathToRegexp(path, options);
    const decoders = keys.map((key)=>{
        if (decode === false) return NOOP_VALUE;
        if (key.type === "param") return decode;
        return (value)=>value.split(delimiter).map(decode);
    });
    return function match(input) {
        const m = regexp.exec(input);
        if (!m) return false;
        const path = m[0];
        const params = Object.create(null);
        for(let i = 1; i < m.length; i++){
            if (m[i] === undefined) continue;
            const key = keys[i - 1];
            const decoder = decoders[i - 1];
            params[key.name] = decoder(m[i]);
        }
        return {
            path,
            params
        };
    };
}
function pathToRegexp(path, options = {}) {
    const { delimiter = DEFAULT_DELIMITER, end = true, sensitive = false, trailing = true } = options;
    const keys = [];
    const sources = [];
    const flags = sensitive ? "" : "i";
    const paths = Array.isArray(path) ? path : [
        path
    ];
    const items = paths.map((path)=>path instanceof TokenData ? path : parse(path, options));
    for (const { tokens } of items)for (const seq of flatten(tokens, 0, [])){
        const regexp = sequenceToRegExp(seq, delimiter, keys);
        sources.push(regexp);
    }
    let pattern = `^(?:${sources.join("|")})`;
    if (trailing) pattern += `(?:${escape(delimiter)}$)?`;
    pattern += end ? "$" : `(?=${escape(delimiter)}|$)`;
    const regexp = new RegExp(pattern, flags);
    return {
        regexp,
        keys
    };
}
/**
 * Generate a flat list of sequence tokens from the given tokens.
 */ function* flatten(tokens, index, init) {
    if (index === tokens.length) return yield init;
    const token = tokens[index];
    if (token.type === "group") {
        const fork = init.slice();
        for (const seq of flatten(token.tokens, 0, fork))yield* flatten(tokens, index + 1, seq);
    } else init.push(token);
    yield* flatten(tokens, index + 1, init);
}
/**
 * Transform a flat sequence of tokens into a regular expression.
 */ function sequenceToRegExp(tokens, delimiter, keys) {
    let result = "";
    let backtrack = "";
    let isSafeSegmentParam = true;
    for(let i = 0; i < tokens.length; i++){
        const token = tokens[i];
        if (token.type === "text") {
            result += escape(token.value);
            backtrack += token.value;
            isSafeSegmentParam || (isSafeSegmentParam = token.value.includes(delimiter));
            continue;
        }
        if (token.type === "param" || token.type === "wildcard") {
            if (!isSafeSegmentParam && !backtrack) throw new TypeError(`Missing text after "${token.name}": ${DEBUG_URL}`);
            if (token.type === "param") result += `(${negate(delimiter, isSafeSegmentParam ? "" : backtrack)}+)`;
            else result += `([\\s\\S]+)`;
            keys.push(token);
            backtrack = "";
            isSafeSegmentParam = false;
            continue;
        }
    }
    return result;
}
function negate(delimiter, backtrack) {
    if (backtrack.length < 2) {
        if (delimiter.length < 2) return `[^${escape(delimiter + backtrack)}]`;
        return `(?:(?!${escape(delimiter)})[^${escape(backtrack)}])`;
    }
    if (delimiter.length < 2) return `(?:(?!${escape(backtrack)})[^${escape(delimiter)}])`;
    return `(?:(?!${escape(backtrack)}|${escape(delimiter)})[\\s\\S])`;
}
/**
 * Stringify token data into a path string.
 */ function stringify(data) {
    return data.tokens.map(function stringifyToken(token, index, tokens) {
        if (token.type === "text") return escapeText(token.value);
        if (token.type === "group") return `{${token.tokens.map(stringifyToken).join("")}}`;
        const isSafe = isNameSafe(token.name) && isNextNameSafe(tokens[index + 1]);
        const key = isSafe ? token.name : JSON.stringify(token.name);
        if (token.type === "param") return `:${key}`;
        if (token.type === "wildcard") return `*${key}`;
        throw new TypeError(`Unexpected token: ${token}`);
    }).join("");
}
function isNameSafe(name) {
    const [first, ...rest] = name;
    if (!ID_START.test(first)) return false;
    return rest.every((char)=>ID_CONTINUE.test(char));
}
function isNextNameSafe(token) {
    if ((token === null || token === void 0 ? void 0 : token.type) !== "text") return true;
    return !ID_CONTINUE.test(token.value[0]);
} //# sourceMappingURL=index.js.map

},
"node_modules/rc-util/lib/Dom/canUseDom.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
exports.default = canUseDom;
function canUseDom() {
    return !!(typeof window !== 'undefined' && window.document && window.document.createElement);
}

},
"node_modules/rc-util/lib/Dom/contains.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
exports.default = contains;
function contains(root, n) {
    if (!root) return false;
    // Use native if support
    if (root.contains) return root.contains(n);
    // `document.contains` not support with IE11
    var node = n;
    while(node){
        if (node === root) return true;
        node = node.parentNode;
    }
    return false;
}

},
"node_modules/rc-util/lib/Dom/dynamicCSS.js": function (module, exports, __mako_require__){
"use strict";
var _interopRequireDefault = __mako_require__("node_modules/@babel/runtime/helpers/interopRequireDefault.js").default;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.clearContainerCache = clearContainerCache;
exports.injectCSS = injectCSS;
exports.removeCSS = removeCSS;
exports.updateCSS = updateCSS;
var _objectSpread2 = _interopRequireDefault(__mako_require__("node_modules/@babel/runtime/helpers/objectSpread2.js"));
var _canUseDom = _interopRequireDefault(__mako_require__("node_modules/rc-util/lib/Dom/canUseDom.js"));
var _contains = _interopRequireDefault(__mako_require__("node_modules/rc-util/lib/Dom/contains.js"));
var APPEND_ORDER = 'data-rc-order';
var APPEND_PRIORITY = 'data-rc-priority';
var MARK_KEY = "rc-util-key";
var containerCache = new Map();
function getMark() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, mark = _ref.mark;
    if (mark) return mark.startsWith('data-') ? mark : "data-".concat(mark);
    return MARK_KEY;
}
function getContainer(option) {
    if (option.attachTo) return option.attachTo;
    var head = document.querySelector('head');
    return head || document.body;
}
function getOrder(prepend) {
    if (prepend === 'queue') return 'prependQueue';
    return prepend ? 'prepend' : 'append';
}
/**
 * Find style which inject by rc-util
 */ function findStyles(container) {
    return Array.from((containerCache.get(container) || container).children).filter(function(node) {
        return node.tagName === 'STYLE';
    });
}
function injectCSS(css) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    if (!(0, _canUseDom.default)()) return null;
    var csp = option.csp, prepend = option.prepend, _option$priority = option.priority, priority = _option$priority === void 0 ? 0 : _option$priority;
    var mergedOrder = getOrder(prepend);
    var isPrependQueue = mergedOrder === 'prependQueue';
    var styleNode = document.createElement('style');
    styleNode.setAttribute(APPEND_ORDER, mergedOrder);
    if (isPrependQueue && priority) styleNode.setAttribute(APPEND_PRIORITY, "".concat(priority));
    if (csp !== null && csp !== void 0 && csp.nonce) styleNode.nonce = csp === null || csp === void 0 ? void 0 : csp.nonce;
    styleNode.innerHTML = css;
    var container = getContainer(option);
    var firstChild = container.firstChild;
    if (prepend) {
        // If is queue `prepend`, it will prepend first style and then append rest style
        if (isPrependQueue) {
            var existStyle = (option.styles || findStyles(container)).filter(function(node) {
                // Ignore style which not injected by rc-util with prepend
                if (![
                    'prepend',
                    'prependQueue'
                ].includes(node.getAttribute(APPEND_ORDER))) return false;
                // Ignore style which priority less then new style
                var nodePriority = Number(node.getAttribute(APPEND_PRIORITY) || 0);
                return priority >= nodePriority;
            });
            if (existStyle.length) {
                container.insertBefore(styleNode, existStyle[existStyle.length - 1].nextSibling);
                return styleNode;
            }
        }
        // Use `insertBefore` as `prepend`
        container.insertBefore(styleNode, firstChild);
    } else container.appendChild(styleNode);
    return styleNode;
}
function findExistNode(key) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var container = getContainer(option);
    return (option.styles || findStyles(container)).find(function(node) {
        return node.getAttribute(getMark(option)) === key;
    });
}
function removeCSS(key) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var existNode = findExistNode(key, option);
    if (existNode) {
        var container = getContainer(option);
        container.removeChild(existNode);
    }
}
/**
 * qiankun will inject `appendChild` to insert into other
 */ function syncRealContainer(container, option) {
    var cachedRealContainer = containerCache.get(container);
    // Find real container when not cached or cached container removed
    if (!cachedRealContainer || !(0, _contains.default)(document, cachedRealContainer)) {
        var placeholderStyle = injectCSS('', option);
        var parentNode = placeholderStyle.parentNode;
        containerCache.set(container, parentNode);
        container.removeChild(placeholderStyle);
    }
}
/**
 * manually clear container cache to avoid global cache in unit testes
 */ function clearContainerCache() {
    containerCache.clear();
}
function updateCSS(css, key) {
    var originOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var container = getContainer(originOption);
    var styles = findStyles(container);
    var option = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, originOption), {}, {
        styles: styles
    });
    // Sync real parent
    syncRealContainer(container, option);
    var existNode = findExistNode(key, option);
    if (existNode) {
        var _option$csp, _option$csp2;
        if ((_option$csp = option.csp) !== null && _option$csp !== void 0 && _option$csp.nonce && existNode.nonce !== ((_option$csp2 = option.csp) === null || _option$csp2 === void 0 ? void 0 : _option$csp2.nonce)) {
            var _option$csp3;
            existNode.nonce = (_option$csp3 = option.csp) === null || _option$csp3 === void 0 ? void 0 : _option$csp3.nonce;
        }
        if (existNode.innerHTML !== css) existNode.innerHTML = css;
        return existNode;
    }
    var newNode = injectCSS(css, option);
    newNode.setAttribute(getMark(option), key);
    return newNode;
}

},
"node_modules/rc-util/lib/Dom/shadow.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
exports.getShadowRoot = getShadowRoot;
exports.inShadow = inShadow;
function getRoot(ele) {
    var _ele$getRootNode;
    return ele === null || ele === void 0 || (_ele$getRootNode = ele.getRootNode) === null || _ele$getRootNode === void 0 ? void 0 : _ele$getRootNode.call(ele);
}
/**
 * Check if is in shadowRoot
 */ function inShadow(ele) {
    return getRoot(ele) instanceof ShadowRoot;
}
/**
 * Return shadowRoot if possible
 */ function getShadowRoot(ele) {
    return inShadow(ele) ? getRoot(ele) : null;
}

},
"node_modules/rc-util/lib/warning.js": function (module, exports, __mako_require__){
"use strict";
__mako_require__.d(exports, "__esModule", {
    value: true
});
exports.call = call;
exports.default = void 0;
exports.note = note;
exports.noteOnce = noteOnce;
exports.preMessage = void 0;
exports.resetWarned = resetWarned;
exports.warning = warning;
exports.warningOnce = warningOnce;
/* eslint-disable no-console */ var warned = {};
var preWarningFns = [];
/**
 * Pre warning enable you to parse content before console.error.
 * Modify to null will prevent warning.
 */ var preMessage = exports.preMessage = function preMessage(fn) {
    preWarningFns.push(fn);
};
/**
 * Warning if condition not match.
 * @param valid Condition
 * @param message Warning message
 * @example
 * ```js
 * warning(false, 'some error'); // print some error
 * warning(true, 'some error'); // print nothing
 * warning(1 === 2, 'some error'); // print some error
 * ```
 */ function warning(valid, message) {
    if (!valid && console !== undefined) {
        var finalMessage = preWarningFns.reduce(function(msg, preMessageFn) {
            return preMessageFn(msg !== null && msg !== void 0 ? msg : '', 'warning');
        }, message);
        if (finalMessage) console.error("Warning: ".concat(finalMessage));
    }
}
/** @see Similar to {@link warning} */ function note(valid, message) {
    if (!valid && console !== undefined) {
        var finalMessage = preWarningFns.reduce(function(msg, preMessageFn) {
            return preMessageFn(msg !== null && msg !== void 0 ? msg : '', 'note');
        }, message);
        if (finalMessage) console.warn("Note: ".concat(finalMessage));
    }
}
function resetWarned() {
    warned = {};
}
function call(method, valid, message) {
    if (!valid && !warned[message]) {
        method(false, message);
        warned[message] = true;
    }
}
/** @see Same as {@link warning}, but only warn once for the same message */ function warningOnce(valid, message) {
    call(warning, valid, message);
}
/** @see Same as {@link warning}, but only warn once for the same message */ function noteOnce(valid, message) {
    call(note, valid, message);
}
warningOnce.preMessage = preMessage;
warningOnce.resetWarned = resetWarned;
warningOnce.noteOnce = noteOnce;
var _default = exports.default = warningOnce;

},
 }]);
//# sourceMappingURL=vendors_3-async.js.map